/* 
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
$(window).load(function() {
    $(".loader").fadeOut("slow");
})

$(document).ready(function() {
    //$("#showaddvul1").hide();
    $("#addRootCauseDetail").hide();
    $("#editaddRootCauseDetail").hide();
    $("#addRootCauseDetail").hide();
    $("#rootCauseDetail").val("");
    $("#editrootCauseDetail").val("");
    $("#showvul").hide();
    $(".mandStart").show();

//-Modified for-US38739 - Mandatory field reqs missing -
    //addVulnerabilityPage

    //Add new vulnerability
    $("#addVulnerability").click(function() {
       // alert();
       if (nicEditors.findEditor("vulnerabilityDescription").getContent() === '<br>'){
            $("#vulnerabilityDescription").val("");
        } else {
            $("#vulnerabilityDescription").val(nicEditors.findEditor("vulnerabilityDescription").getContent());
        }

        if (nicEditors.findEditor("technicalDetails").getContent() === '<br>'){
            $("#technicalDetails").val("");
        } else {
            $("#technicalDetails").val(nicEditors.findEditor("technicalDetails").getContent());
        }

        if (nicEditors.findEditor("impactDetail").getContent() === '<br>'){
            $("#impactDetail").val("");
        } else {
            $("#impactDetail").val(nicEditors.findEditor("impactDetail").getContent());
        }

        if (nicEditors.findEditor("recommendationId").getContent() === '<br>'){
            $("#recommendationId").val("");
        } else {
            $("#recommendationId").val(nicEditors.findEditor("recommendationId").getContent());
        }

        selControlCodes();
        if (saveVulnerabilityValidate())
        {
            document.addnewvulnerability.action = "addnewvulnerability.htm";
            document.addnewvulnerability.submit();
        }
    });

    //Update vulnerability
    $("#updateVulnerability").click(function() {
        if (nicEditors.findEditor("vulnerabilityDescription").getContent() === '<br>'){
            $("#vulnerabilityDescription").val("");
        } else {
            $("#vulnerabilityDescription").val(nicEditors.findEditor("vulnerabilityDescription").getContent());
        }
        if (nicEditors.findEditor("technicalDetails").getContent() === '<br>'){
            $("#technicalDetails").val("");
        } else {
            $("#technicalDetails").val(nicEditors.findEditor("technicalDetails").getContent());
        }

        if (nicEditors.findEditor("impactDetail").getContent() === '<br>'){
            $("#impactDetail").val("");
        } else {
            $("#impactDetail").val(nicEditors.findEditor("impactDetail").getContent());
        }

        if (nicEditors.findEditor("recommendationId").getContent() === '<br>'){
            $("#recommendationId").val("");
        } else {
            $("#recommendationId").val(nicEditors.findEditor("recommendationId").getContent());
        }
        selControlCodes();
        if (updateVulnerabilityValidate()) {
            
            document.addnewvulnerability.action = "updatevulnerability.htm";
            document.addnewvulnerability.submit();
        }
    });

    $('.fixme1').fixheadertable({
        colratio: [50, 170, , 350],
        zebra: false,
        height: 300,
        whiteSpace: 'normal'
    });

    $('.fixme2').fixheadertable({
        colratio: [100, ],
        zebra: false,
        height: 200,
        whiteSpace: 'normal'
    });

    $('.fixme3').fixheadertable({
        zebra: false,
        whiteSpace: 'normal'
    });

    $('.fixme4').fixheadertable({
        colratio: [50, 100, , 150, 120],
        zebra: true,
        height: 200,
        whiteSpace: 'normal'
    });

    $('.fixme5').fixheadertable({
        colratio: [50, 150, , 150],
        zebra: true,
        height: 300,
        whiteSpace: 'normal'
    });

    $('.fixme6').fixheadertable({
        colratio: [150, , 150, 750],
        zebra: true,
        whiteSpace: 'normal'
    });

    $(".display").treeTable();
    $(".getcontrols").hide();
    $("#showcontrols").click(function()
    {
        $(".getcontrols").show();

    });
    
    $("#searchVulnerabilities").click(function()
    {
        var enccode = $("#encEngagementCode").val();
        var pgno = $("#pgcnt").val();
        document.removeVulnerabilityForm.action = "reviewvulnerability.htm?cgenk=" + enccode + "&pgcnt=" + pgno;
        document.removeVulnerabilityForm.submit();
    });
    
    $("#fnRefreshFindings").click(function()
    {
        document.refreshFindingListForm.action = "reviewvulnerability.htm";
        document.refreshFindingListForm.submit();
    });
    
    $("#reviewVulnerabilityBreadcrumb").click(function()
    {
        $("#pgname").val("");
        document.cancelReviewVulnerabilityForm.action = "reviewvulnerability.htm";
        document.cancelReviewVulnerabilityForm.submit();
    });
    
    $("#addVulnerabilityDetails").click(function()
    {
        $("#saveCancelButton").show();
        $("#showvul").hide();
        $("#errorCheckboxValidation").html("");

        document.removeVulnerabilityForm.action = "addvulnerabilityview.htm";
        document.removeVulnerabilityForm.submit();
    });
    $("#editVulnerabilityID").click(function()
    {
        $("#showvul").show();
        $("#showaddvul1").hide();
        $("#saveCancelButton").hide();
        $("#errorCheckboxValidation").html("");
    });
    $("#rootCauseDetail").change(function()
    {
        // alert($(this).find('option:selected').val());
        if ($(this).find('option:selected').val() === 'Other') {
            $("#addRootCauseDetail").show();
        } else
        {
            $("#addRootCauseDetail").hide();

        }
    });

    $('.rootCause').each(function() {
        if ($(this).find('option:selected').val() === 'OTH') {
            $("#addRootCauseDetail").show();
        } else {
            $("#addRootCauseDetail").hide();
        }
    });

    $("#editrootCauseDetail").change(function()
    {
        if ($(this).find('option:selected').val() === 'Other') {

            $("#editaddRootCauseDetail").show();

        } else
        {
            $("#editaddRootCauseDetail").hide();

        }
    });

//    $('tr:odd').addClass('ux-tabl-alt-row');



    $("#removeVulnerbility").click(function() {
        var flag = false;
        var checkboxes = new Array();
        $('.checkboxGroup').each(function() {
            if (this.checked) {
                var id = $(this).attr('id');
                checkboxes.push(id);
                flag = true;
                $("#errorCheckboxValidation").html("");
            }
        });
        if (!flag) {
            $("#errorCheckboxValidation").html("<font class='ux-msg-error-under' style='margin-top: -16px;' color='red'>Please select at least one Finding</font>");
            return false;
        } else {
            javascript:deletePopup(1);
        }
    });

    $("#deleteVulnerability").click(function() {
        document.removeVulnerabilityForm.action = "deletevulnerability.htm";
        document.removeVulnerabilityForm.submit();
    });
    
    //Start: For export excel
    $("#exportToExcel").click(function() {
        var flag = false;
        var checkboxes = new Array();
        $('.checkboxGroup').each(function() {
            if (this.checked) {
                var id = $(this).attr('id');
                checkboxes.push(id);
                flag = true;
                $("#errorCheckboxValidation").html("");
            }
        });
        if (!flag) {
            $("#errorCheckboxValidation").html("<font class='ux-msg-error-under' style='margin-top: -16px;' color='red'>Please select at least one Finding</font>");
            return false;
        } else {
            document.removeVulnerabilityForm.action = "vulnerabilityexporttoexcel.htm";
            document.removeVulnerabilityForm.submit();
        }
    });
    //End: For export excel

    //Start: For navigation when click on Cancel button
    $("#cancelButtonNavigation").click(function() {
        var enccode = $("#encEngagementCode").val();
        var pgno = $("#pgcnt").val();
        
        $("#cgenk").val(enccode);
        $("#pgcnt").val(pgno);
        //window.location.href = "reviewvulnerability.htm?cgenk=" + enccode + "&pgcnt=" + pgno;
        document.cancelReviewVulnerabilityForm.action = "reviewvulnerability.htm";
        document.cancelReviewVulnerabilityForm.submit();
    });
    //End: For navigation when click on Cancel button
    var validatedOnloadDate=$("#vidTBox").val();
    var statusOnloadValue=$("#statusCodeID").val();
    $("#statusCodeID").change(function(){
//        alert($(this).find('option:selected').val());
        if ($(this).find('option:selected').val() === 'C' || $(this).find('option:selected').val() === 'CE') {
            $("#closedateid").text(getCurrentDate());
            $("#closeddateHid").val(getCurrentDate());
            $("#validatedateid").text("");
            $("#validatedHid").val("");
        }else if ($(this).find('option:selected').val() === 'V') {
            $("#validatedateid").text(getCurrentDate());
            $("#validatedHid").val(getCurrentDate());
            $("#closedateid").text("");
            $("#closeddateHid").val("");
        }else{
            $("#closedateid").text("");
            $("#validatedateid").text("");
        }
        if (($(this).find('option:selected').val() === 'C') || $(this).find('option:selected').val() === 'CE') {
            $("#closureTextID").css('display', 'block');
            $("#closureDateID").css('display', 'block');
             if ($(this).find('option:selected').val() === 'V') {
                    $("#vid").text(getCurrentDate());
                    $("#vidTBox").val(getCurrentDate());
                }else{
                    $("#vid").text(validatedOnloadDate);
                    $("#vidTBox").val(validatedOnloadDate);
                }
                
        } else {
            if (statusOnloadValue === 'C' || statusOnloadValue === 'CE') {
                if ($(this).find('option:selected').val() === 'V') {
                    $("#vid").text(getCurrentDate());
                    $("#vidTBox").val(getCurrentDate());
                }else{
                    $("#vid").text(validatedOnloadDate);
                    $("#vidTBox").val(validatedOnloadDate);
                }
                
            }
            $("#closureTextID").css('display', 'none');
            $("#closureDateID").css('display', 'none');
        }
    
    });
    
    });

$.fn.SearchFilterClear = function(obj, tableID) {
    var dateType = $('#dataTable').dataTable();
    var tabObj = $(tableID).dataTable().fnFilterClear("");
    var tds = $(obj).parent().parent().parent().children("td");
    $(tds).each(function() {
        var inputFeild = $(this).children().children("input").attr("type");
        if (typeof inputFeild != "undefined") {
            var textObj = $(this).children().children("input");
            $(textObj).val("");
            var tableSettings = dateType.fnSettings();
            dateType.fnDraw();
            $(textObj).trigger('blur');
            $("#removeSortingForCheckbox").removeClass("sorting_asc");
        }
        else {
            inputFeild = $(this).children().children("select");
            if (typeof inputFeild != "undefined") {
                $(inputFeild).val("select");
            }
        }
    });
}

function checkAll(headCheckbox) {
    var checkboxes = document.getElementsByClassName('checkboxGroup');
    if (headCheckbox.checked) {
        for (var i = 0; i < checkboxes.length; i++) {
            if (checkboxes[i].type === 'checkbox') {
                checkboxes[i].checked = true;
            }
        }
    } else {
        for (var i = 0; i < checkboxes.length; i++) {
            if (checkboxes[i].type === 'checkbox') {
                checkboxes[i].checked = false;
            }
        }
    }
}

function singleCheckbox(rowCheckbox) {
    var checkboxResult = [];
    var selectedCheckboxes = [];
    var headCheckbox = document.getElementById('headCheckbox');
    $('.checkboxGroup').each(function() {
        if (this.checked) {
            var id = $(this).attr('id');
            selectedCheckboxes.push(id);
        }
    });
    $('.checkboxGroup').each(function() {
        var id = $(this).attr('id');
        checkboxResult.push(id);
    });

    if (headCheckbox.checked && !rowCheckbox.checked) {
        headCheckbox.checked = false;
    }
    else if (selectedCheckboxes.length === checkboxResult.length && !headCheckbox.checked) {
        headCheckbox.checked = true;
    }
}

function editVulnerability(vk) {
    var encInstanceIdentifier = $("#encIdentifier" + vk).val();
    $("#encInstanceIdentifier").val(encInstanceIdentifier);
    document.removeVulnerabilityForm.action = "editvulnerability.htm";
    document.removeVulnerabilityForm.submit();
}

function viewVulnerability(vk) {
    var encInstanceIdentifier = $("#encIdentifier" + vk).val();
    $("#encInstanceIdentifier").val(encInstanceIdentifier);
    document.removeVulnerabilityForm.action = "viewreviewvulnerability.htm";
    document.removeVulnerabilityForm.submit();
}
function fnrootCauseDetail(thisValue) {
    if (thisValue === 'OTH') {
        $("#addRootCauseDetail").show();
        $("#rootCauseName").val("");
    } else
    {
        $("#addRootCauseDetail").hide();
        $("#rootCauseName").val("");
        $("#errorMsgAddRootCauseDetail").html("");
    }
}

function toRoadmap() {
    document.toRoadmapPage.action = "roadmapsummary.htm";
    document.toRoadmapPage.submit();
}

//Start: For navigation when click on Cancel- To Roadmap
function cancelButtonRoadmap() {
    document.editRoadmap.action = "editroadmap.htm";
    document.editRoadmap.submit();
}
//End: For navigation when click on Cancel- To Roadmap

function saveVulnerabilityValidate()
{
    flagArray = [];
    var flag = false;
    var addVulnerability = $("#addvulnerabilityName").val();
    var ipAddressId = $("#ipAddressId").val();
    var softwareNameID = $("#softwareNameID").val();
    var hostNameId = $("#hostNameId").val();
    var domainNameId = $("#domainNameId").val();
    var appURLID = $("#appURLID").val();
    var macAddressId = $("#macAddressId").val();
    var portNumberID = $("#portNumberID").val();
    var securityService = $("#securityServiceID").val();
    var vulnerabilityDescription = $("#vulnerabilityDescription").val();
    var impactDetail = $("#impactDetail").val();
    var technicalDetail = $("#technicalDetails").val();
    var recommendationId = $("#recommendationId").val();
    var rootCauseCodeId = $("#rootCauseCodeId").val();
    var addRootCauseDetail = $("#rootCauseName").val();
    var atcveId = $("#atcveId").val();
    var baseScoreId = $("#baseScoreId").val();
    var costEfforDetail = $("#costEfforDetail").val();
    var status = $("#statusCodeID").val();
    var regSpecial =
            "^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\." +
            "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\." +
            "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\." +
            "([01]?\\d\\d?|2[0-4]\\d|25[0-5])$";

    var numeric = "^[0-9]*$";



    //Service
    if (jQuery.trim(securityService) == "") {
        $("#errorMsgsecurityServiceID").html("Please select the Service");
        flagArray.push(false);
    } else {
        $("#errorMsgsecurityServiceID").html("");
        flagArray.push(true);
    }
    if (jQuery.trim(securityService) === "AV") {
        //alert("av selected");
        var owaspid = jQuery.trim($("#owaspid").val());
        //alert(owaspid);
        if(owaspid ==0){
            $("#errorMsgsecurityOwaspID").html("Please select the OWASP Top 10");
            flagArray.push(false);
        } else {
        $("#errorMsgsecurityOwaspID").html("");
        flagArray.push(true);
        }
    }
    //IP Address
    if (jQuery.trim(ipAddressId) !== "" && !jQuery.trim(ipAddressId).match(regSpecial) && jQuery.trim(ipAddressId).length < 100) {
        $("#errorMsgIpAddress").html("Please enter valid IP Address");
        flagArray.push(false);
    } else if (jQuery.trim(ipAddressId).length > 100) {
//        $("#ipAddressId").addClass("ux-form-field-error");
        $("#errorMsgIpAddress").html("IP Address cannot exceed 100 characters");
        flagArray.push(false);
    }
    else {
        $("#errorMsgIpAddress").html("");
        flagArray.push(true);
    }
    //Software Name
    if (jQuery.trim(softwareNameID).length > 100) {
        $("#errorMsgSoftwareNameID").html("Software Name cannot exceed 100 characters");
        flagArray.push(false);
    }
    else {
        $("#errorMsgSoftwareNameID").html("");
        flagArray.push(true);
    }
    //Host
    if (jQuery.trim(hostNameId).length > 100) {
        $("#errorMsgHostNameId").html("Host name cannot exceed 100 characters");
        flagArray.push(false);
    }
    else {
        $("#errorMsgHostNameId").html("");
        flagArray.push(true);
    }
    //Domain
    if (jQuery.trim(domainNameId).length > 100) {
        $("#errorMsgDomainNameId").html("Domain name cannot exceed 100 characters");
        flagArray.push(false);
    }
    else {
        $("#errorMsgDomainNameId").html("");
        flagArray.push(true);
    }
    //URL
    if (jQuery.trim(appURLID).length > 100) {
        $("#errorMsgAppURLID").html("URL cannot exceed 100 characters");
        flagArray.push(false);
    }
    else {
        $("#errorMsgAppURLID").html("");
        flagArray.push(true);
    }
    //MAC Address
    if (jQuery.trim(macAddressId).length > 100) {
        $("#errorMsgMacAddressId").html("MAC Address cannot exceed 100 characters");
        flagArray.push(false);
    }
    else {
        $("#errorMsgMacAddressId").html("");
        flagArray.push(true);
    }
    //port
    if (!jQuery.trim(portNumberID).match(numeric)) {
        $("#errorMsgPortNumberID").html("Port accepts only numbers");
    } else if (jQuery.trim(portNumberID).length > 8) {
        $("#errorMsgPortNumberID").html("Port name cannot exceed 8 characters");
        flagArray.push(false);
    }
    else {
        $("#errorMsgPortNumberID").html("");
        flagArray.push(true);
    }
    //Vulnerability Name
    if (jQuery.trim(addVulnerability) == "") {
        $("#errorMsgVulnerabilityName").html("Please enter the Finding Name");
        flagArray.push(false);
    } else if (jQuery.trim(addVulnerability).length > 200) {
        $("#errorMsgVulnerabilityName").html("Finding Name cannot exceed 200 characters");
        flagArray.push(false);
    }
    else {
        $("#errorMsgVulnerabilityName").html("");
        flagArray.push(true);
    }
    //Status dropdown
    if (jQuery.trim(status) == "") {
        $("#errorMsgStatusID").html("Please select the finding Status");
        flagArray.push(false);
    } else {
        $("#errorMsgStatusID").html("");
        flagArray.push(true);
    }
    
    if (jQuery.trim(addRootCauseDetail) == "" && rootCauseCodeId === 'OTH') {
        $("#errorMsgAddRootCauseDetail").html("Please enter the Root Cause Detail comments");
        flagArray.push(false);
    } else if (jQuery.trim(addRootCauseDetail) .length > 100 && rootCauseCodeId === 'OTH') {
        $("#errorMsgAddRootCauseDetail").html("Vulnerability Category cannot exceed 100 characters");
        flagArray.push(false);
    } else {
        $("#errorMsgAddRootCauseDetail").html("");
        flagArray.push(true);
    }
        
    // Status dropdown validations checkings
    if (jQuery.trim(status) == 'V') {

        //Vulnerability Description
        if (jQuery.trim(vulnerabilityDescription) == "") {
            $("#errorMsgVulnerabilityDescription").html("Please enter the Finding Description");
            flagArray.push(false);
        }
        else {
            $("#errorMsgVulnerabilityDescription").html("");
            flagArray.push(true);
        }
        //Impact Detail
        if (jQuery.trim(impactDetail) == "") {
            $("#errorMsgImpactDetail").html("Please enter the Impact Detail");
            flagArray.push(false);

        } else {
            $("#errorMsgImpactDetail").html("");
            flagArray.push(true);
        }
        //Recommendation
        if (jQuery.trim(recommendationId) == "") {
            $("#errorMsgrecommendationId").html("Please enter the Recommendation");
            flagArray.push(false);
        } else {
            $("#errorMsgrecommendationId").html("");
            flagArray.push(true);
        }
        //Root Cause 
        if (jQuery.trim(rootCauseCodeId) == "") {
            $("#errorMsgRootCauseCodeId").html("Please select the Vulnerability Category");
            flagArray.push(false);
        } else {
            $("#errorMsgRootCauseCodeId").html("");
            flagArray.push(true);
        }
        
        // Base Score
        if (jQuery.trim(baseScoreId) == "") {
            $("#errorMsgBaseScoreId").html("<font>Please use the CVSS Calculator to calculate the Base Score");
            flagArray.push(false);
        } else {
            $("#errorMsgBaseScoreId").html("");
            flagArray.push(true);
        }
        //Cost Effort
        if (jQuery.trim(costEfforDetail) == "") {
            $("#errorMsgCostEfforDetail").html("Please select the Cost Effort");
            flagArray.push(false);
        } else {
            $("#errorMsgCostEfforDetail").html("");
            flagArray.push(true);
        }
    }
    if (status !== 'V') {
        $("#errorMsgRootCauseCodeId").html("");
        $("#errorMsgAtcveId").html("");
        $("#errorMsgBaseScoreId").html("");
        $("#errorMsgCostEfforDetail").html("");
        flagArray.push(true);
    }
    
    //Status when closed
    var closedCommVal = $("#closedCommentsId").val();
    if (jQuery.trim(status) == 'C' || jQuery.trim(status) == 'CE') {
        //Closed comments
        if (jQuery.trim(closedCommVal) == "") {
            $("#errorclosedCommentsId").html("Please enter Reason for Closure");
            flagArray.push(false);
        } else {
            $("#errorclosedCommentsId").html("");
            flagArray.push(true);
        }
    }
    if(status !== 'C' && status !== 'CE'){
        $("#errorclosedCommentsId").html("");
    }
    
    //Closed comments length  validation checking
    if (jQuery.trim(closedCommVal).length > 1000) {
        $("#errorclosedCommentsId").html("Reason for Closure cannot exceed 1000 characters");
        flagArray.push(false);
    }
    
    //vulnerabilityDescription length  validation checking
    if (jQuery.trim(vulnerabilityDescription).length > 8000) {
        $("#errorMsgVulnerabilityDescription").html("Finding Description cannot exceed 8000 characters");
        flagArray.push(false);
    }
    else if (jQuery.trim(vulnerabilityDescription).length !== 0 || jQuery.trim(status) !== 'V') {
        $("#errorMsgVulnerabilityDescription").html("");
        flagArray.push(true);
    }
    //Technical details length  validation checking
    if (jQuery.trim(technicalDetail).length > 1000) {
        $("#errorMsgTechnicalDetails").html("Technical Details cannot exceed 1000 characters");
        flagArray.push(false);
    } else {
        $("#errorMsgTechnicalDetails").html("");
        flagArray.push(true);
    }
    //ImpactDetail  length validation checking
    if (jQuery.trim(impactDetail).length > 1000) {
        $("#errorMsgImpactDetail").html("Impact Details cannot exceed 1000 characters");
        flagArray.push(false);
    } else if (jQuery.trim(impactDetail).length !== 0 || jQuery.trim(status) !== 'V') {
        $("#errorMsgImpactDetail").html("");
        flagArray.push(true);
    }
    //Recommendation length validation checking
    if (jQuery.trim(recommendationId).length > 1000) {
        $("#errorMsgrecommendationId").html("Recommendation cannot exceed 1000 characters");
        flagArray.push(false);
    } else if (jQuery.trim(recommendationId).length !== 0 || jQuery.trim(status) !== 'V') {
        $("#errorMsgrecommendationId").html("");
        flagArray.push(true);
    }

    for (var i = 0; i < flagArray.length; i++) {
        if (flagArray[i] === false) {
            flag = flagArray[i];
            flagArray = new Array();
            break;
        } else {
            flag = true;
        }
    }
    return flag;
}
function updateVulnerabilityValidate()
{
    flagArray = [];
    var flag = false;
    var addVulnerability = $("#addvulnerabilityName").val();
    var vulnerabilityDescription = $("#vulnerabilityDescription").val();
    var impactDetail = $("#impactDetail").val();
    var technicalDetail = $("#technicalDetails").val();
    var recommendationId = $("#recommendationId").val();
    var rootCauseCodeId = $("#rootCauseCodeId").val();
    var addRootCauseDetail = $("#rootCauseName").val();
    var atcveId = $("#atcveId").val();
    var baseScoreId = $("#baseScoreId").val();
    var costEfforDetail = $("#costEfforDetail").val();
    var status = $("#statusCodeID").val();
    var sourceName = $("#sourceName").val();
    var ipAddressId = $("#ipAddressId").val();
    var softwareNameID = $("#softwareNameID").val();
    var hostNameId = $("#hostNameId").val();
    var domainNameId = $("#domainNameId").val();
    var appURLID = $("#appURLID").val();
    var macAddressId = $("#macAddressId").val();
    var portNumberID = $("#portNumberID").val();
    var securityService = $("#securityServiceID").val();
   // alert(securityService);
    var regSpecial =
            "^([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\." +
            "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\." +
            "([01]?\\d\\d?|2[0-4]\\d|25[0-5])\\." +
            "([01]?\\d\\d?|2[0-4]\\d|25[0-5])$";

    var numeric = "^[0-9]*$";

    //Vulnerability Name
    if (jQuery.trim(addVulnerability) == "") {
        $("#errorMsgVulnerabilityName").html("Please enter the Finding Name");
        flagArray.push(false);
    } else if (jQuery.trim(addVulnerability).length > 200) {
        $("#errorMsgVulnerabilityName").html("Finding Name cannot exceed 200 characters");
        flagArray.push(false);
    }
    else {
        $("#errorMsgVulnerabilityName").html("");
        flagArray.push(true);
    }
    //Status dropdown
    if (jQuery.trim(status) == "") {
        $("#errorMsgStatusID").html("Please select the finding Status");
        flagArray.push(false);
    } else {
        $("#errorMsgStatusID").html("");
        flagArray.push(true);
    }
    // Status dropdown validations checkings
    if (jQuery.trim(status) == 'V') {

        //Vulnerability Description
        if (jQuery.trim(vulnerabilityDescription) == "") {
            $("#errorMsgVulnerabilityDescription").html("Please enter the Finding Description");
            flagArray.push(false);
        }
        else {
            $("#errorMsgVulnerabilityDescription").html("");
            flagArray.push(true);
        }
        //Impact Detail
        if (jQuery.trim(impactDetail) == "") {
            $("#errorMsgImpactDetail").html("Please enter the Impact Detail");
            flagArray.push(false);

        } else {
            $("#errorMsgImpactDetail").html("");
            flagArray.push(true);
        }
        //Recommendation
        if (jQuery.trim(recommendationId) == "") {
            $("#errorMsgrecommendationId").html("Please enter the Recommendation");
            flagArray.push(false);
        } else {
            $("#errorMsgrecommendationId").html("");
            flagArray.push(true);
        }
        //Root Cause 
        if (jQuery.trim(rootCauseCodeId) == "") {
            $("#errorMsgRootCauseCodeId").html("Please select the Vulnerability Category");
            flagArray.push(false);
        } else {
            $("#errorMsgRootCauseCodeId").html("");
            flagArray.push(true);
        }
        
        //Cost Effort
        if (jQuery.trim(costEfforDetail) == "") {
            $("#errorMsgCostEfforDetail").html("Please select the Cost Effort");
            flagArray.push(false);
        } else {
            $("#errorMsgCostEfforDetail").html("");
            flagArray.push(true);
        }
    }
    
     if (jQuery.trim(addRootCauseDetail) === "" && rootCauseCodeId === 'OTH') {
        $("#errorMsgAddRootCauseDetail").html("Please enter the Root Cause Detail comments");
        flagArray.push(false);
    } else if (jQuery.trim(addRootCauseDetail).length > 100 && rootCauseCodeId === 'OTH') {
        $("#errorMsgAddRootCauseDetail").html("Vulnerability Category cannot exceed 100 characters");
        flagArray.push(false);
    } else {
        $("#errorMsgAddRootCauseDetail").html("");
        flagArray.push(true);
    }
    
    if (status !== 'V') {
        $("#errorMsgRootCauseCodeId").html("");
        $("#errorMsgAtcveId").html("");
        $("#errorMsgBaseScoreId").html("");
        $("#errorMsgCostEfforDetail").html("");
        flagArray.push(true);
    }
    
    //Status when closed
    var closedCommVal = $("#closedCommentsId").val();
    if (jQuery.trim(status) == 'C' ||  jQuery.trim(status) == 'CE') {
        //Closed comments
        if (jQuery.trim(closedCommVal) == "") {
            $("#errorclosedCommentsId").html("Please enter Reason for Closure");
            flagArray.push(false);
        } else {
            $("#errorclosedCommentsId").html("");
            flagArray.push(true);
        }
    }
    if(status !== 'C' && status !== 'CE'){
        $("#errorclosedCommentsId").html("");
    }
    
    //Closed comments length  validation checking
    if (jQuery.trim(closedCommVal).length > 1000) {
        $("#errorclosedCommentsId").html("Reason for Closure cannot exceed 1000 characters");
        flagArray.push(false);
    }
    
    //vulnerabilityDescription length  validation checking
    if (jQuery.trim(vulnerabilityDescription).length > 8000) {
        $("#errorMsgVulnerabilityDescription").html("Finding Description cannot exceed 8000 characters");
        flagArray.push(false);
    }
    else if (jQuery.trim(vulnerabilityDescription).length !== 0 || jQuery.trim(status) !== 'V') {
        $("#errorMsgVulnerabilityDescription").html("");
        flagArray.push(true);
    }
    //Technical details length  validation checking
    if (jQuery.trim(technicalDetail).length > 1000) {
        $("#errorMsgTechnicalDetails").html("Technical Details cannot exceed 1000 characters");
        flagArray.push(false);
    } else {
        $("#errorMsgTechnicalDetails").html("");
        flagArray.push(true);
    }
    //ImpactDetail  length validation checking
    if (jQuery.trim(impactDetail).length > 1000) {
        $("#errorMsgImpactDetail").html("Impact Details cannot exceed 1000 characters");
        flagArray.push(false);
    } else if (jQuery.trim(impactDetail).length !== 0 || jQuery.trim(status) !== 'V') {
        $("#errorMsgImpactDetail").html("");
        flagArray.push(true);
    }
    //Recommendation length validation checking
    if (jQuery.trim(recommendationId).length > 1000) {
        $("#errorMsgrecommendationId").html("Recommendation cannot exceed 1000 characters");
        flagArray.push(false);
    } else if (jQuery.trim(recommendationId).length !== 0 || jQuery.trim(status) !== 'V') {
        $("#errorMsgrecommendationId").html("");
        flagArray.push(true);
    }
    
    if (jQuery.trim(sourceName) === 'Manual') {
        //Service
        if (jQuery.trim(securityService) === "") {
            $("#errorMsgsecurityServiceID").html("Please select the Service");
            flagArray.push(false);
        } else {
            $("#errorMsgsecurityServiceID").html("");
            flagArray.push(true);
        }
        if (jQuery.trim(securityService) === "AV") {
       // alert("av selected");
        var owaspid = jQuery.trim($("#owaspid").val());
        //alert(owaspid);
        if(owaspid ==0){
            $("#errorMsgsecurityOwaspID").html("Please select the OWASP Top 10");
            flagArray.push(false);
        } else {
        $("#errorMsgsecurityOwaspID").html("");
        flagArray.push(true);
        }
    }
        //IP Address
        if (jQuery.trim(ipAddressId) !== "" && !jQuery.trim(ipAddressId).match(regSpecial) && jQuery.trim(ipAddressId).length < 100) {
            $("#errorMsgIpAddress").html("Please enter valid IP Address");
            flagArray.push(false);
        } else if (jQuery.trim(ipAddressId).length > 100) {
            $("#errorMsgIpAddress").html("IP Address cannot exceed 100 characters");
            flagArray.push(false);
        }
        else {
            $("#errorMsgIpAddress").html("");
            flagArray.push(true);
        }
        //Software Name
        if (jQuery.trim(softwareNameID).length > 100) {
            $("#errorMsgSoftwareNameID").html("Software Name cannot exceed 100 characters");
            flagArray.push(false);
        }
        else {
            $("#errorMsgSoftwareNameID").html("");
            flagArray.push(true);
        }
        //Host
        if (jQuery.trim(hostNameId).length > 100) {
            $("#errorMsgHostNameId").html("Host name cannot exceed 100 characters");
            flagArray.push(false);
        }
        else {
            $("#errorMsgHostNameId").html("");
            flagArray.push(true);
        }
        //Domain
        if (jQuery.trim(domainNameId).length > 100) {
            $("#errorMsgDomainNameId").html("Domain name cannot exceed 100 characters");
            flagArray.push(false);
        }
        else {
            $("#errorMsgDomainNameId").html("");
            flagArray.push(true);
        }
        //URL
        if (jQuery.trim(appURLID).length > 100) {
            $("#errorMsgAppURLID").html("URL cannot exceed 100 characters");
            flagArray.push(false);
        }
        else {
            $("#errorMsgAppURLID").html("");
            flagArray.push(true);
        }
        //MAC Address
        if (jQuery.trim(macAddressId).length > 100) {
            $("#errorMsgMacAddressId").html("MAC Address cannot exceed 100 characters");
            flagArray.push(false);
        }
        else {
            $("#errorMsgMacAddressId").html("");
            flagArray.push(true);
        }
        //port
        if (!jQuery.trim(portNumberID).match(numeric)) {
            $("#errorMsgPortNumberID").html("Port accepts only numbers");
        } else if (jQuery.trim(portNumberID).length > 8) {
            $("#errorMsgPortNumberID").html("Port name cannot exceed 8 characters");
            flagArray.push(false);
        }
        else {
            $("#errorMsgPortNumberID").html("");
            flagArray.push(true);
        }
    }
    if (jQuery.trim(securityService) === "AV") {
        //alert("av selected");
        var owaspid = jQuery.trim($("#owaspid").val());
        //alert(owaspid);
        if(owaspid ==0){
            $("#errorMsgsecurityOwaspID").html("Please select the OWASP Top 10");
            flagArray.push(false);
        } else {
        $("#errorMsgsecurityOwaspID").html("");
        flagArray.push(true);
        }
    }
    for (var i = 0; i < flagArray.length; i++) {
        if (flagArray[i] === false) {
            flag = flagArray[i];
            flagArray = new Array();
            break;
        } else {
            flag = true;
        }
    }
    return flag;
}

//Rich text editor
bkLib.onDomLoaded(function() {
    new nicEditor({buttonList: []}).panelInstance('vulnerabilityDescription');
    new nicEditor({buttonList: []}).panelInstance('technicalDetails');
    new nicEditor({buttonList: []}).panelInstance('impactDetail');
    new nicEditor({buttonList: []}).panelInstance('recommendationId');

});


