-- Roles and Permissions

SET IDENTITY_INSERT [dbo].[PERMSN] ON 
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], 
[CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES 
(70, 1, NULL, 4, 'Remediation', 'Remediation Module', 'Remediation', 0, 9, GETDATE(), 1, NULL, NULL),
(71, 1, NULL, 4, 'Risk Registry', 'Risk Registry Module', 'Risk Registry', 0, 9, GETDATE(), 1, NULL, NULL),

(72, 1, 70, 5, 'Remediation Module', 'Remediation Module Menu', 'Remediation Module', 0, 9, GETDATE(), 1, NULL, NULL),
(73, 1, 71, 5, 'Risk Registry Module', 'Risk Registry Module Menu', 'Risk Registry Module', 0, 9, GETDATE(), 1, NULL, NULL),

(74, 1, 72, 6, 'Remediation Module', 'Remediation Module Submenu', 'Remediation Module', 0, 9, GETDATE(), 1, NULL, NULL),
(75, 1, 73, 6, 'Risk Registry Module', 'Risk Registry Module Submenu', 'Risk Registry Module', 0, 9, GETDATE(), 1, NULL, NULL),

(76, 1, 74, 7, 'Add Remediation', 'Add Remediation Permission', 'Add Remediation', 0, 9, GETDATE(), 1, NULL, NULL),
(77, 1, 74, 7, 'Edit Remediation', 'Edit Remediation Permission', 'Edit Remediation', 0, 9, GETDATE(), 1, NULL, NULL),
(78, 1, 74, 7, 'Delete Remediation', 'Delete Remediation Permission', 'Delete Remediation', 0, 9, GETDATE(), 1, NULL, NULL),
(79, 1, 74, 7, 'Add Finding', 'Add Finding Remediation Permission', 'Add Finding', 0, 9, GETDATE(), 1, NULL, NULL),
(80, 1, 74, 7, 'Edit Finding', 'Edit Finding Remediation Permission', 'Edit Finding', 0, 9, GETDATE(), 1, NULL, NULL),
(81, 1, 74, 7, 'Delete Finding', 'Delete Finding Remediation Permission', 'Delete Finding', 0, 9, GETDATE(), 1, NULL, NULL),
(82, 1, 74, 7, 'Add Notes', 'Add Notes Remediation Permission', 'Add Notes', 0, 9, GETDATE(), 1, NULL, NULL),
(83, 1, 74, 7, 'View Remediation Plan', 'View Remediation Permission', 'View Remediation Plan', 0, 9, GETDATE(), 1, NULL, NULL),

(84, 1, 75, 7, 'Edit Registry', 'Edit Risk Registry Permission', 'Edit Registry', 0, 9, GETDATE(), 1, NULL, NULL),
(85, 1, 75, 7, 'Add Finding', 'Risk Registry Add Finding Permission', 'Add Finding', 0, 9, GETDATE(), 1, NULL, NULL),
(86, 1, 75, 7, 'Delete Finding', 'Risk Registry Delete Finding Permission', 'Delete Finding', 0, 9, GETDATE(), 1, NULL, NULL),
(87, 1, 75, 7, 'Accept Registry', 'Accept Registry Permission', 'Accept Registry', 0, 9, GETDATE(), 1, NULL, NULL)
SET IDENTITY_INSERT [dbo].[PERMSN] OFF 


SET IDENTITY_INSERT [dbo].[PERMSN_GRP] ON 
INSERT [dbo].[PERMSN_GRP] ([PERMSN_GRP_KEY], [ROW_STS_KEY], [PERMSN_GRP_NM], [PERMSN_GRP_DESC], [STS_COMMT_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (11, 1, N'Remediation - RO', N'Allow the user to add,edit and delete remediation plan items; cannot create a new Remediation Plan or Update the Plan Detail information', NULL, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP] ([PERMSN_GRP_KEY], [ROW_STS_KEY], [PERMSN_GRP_NM], [PERMSN_GRP_DESC], [STS_COMMT_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (12, 1, N'Remediation - RW', N'Allow the user to add,edit and delete Remediation plan;Allow the user to add,edit and delete Remdiation items.', NULL,GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP] ([PERMSN_GRP_KEY], [ROW_STS_KEY], [PERMSN_GRP_NM], [PERMSN_GRP_DESC], [STS_COMMT_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (13, 1, N'Remediation Owner', N'Allow User to View Remediation plan that the user is assigned as owner', NULL, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP] ([PERMSN_GRP_KEY], [ROW_STS_KEY], [PERMSN_GRP_NM], [PERMSN_GRP_DESC], [STS_COMMT_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (14, 1, N'Risk Register - RW', N'Allow user to view, edit and update in the Risk register section and finding association section', NULL, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP] ([PERMSN_GRP_KEY], [ROW_STS_KEY], [PERMSN_GRP_NM], [PERMSN_GRP_DESC], [STS_COMMT_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (15, 1, N'Risk Register - Accept', N'Allows the user to accept Risk Registry assigned as owner.', NULL, GETDATE(), 3, NULL, NULL)
SET IDENTITY_INSERT [dbo].[PERMSN_GRP] OFF


SET IDENTITY_INSERT [dbo].[PERMSN_GRP_ASSOC] ON
INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (78, 1, 11, 79, 70, 72, 74, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (79, 1, 11, 80, 70, 72, 74, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (80, 1, 11, 81, 70, 72, 74, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (81, 1, 11, 82, 70, 72, 74, GETDATE(), 3, NULL, NULL)

INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (82, 1, 12, 76, 70, 72, 74, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (83, 1, 12, 77, 70, 72, 74, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (84, 1, 12, 78, 70, 72, 74, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (85, 1, 12, 79, 70, 72, 74, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (86, 1, 12, 80, 70, 72, 74, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (87, 1, 12, 81, 70, 72, 74, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (88, 1, 12, 82, 70, 72, 74, GETDATE(), 3, NULL, NULL)

INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (89, 1, 13, 82, 70, 72, 74, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (90, 1, 13, 83, 70, 72, 74, GETDATE(), 3, NULL, NULL)

INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (91, 1, 14, 84, 71, 73, 75, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (92, 1, 14, 85, 71, 73, 75, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (93, 1, 14, 86, 71, 73, 75, GETDATE(), 3, NULL, NULL)

INSERT [dbo].[PERMSN_GRP_ASSOC] ([PERMSN_GRP_ASSOC_KEY], [ROW_STS_KEY], [PERMSN_GRP_KEY], [PERMSN_KEY], [MDUL_ID], [MNU_ID], [SUB_MNU_ID], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (94, 1, 15, 87, 71, 73, 75, GETDATE(), 3, NULL, NULL)
SET IDENTITY_INSERT [dbo].[PERMSN_GRP_ASSOC] OFF


SET IDENTITY_INSERT [dbo].[APPL_ROLE] ON
INSERT [dbo].[APPL_ROLE] ([APPL_ROLE_KEY], [ROW_STS_KEY], [APPL_ROLE_NM], [APPL_ROLE_DESC], [STS_COMMT_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID], [USER_TYP_KEY]) 
VALUES (10, 1, N'Remediation Analyst', N'Remediation Analyst', NULL, GETDATE(), 3, NULL, NULL, 16)
INSERT [dbo].[APPL_ROLE] ([APPL_ROLE_KEY], [ROW_STS_KEY], [APPL_ROLE_NM], [APPL_ROLE_DESC], [STS_COMMT_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID], [USER_TYP_KEY]) 
VALUES (11, 1, N'Remediation Owner', N'Remediation Analyst', NULL, GETDATE(), 3, NULL, NULL, 17)
INSERT [dbo].[APPL_ROLE] ([APPL_ROLE_KEY], [ROW_STS_KEY], [APPL_ROLE_NM], [APPL_ROLE_DESC], [STS_COMMT_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID], [USER_TYP_KEY]) 
VALUES (12, 1, N'Risk Register Owner', N'Remediation Analyst', NULL, GETDATE(), 3, NULL, NULL, 17)
 SET IDENTITY_INSERT [dbo].[APPL_ROLE] OFF

 
SET IDENTITY_INSERT [dbo].[APPL_ROLE_PERMSN_GRP] ON
INSERT [dbo].[APPL_ROLE_PERMSN_GRP] ([USER_ROLE_PERMSN_GRP_KEY], [ROW_STS_KEY], [APPL_ROLE_KEY], [PERMSN_GRP_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (20, 1, 9, 9, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[APPL_ROLE_PERMSN_GRP] ([USER_ROLE_PERMSN_GRP_KEY], [ROW_STS_KEY], [APPL_ROLE_KEY], [PERMSN_GRP_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (21, 1, 9, 11, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[APPL_ROLE_PERMSN_GRP] ([USER_ROLE_PERMSN_GRP_KEY], [ROW_STS_KEY], [APPL_ROLE_KEY], [PERMSN_GRP_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (22, 1, 9, 14, GETDATE(), 3, NULL, NULL)

INSERT [dbo].[APPL_ROLE_PERMSN_GRP] ([USER_ROLE_PERMSN_GRP_KEY], [ROW_STS_KEY], [APPL_ROLE_KEY], [PERMSN_GRP_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (23, 1, 10, 9, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[APPL_ROLE_PERMSN_GRP] ([USER_ROLE_PERMSN_GRP_KEY], [ROW_STS_KEY], [APPL_ROLE_KEY], [PERMSN_GRP_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (24, 1, 10, 10, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[APPL_ROLE_PERMSN_GRP] ([USER_ROLE_PERMSN_GRP_KEY], [ROW_STS_KEY], [APPL_ROLE_KEY], [PERMSN_GRP_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (25, 1, 10, 12, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[APPL_ROLE_PERMSN_GRP] ([USER_ROLE_PERMSN_GRP_KEY], [ROW_STS_KEY], [APPL_ROLE_KEY], [PERMSN_GRP_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (26, 1, 10, 14, GETDATE(), 3, NULL, NULL)

INSERT [dbo].[APPL_ROLE_PERMSN_GRP] ([USER_ROLE_PERMSN_GRP_KEY], [ROW_STS_KEY], [APPL_ROLE_KEY], [PERMSN_GRP_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (27, 1, 11, 9, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[APPL_ROLE_PERMSN_GRP] ([USER_ROLE_PERMSN_GRP_KEY], [ROW_STS_KEY], [APPL_ROLE_KEY], [PERMSN_GRP_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (28, 1, 11, 10, GETDATE(), 3, NULL, NULL)
INSERT [dbo].[APPL_ROLE_PERMSN_GRP] ([USER_ROLE_PERMSN_GRP_KEY], [ROW_STS_KEY], [APPL_ROLE_KEY], [PERMSN_GRP_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (29, 1, 11, 13, GETDATE(), 3, NULL, NULL)

INSERT [dbo].[APPL_ROLE_PERMSN_GRP] ([USER_ROLE_PERMSN_GRP_KEY], [ROW_STS_KEY], [APPL_ROLE_KEY], [PERMSN_GRP_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) 
VALUES (30, 1, 12, 15, GETDATE(), 3, NULL, NULL)
SET IDENTITY_INSERT [dbo].[APPL_ROLE_PERMSN_GRP] OFF


-- Roles and Permissions Ends

-- ALTER TABLE USER_PRFL ADD DEPT_NM VARCHAR(150) NULL;

CREATE TABLE [dbo].[RMDTN_PLN_STS](
	[RMDTN_PLN_STS_CD] [char](1) NOT NULL,
	[RMDTN_PLN_STS_NM] [varchar](150) NOT NULL,
	[CREAT_DT] [datetime] NOT NULL,
	[CREAT_USER_ID] [int] NOT NULL,
	[UPDT_DT] [datetime] NULL,
	[UPDT_USER_ID] [int] NULL,
 CONSTRAINT [PK_RMDTN_PLN_STS] PRIMARY KEY CLUSTERED 
(
	[RMDTN_PLN_STS_CD] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]



CREATE TABLE [dbo].[VULN_RMDTN_STS](
	[VULN_RMDTN_STS_CD] [char](1) NOT NULL,
	[VULN_RMDTN_STS_NM] [varchar](150) NOT NULL,
	[CREAT_DT] [datetime] NOT NULL,
	[CREAT_USER_ID] [int] NOT NULL,
	[UPDT_DT] [datetime] NULL,
	[UPDT_USER_ID] [int] NULL,
 CONSTRAINT [PK_VULN_RMDTN_STS] PRIMARY KEY CLUSTERED 
(
	[VULN_RMDTN_STS_CD] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]



CREATE TABLE [dbo].[RISK_RSPN](
	[RISK_RSPN_CD] [char](1) NOT NULL,
	[RISK_RSPN_NM] [varchar](150) NOT NULL,
	[CREAT_DT] [datetime] NOT NULL,
	[CREAT_USER_ID] [int] NOT NULL,
	[UPDT_DT] [datetime] NULL,
	[UPDT_USER_ID] [int] NULL,
 CONSTRAINT [PK_RISK_RSPN] PRIMARY KEY CLUSTERED 
(
	[RISK_RSPN_CD] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

GO

SET ANSI_PADDING ON
GO

INSERT INTO dbo.[RMDTN_PLN_STS]([RMDTN_PLN_STS_CD],[RMDTN_PLN_STS_NM],[CREAT_DT],[CREAT_USER_ID])Values
('O','Open',GETDATE(),1),
('I','In-Progress',GETDATE(),1),
('C','Closed',GETDATE(),1)
INSERT INTO dbo.[VULN_RMDTN_STS]([VULN_RMDTN_STS_CD],[VULN_RMDTN_STS_NM],[CREAT_DT],[CREAT_USER_ID])Values
('O','Open',GETDATE(),1),
('I','In-Progress',GETDATE(),1),
('R','Risk Registered',GETDATE(),1),
('A','Risk Accepted',GETDATE(),1),
('C','Closed',GETDATE(),1)
INSERT INTO dbo.[RISK_RSPN]([RISK_RSPN_CD],[RISK_RSPN_NM],[CREAT_DT],[CREAT_USER_ID])Values
('A','Accepted',GETDATE(),1),
('T','Transfer',GETDATE(),1),
('V','Avoid',GETDATE(),1),
('S','Share',GETDATE(),1),
('M','Mitigate',GETDATE(),1)


GO
ALTER PROCEDURE [dbo].[CreateSchemaTables]
(
@SchemaName VARCHAR(50),
@ORG_KEY     INTEGER
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

DECLARE @Query1 VARCHAR(max)
DECLARE @Query2 VARCHAR(max)
DECLARE @Query3 VARCHAR(max)
DECLARE @Query4 VARCHAR(max)
DECLARE @Query5 VARCHAR(max)
DECLARE @Query6 VARCHAR(max)
DECLARE @Query7 VARCHAR(max)
DECLARE @Query8 VARCHAR(max)

SET @Query1= '
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '''+ @SchemaName+'''  AND TABLE_NAME =''CLNT_VULN_INSTC'')
BEGIN
CREATE TABLE '+ @SchemaName+ '.CLNT_VULN_INSTC 
(
       [CLNT_VULN_INSTC_KEY] [int] IDENTITY(1,1) NOT NULL,
       [ROW_STS_KEY] [int] NOT NULL,
       [ORG_KEY] [int] NOT NULL,
       [CLNT_ENGMT_CD] [varchar](30) NOT NULL,
       [SECUR_SRVC_CD] [varchar](10) NOT NULL,
       [VULN_SRC_KEY] [int] NOT NULL,
       [VULN_INSTC_STS_CD] [varchar](3) NOT NULL,
       [VULN_SEV_CD] [varchar](3) NULL,
       [VULN_IMP_CD] [varchar](3) NULL,
       [RISK_PRBL_CD] [varchar](3) NULL,
       [RMDTN_CST_EFFRT_CD] [varchar](3) NULL,
       [VULN_CATGY_CD] [varchar](10) NULL,
       [OWASP_TOP_10_KEY] [int] NULL,
       [CVE_ID] [varchar](25) NULL,
       [OS_KEY] [int] NULL,
       [SRC_VULN_SCAN_ID] [varchar](150) NULL,
       [SRC_VULN_SCAN_STRT_DT] [datetime] NULL,
       [SRC_VULN_SCAN_END_DT] [datetime] NULL,
       [SRC_VULN_INSTC_ID] [varchar](150) NULL,
       [SRC_VULN_ID] [varchar](150) NULL,
       [VULN_NM] [varchar](255) NOT NULL,
       [VULN_DESC] [text] NULL,
       [VULN_CREAT_DT] [datetime] NOT NULL,
       [IPADR] [varchar](39) NULL,
       [PORT_NBR] [int] NULL,
       [SRC_ADVS_TXT] [varchar](1024) NULL,
       [SRC_VULN_BAS_SCOR] [decimal](10, 2) NULL,
       [VULN_BAS_SCOR] [decimal](10, 2) NULL,
       [VULN_IMP_SUB_SCOR] [decimal](10, 2) NULL,
       [VULN_EXPLT_SUB_SCOR] [decimal](10, 2) NULL,
       [VULN_TMPRL_SCOR] [decimal](10, 2) NULL,
       [VULN_ENV_SCOR] [decimal](10, 2) NULL,
       [VULN_OVALL_SCOR] [decimal](10, 2) NULL,
       [VULN_VCTR_TXT] [varchar](100) NULL,
       [NTWK_NM] [varchar](150) NULL,
       [PRTCL_NM] [varchar](255) NULL,
       [HST_NM] [varchar](150) NULL,
       [DOM_NM] [varchar](150) NULL,
       [SFTW_NM] [varchar](150) NULL,
       [APPL_URL] [nvarchar](2000) NULL,
       [NETBIOS_NM] [varchar](150) NULL,
       [MAC_ADR_NM] [varchar](150) NULL,
       [VULN_TECH_COMMT_TXT] [text] NULL,
       [VULN_IMP_COMMT_TXT] [text] NULL,
       [RECOM_COMMT_TXT] [text] NULL,
       [ROOT_CAUS_COMMT_TXT] [text] NULL,
       [APPL_FL_UPLOAD_LOG_KEY] [int] NULL,
       [CREAT_DT] [datetime] NOT NULL,
       [CREAT_USER_ID] [int] NOT NULL,
       [UPDT_DT] [datetime] NULL,
       [UPDT_USER_ID] [int] NULL,
	   [VULN_VLD_DT] [datetime]  NULL,
	   [VULN_CLOS_DT] [datetime]  NULL,
	   [CLOS_RSN_TXT] text NULL,
CONSTRAINT [PK_CLNT_VULN_INSTC] PRIMARY KEY CLUSTERED 
(
       [CLNT_VULN_INSTC_KEY] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] 

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([APPL_FL_UPLOAD_LOG_KEY])
REFERENCES [dbo].[APPL_FL_UPLOAD_LOG] ([APPL_FL_UPLOAD_LOG_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([CVE_ID])
REFERENCES [dbo].[CVE] ([CVE_ID])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([ORG_KEY])
REFERENCES [dbo].[ORG] ([ORG_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([OS_KEY])
REFERENCES [dbo].[OS] ([OS_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([RISK_PRBL_CD])
REFERENCES [dbo].[RISK_PRBL] ([RISK_PRBL_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([RMDTN_CST_EFFRT_CD])
REFERENCES [dbo].[RMDTN_CST_EFFRT] ([RMDTN_CST_EFFRT_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([VULN_CATGY_CD])
REFERENCES [dbo].[VULN_CATGY] ([VULN_CATGY_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([ROW_STS_KEY])
REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([VULN_IMP_CD])
REFERENCES [dbo].[VULN_IMP] ([VULN_IMP_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([VULN_INSTC_STS_CD])
REFERENCES [dbo].[VULN_INSTC_STS] ([VULN_INSTC_STS_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([VULN_SEV_CD])
REFERENCES [dbo].[VULN_SEV] ([VULN_SEV_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([VULN_SRC_KEY])
REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([CLNT_ENGMT_CD], [SECUR_SRVC_CD])
REFERENCES [dbo].[CLNT_SECUR_SRVC_ENGMT] ([CLNT_ENGMT_CD], [SECUR_SRVC_CD])  
END
ELSE
BEGIN
SELECT -1 Retval
END 
'


--  PRINT  (@query1)
EXECUTE (@Query1)

SET @Query2= '
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '''+ @SchemaName+'''  AND TABLE_NAME =''CLNT_VULN_SECUR_CTL'')
BEGIN
CREATE TABLE '+ @SchemaName+ '.[CLNT_VULN_SECUR_CTL](
       [CLNT_VULN_INSTC_KEY] [int] NOT NULL,
       [REG_CMPLN_CD] [varchar](20) NOT NULL,
       [REG_CMPLN_VER] [varchar](20) NOT NULL,
       [SECUR_CTL_CD] [varchar](20) NOT NULL,
       [ROW_STS_KEY] [int] NOT NULL,
       [CREAT_DT] [datetime] NULL,
       [CREAT_USER_ID] [int] NULL,
       [UPDT_DT] [datetime] NULL,
       [UPDT_USER_ID] [int] NULL,
CONSTRAINT [PK_CLNT_VULN_SECUR_CTL] PRIMARY KEY CLUSTERED 
(
       [CLNT_VULN_INSTC_KEY] ASC,
       [REG_CMPLN_CD] ASC,
       [REG_CMPLN_VER] ASC,
       [SECUR_CTL_CD] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_SECUR_CTL]  WITH CHECK ADD FOREIGN KEY([CLNT_VULN_INSTC_KEY])
REFERENCES '+ @SchemaName+ '.[CLNT_VULN_INSTC] ([CLNT_VULN_INSTC_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_SECUR_CTL]  WITH CHECK ADD FOREIGN KEY([ROW_STS_KEY])
REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_SECUR_CTL]  WITH CHECK ADD FOREIGN KEY([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD])
REFERENCES [dbo].[SECUR_CTL] ([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD]) 
SELECT 1 Retval
END
ELSE
BEGIN
SELECT -1 Retval
END 
'
EXECUTE (@Query2)

SET @Query3= '
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '''+ @SchemaName+'''  AND TABLE_NAME =''CLNT_ROADMAP_FACT'')
BEGIN
CREATE TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT](
       [CLNT_ROADMAP_KEY] [int] NOT NULL,
       [ROW_STS_KEY] [int] NULL,
       [ORG_KEY] [int] NULL,
       [CLNT_ENGMT_CD] [varchar](30) NULL,
       [CSA_DOM_CD] [varchar](10) NOT NULL,
       [VULN_CATGY_CD] [varchar](10) NOT NULL,
       [VULN_SEV_CD] [varchar](3) NOT NULL,
       [RMDTN_CST_EFFRT_CD] [varchar](3) NOT NULL,
       [ROADMAP_TMLN_CD] [char](1) NOT NULL,
       [ROADMAP_EFF_DT] [datetime] NULL,
       [ROADMAP_PUBL_DT] [datetime] NULL,
       [VULN_CNT] [int] NULL,
       [ROADMAP_COMMT] [varchar](5000) NULL,
       [CREAT_DT] [datetime] NOT NULL,
       [CREAT_USER_ID] [int] NOT NULL,
       [UPDT_DT] [datetime] NULL,
       [UPDT_USER_ID] [int] NULL,
CONSTRAINT [PK_CLNT_ROADMAP_FACT] PRIMARY KEY CLUSTERED 
(
       [CLNT_ROADMAP_KEY] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]


ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT]  WITH CHECK ADD  CONSTRAINT [FK_CLNT_ENGMT_126] FOREIGN KEY([CLNT_ENGMT_CD])
REFERENCES [dbo].[CLNT_ENGMT] ([CLNT_ENGMT_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT] CHECK CONSTRAINT [FK_CLNT_ENGMT_126]

ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT]  WITH CHECK ADD  CONSTRAINT [FK_CSA_REF_ARCH_DOM_141] FOREIGN KEY([CSA_DOM_CD])
REFERENCES [dbo].[CSA_REF_ARCH_DOM] ([CSA_DOM_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT] CHECK CONSTRAINT [FK_CSA_REF_ARCH_DOM_141]

ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT]  WITH CHECK ADD  CONSTRAINT [FK_MSTR_LKP_131] FOREIGN KEY([ROW_STS_KEY])
REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT] CHECK CONSTRAINT [FK_MSTR_LKP_131]

ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT]  WITH CHECK ADD  CONSTRAINT [FK_ORG_125] FOREIGN KEY([ORG_KEY])
REFERENCES [dbo].[ORG] ([ORG_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT] CHECK CONSTRAINT [FK_ORG_125]

ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT]  WITH CHECK ADD  CONSTRAINT [FK_RMDTN_CST_EFFRT_128] FOREIGN KEY([RMDTN_CST_EFFRT_CD])
REFERENCES [dbo].[RMDTN_CST_EFFRT] ([RMDTN_CST_EFFRT_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT] CHECK CONSTRAINT [FK_RMDTN_CST_EFFRT_128]

ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT]  WITH CHECK ADD  CONSTRAINT [FK_ROADMAP_TMLN_130] FOREIGN KEY([ROADMAP_TMLN_CD])
REFERENCES [dbo].[ROADMAP_TMLN] ([ROADMAP_TMLN_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT] CHECK CONSTRAINT [FK_ROADMAP_TMLN_130]

ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT]  WITH CHECK ADD  CONSTRAINT [FK_VULN_CATGY_129] FOREIGN KEY([VULN_CATGY_CD])
REFERENCES [dbo].[VULN_CATGY] ([VULN_CATGY_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT] CHECK CONSTRAINT [FK_VULN_CATGY_129]

ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT]  WITH CHECK ADD  CONSTRAINT [FK_VULN_SEV_127] FOREIGN KEY([VULN_SEV_CD])
REFERENCES [dbo].[VULN_SEV] ([VULN_SEV_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_ROADMAP_FACT] CHECK CONSTRAINT [FK_VULN_SEV_127]

SELECT 1 Retval
END
ELSE
BEGIN
SELECT -1 Retval
END 
'
EXECUTE (@Query3)

SET @Query4= '
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '''+ @SchemaName+'''  AND TABLE_NAME =''CLNT_RMDTN_PLN'')
BEGIN
CREATE TABLE '+ @SchemaName+ '.[CLNT_RMDTN_PLN](
	[CLNT_RMDTN_PLN_KEY] [int] IDENTITY(1,1) NOT NULL,
	[ROW_STS_KEY] [int] NOT NULL,
	[ORG_KEY] [int] NOT NULL,
	[CLNT_ENGMT_CD] [varchar](30) NOT NULL,
	[RMDTN_OWNR_USER_ID] [int] NOT NULL,
	[RMDTN_PLN_STS_CD] [char](1) NOT NULL,
	[RMDTN_PLN_NM] [varchar](150) NOT NULL,
	[RMDTN_PLN_DESC] [text] NULL,
	[RMDTN_PLN_CREAT_DT] [datetime] NOT NULL,
	[RMDTN_PLN_NTF_DT] [datetime] NULL,
	[RMDTN_PLN_STRT_DT] [datetime] NULL,
	[RMDTN_PLN_DUE_DT] [datetime] NULL,
	[RMDTN_PLN_CLOS_DT] [datetime] NULL,
	[ASSOC_VULN_TOT_CNT] [int] NOT NULL,
	[ASSOC_VULN_CMPL_CNT] [int] NULL,
	[CREAT_DT] [datetime] NOT NULL,
	[CREAT_USER_ID] [int] NOT NULL,
	[UPDT_DT] [datetime] NULL,
	[UPDT_USER_ID] [int] NULL,
 CONSTRAINT [PK_CLNT_RMDTN_PLN] PRIMARY KEY CLUSTERED 
(
	[CLNT_RMDTN_PLN_KEY] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]


ALTER TABLE '+ @SchemaName+ '.[CLNT_RMDTN_PLN]  WITH CHECK ADD  CONSTRAINT [FK_CLNT_ENGMT_142] FOREIGN KEY([CLNT_ENGMT_CD])
REFERENCES [dbo].[CLNT_ENGMT] ([CLNT_ENGMT_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_RMDTN_PLN] CHECK CONSTRAINT [FK_CLNT_ENGMT_142]

ALTER TABLE '+ @SchemaName+ '.[CLNT_RMDTN_PLN]  WITH CHECK ADD  CONSTRAINT [FK_MSTR_LKP_150] FOREIGN KEY([ROW_STS_KEY])
REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_RMDTN_PLN] CHECK CONSTRAINT [FK_MSTR_LKP_150]

ALTER TABLE '+ @SchemaName+ '.[CLNT_RMDTN_PLN]  WITH CHECK ADD  CONSTRAINT [FK_ORG_143] FOREIGN KEY([ORG_KEY])
REFERENCES [dbo].[ORG] ([ORG_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_RMDTN_PLN] CHECK CONSTRAINT [FK_ORG_143]

ALTER TABLE '+ @SchemaName+ '.[CLNT_RMDTN_PLN]  WITH CHECK ADD  CONSTRAINT [FK_RMDTN_PLN_STS_159] FOREIGN KEY([RMDTN_PLN_STS_CD])
REFERENCES [dbo].[RMDTN_PLN_STS] ([RMDTN_PLN_STS_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_RMDTN_PLN] CHECK CONSTRAINT [FK_RMDTN_PLN_STS_159]


ALTER TABLE '+ @SchemaName+ '.[CLNT_RMDTN_PLN]  WITH CHECK ADD  CONSTRAINT [FK_USER_PRFL_156] FOREIGN KEY([RMDTN_OWNR_USER_ID])
REFERENCES [dbo].[USER_PRFL] ([USER_ID])


ALTER TABLE '+ @SchemaName+ '.[CLNT_RMDTN_PLN] CHECK CONSTRAINT [FK_USER_PRFL_156]

SELECT 1 Retval
END
ELSE
BEGIN
SELECT -1 Retval
END 
'
EXECUTE (@Query4)

SET @Query5= '
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '''+ @SchemaName+'''  AND TABLE_NAME =''CLNT_VULN_RMDTN_PLN_ITM'')
BEGIN
CREATE TABLE '+ @SchemaName+ '.[CLNT_VULN_RMDTN_PLN_ITM](
	[CLNT_VULN_INSTC_KEY] [int] NOT NULL,
	[CLNT_RMDTN_PLN_KEY] [int] NOT NULL,
	[VULN_RMDTN_STS_CD] [char](1) NOT NULL,
	[CLOS_DT] [datetime] NULL,
	[ROW_STS_KEY] [int] NOT NULL,
	[CREAT_DT] [datetime] NOT NULL,
	[CREAT_USER_ID] [int] NOT NULL,
	[UPDT_DT] [datetime] NULL,
	[UPDT_USER_ID] [int] NULL,
	[CLOS_RSN_TXT] [text] NULL,
 CONSTRAINT [PK_CLNT_VULN_RMDTN_PLN_ITM] PRIMARY KEY CLUSTERED 
(
	[CLNT_VULN_INSTC_KEY] ASC,
	[CLNT_RMDTN_PLN_KEY] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_RMDTN_PLN_ITM]  WITH CHECK ADD  CONSTRAINT [FK_CLNT_RMDTN_PLN_149] FOREIGN KEY([CLNT_RMDTN_PLN_KEY])
REFERENCES '+ @SchemaName+ '.[CLNT_RMDTN_PLN] ([CLNT_RMDTN_PLN_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_RMDTN_PLN_ITM] CHECK CONSTRAINT [FK_CLNT_RMDTN_PLN_149]

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_RMDTN_PLN_ITM]  WITH CHECK ADD  CONSTRAINT [FK_CLNT_VULN_INSTC_148] FOREIGN KEY([CLNT_VULN_INSTC_KEY])
REFERENCES '+ @SchemaName+ '.[CLNT_VULN_INSTC] ([CLNT_VULN_INSTC_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_RMDTN_PLN_ITM] CHECK CONSTRAINT [FK_CLNT_VULN_INSTC_148]

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_RMDTN_PLN_ITM]  WITH CHECK ADD  CONSTRAINT [FK_MSTR_LKP_160] FOREIGN KEY([ROW_STS_KEY])
REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_RMDTN_PLN_ITM] CHECK CONSTRAINT [FK_MSTR_LKP_160]

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_RMDTN_PLN_ITM]  WITH CHECK ADD  CONSTRAINT [FK_VULN_RMDTN_STS_151] FOREIGN KEY([VULN_RMDTN_STS_CD])
REFERENCES [dbo].[VULN_RMDTN_STS] ([VULN_RMDTN_STS_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_RMDTN_PLN_ITM] CHECK CONSTRAINT [FK_VULN_RMDTN_STS_151]

SELECT 1 Retval
END
ELSE
BEGIN
SELECT -1 Retval
END 
'
EXECUTE (@Query5)


SET @Query6= '
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '''+ @SchemaName+'''  AND TABLE_NAME =''CLNT_RMDTN_PLN_COMMT'')
BEGIN
CREATE TABLE '+ @SchemaName+ '.[CLNT_RMDTN_PLN_COMMT](
	[CLNT_RMDTN_PLN_COMMT_KEY] [int] IDENTITY(1,1) NOT NULL,
	[CLNT_RMDTN_PLN_KEY] [int] NOT NULL,
	[ENT_DT] [datetime] NOT NULL,
	[COMMT_TXT] [text] NOT NULL,
	[CREAT_DT] [datetime] NOT NULL,
	[CREAT_USER_ID] [int] NOT NULL,
	[UPDT_DT] [datetime] NULL,
	[UPDT_USER_ID] [int] NULL,
 CONSTRAINT [PK_CLNT_RMDTN_PLN_COMMT] PRIMARY KEY CLUSTERED 
(
	[CLNT_RMDTN_PLN_COMMT_KEY] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

ALTER TABLE '+ @SchemaName+ '.[CLNT_RMDTN_PLN_COMMT]  WITH CHECK ADD  CONSTRAINT [FK_CLNT_RMDTN_PLN_147] FOREIGN KEY([CLNT_RMDTN_PLN_KEY])
REFERENCES '+ @SchemaName+ '.[CLNT_RMDTN_PLN] ([CLNT_RMDTN_PLN_KEY])
ALTER TABLE '+ @SchemaName+ '.[CLNT_RMDTN_PLN_COMMT] CHECK CONSTRAINT [FK_CLNT_RMDTN_PLN_147]

SELECT 1 Retval
END
ELSE
BEGIN
SELECT -1 Retval
END 
'
EXECUTE (@Query6)

SET @Query7= '
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '''+ @SchemaName+'''  AND TABLE_NAME =''CLNT_RISK_RGST'')
BEGIN
CREATE TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST](
	[CLNT_RISK_RGST_KEY] [int] IDENTITY(1,1) NOT NULL,
	[ROW_STS_KEY] [int] NOT NULL,
	[CLNT_RMDTN_PLN_KEY] [int] NULL,
	[ADJ_SEV_CD] [varchar](3) NOT NULL,
	[ENT_USER_ID] [int] NOT NULL,
	[ENT_DT] [datetime] NOT NULL,
	[COMP_CTL_TXT] [text] NOT NULL,
	[NTF_DT] [datetime] NULL,
	[ACPT_USER_ID] [int] NULL,
	[ACPT_DT] [datetime] NULL,
	[ACPT_USER_SGN_TXT] [varchar](150) NULL,
	[RISK_RSPN_CD] [char](1) NULL,
	[RISK_JSTFY_TXT] [text] NULL,
	[RISK_RGST_ITM_TOT_CNT] [int] NOT NULL,
	[CREAT_DT] [datetime] NOT NULL,
	[CREAT_USER_ID] [int] NOT NULL,
	[UPDT_DT] [datetime] NULL,
	[UPDT_USER_ID] [int] NULL,
 CONSTRAINT [PK_CLNT_RISK_RGST] PRIMARY KEY CLUSTERED 
(
	[CLNT_RISK_RGST_KEY] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY]

ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST]  WITH CHECK ADD  CONSTRAINT [FK_CLNT_RMDTN_PLN_172] FOREIGN KEY([CLNT_RMDTN_PLN_KEY])
REFERENCES '+ @SchemaName+ '.[CLNT_RMDTN_PLN] ([CLNT_RMDTN_PLN_KEY])
ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST] CHECK CONSTRAINT [FK_CLNT_RMDTN_PLN_172]
ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST]  WITH CHECK ADD  CONSTRAINT [FK_MSTR_LKP_167] FOREIGN KEY([ROW_STS_KEY])
REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY])
ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST] CHECK CONSTRAINT [FK_MSTR_LKP_167]
ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST]  WITH CHECK ADD  CONSTRAINT [FK_RISK_RSPN_168] FOREIGN KEY([RISK_RSPN_CD])
REFERENCES [dbo].[RISK_RSPN] ([RISK_RSPN_CD])
ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST] CHECK CONSTRAINT [FK_RISK_RSPN_168]
ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST]  WITH CHECK ADD  CONSTRAINT [FK_USER_PRFL_157] FOREIGN KEY([ACPT_USER_ID])
REFERENCES [dbo].[USER_PRFL] ([USER_ID])
ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST] CHECK CONSTRAINT [FK_USER_PRFL_157]
ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST]  WITH CHECK ADD  CONSTRAINT [FK_USER_PRFL_158] FOREIGN KEY([ENT_USER_ID])
REFERENCES [dbo].[USER_PRFL] ([USER_ID])
ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST] CHECK CONSTRAINT [FK_USER_PRFL_158]
ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST]  WITH CHECK ADD  CONSTRAINT [FK_VULN_SEV_169] FOREIGN KEY([ADJ_SEV_CD])
REFERENCES [dbo].[VULN_SEV] ([VULN_SEV_CD])
ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST] CHECK CONSTRAINT [FK_VULN_SEV_169]

SELECT 1 Retval
END
ELSE
BEGIN
SELECT -1 Retval
END 
'
EXECUTE (@Query7)

SET @Query8= '
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '''+ @SchemaName+'''  AND TABLE_NAME =''CLNT_RISK_RGST'')
BEGIN
CREATE TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST_ITM](
	[CLNT_RISK_RGST_KEY] [int] NOT NULL,
	[CLNT_VULN_INSTC_KEY] [int] NOT NULL,
	[CREAT_DT] [datetime] NOT NULL,
	[CREAT_USER_ID] [int] NOT NULL,
	[UPDT_DT] [datetime] NULL,
	[UPDT_USER_ID] [int] NULL,
 CONSTRAINT [PK_CLNT_RISK_RGST_ITM] PRIMARY KEY CLUSTERED 
(
	[CLNT_RISK_RGST_KEY] ASC,
	[CLNT_VULN_INSTC_KEY] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST_ITM]  WITH CHECK ADD  CONSTRAINT [FK_CLNT_RISK_RGST_166] FOREIGN KEY([CLNT_RISK_RGST_KEY])
REFERENCES '+ @SchemaName+ '.[CLNT_RISK_RGST] ([CLNT_RISK_RGST_KEY])
ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST_ITM] CHECK CONSTRAINT [FK_CLNT_RISK_RGST_166]
ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST_ITM]  WITH CHECK ADD  CONSTRAINT [FK_CLNT_VULN_INSTC_173] FOREIGN KEY([CLNT_VULN_INSTC_KEY])
REFERENCES '+ @SchemaName+ '.[CLNT_VULN_INSTC] ([CLNT_VULN_INSTC_KEY])
ALTER TABLE '+ @SchemaName+ '.[CLNT_RISK_RGST_ITM] CHECK CONSTRAINT [FK_CLNT_VULN_INSTC_173]

SELECT 1 Retval
END
ELSE
BEGIN
SELECT -1 Retval
END 
'
EXECUTE (@Query8)

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;


GO
ALTER PROCEDURE [dbo].[List_UserByOrgIDandUserType]
(
      @OrgID			INT,
	  @USER_TYP_KEY     VARCHAR(20),
	  @FLAG		        VARCHAR(1)

)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

	IF @FLAG = 'L'
	BEGIN

      SELECT  DISTINCT A.USER_ID,(FST_NM+' '+LST_NM) [User Name] 
      FROM    USER_PRFL           A
      JOIN    ORG                 B
      ON      A.ORG_KEY			=  B.ORG_KEY
	  JOIN    USER_APPL_ROLE	  C
	  ON      A.USER_ID			=  C.USER_ID
	  JOIN	  APPL_ROLE           D
	  ON      C.APPL_ROLE_KEY   =  D.APPL_ROLE_KEY
	  JOIN	  APPL_ROLE_PERMSN_GRP E
	  ON      C.APPL_ROLE_KEY    =  E.APPL_ROLE_KEY
	  JOIN	  PERMSN_GRP_ASSOC		F
	  ON	  E.PERMSN_GRP_KEY	=  F.PERMSN_GRP_KEY
	  JOIN	  PERMSN					G
	  ON	  F.PERMSN_KEY		= G.PERMSN_KEY
      WHERE   A.ORG_KEY			=  CASE WHEN @OrgID = 0 THEN A.ORG_KEY ELSE @OrgID END
	  AND     A.USER_TYP_KEY	=  CASE WHEN @USER_TYP_KEY = 'Internal' THEN 16 WHEN @USER_TYP_KEY = 'Client' THEN 17 WHEN @USER_TYP_KEY = 'Partner' THEN 18 END
	  AND     A.ROW_STS_KEY		=  1
	  AND     B.ROW_STS_KEY		=  1
	  AND     A.LCK_IND			=  0
	  AND	 G.PERMSN_NM	= 'Add User to Service'
	  -- Add Document upload

      ORDER BY A.USER_ID DESC 
	  END


	  IF @FLAG = 'A'
	BEGIN

      SELECT  DISTINCT A.USER_ID,(FST_NM+' '+LST_NM) [User Name] 
      FROM    USER_PRFL           A
      JOIN    ORG                 B
      ON      A.ORG_KEY			=  B.ORG_KEY
	  JOIN    USER_APPL_ROLE	  C
	  ON      A.USER_ID			=  C.USER_ID
	  JOIN	  APPL_ROLE           D
	  ON      C.APPL_ROLE_KEY   =  D.APPL_ROLE_KEY
	  JOIN	  APPL_ROLE_PERMSN_GRP E
	  ON      C.APPL_ROLE_KEY    =  E.APPL_ROLE_KEY
	  JOIN	  PERMSN_GRP_ASSOC		F
	  ON	  E.PERMSN_GRP_KEY	=  F.PERMSN_GRP_KEY
	  JOIN	  PERMSN					G
	  ON	  F.PERMSN_KEY		= G.PERMSN_KEY
      WHERE   A.ORG_KEY			=  CASE WHEN @OrgID = 0 THEN A.ORG_KEY ELSE @OrgID END
	  AND     A.USER_TYP_KEY	=  CASE WHEN @USER_TYP_KEY = 'Internal' THEN 16 WHEN @USER_TYP_KEY = 'Client' THEN 17 WHEN @USER_TYP_KEY = 'Partner' THEN 18 END
	  AND     A.ROW_STS_KEY		=  1
	  AND     A.LCK_IND			=  0
	  AND     B.ROW_STS_KEY		=  1
	  AND	 G.PERMSN_NM		= 'Add Document upload'
	  

      ORDER BY A.USER_ID DESC 
	  END
IF @FLAG = 'C'
	BEGIN

      SELECT  DISTINCT A.USER_ID,(FST_NM+' '+LST_NM) [User Name] 
      FROM    USER_PRFL           A
      JOIN    ORG                 B
      ON      A.ORG_KEY			=  B.ORG_KEY
	  WHERE   A.ORG_KEY			=  CASE WHEN @OrgID = 0 THEN A.ORG_KEY ELSE @OrgID END
	  AND     A.USER_TYP_KEY	=  CASE WHEN @USER_TYP_KEY = 'Client' THEN 17  END
	  AND     A.ROW_STS_KEY		=  1
	  AND     B.ROW_STS_KEY		=  1
	  AND     A.LCK_IND			=  0

      ORDER BY A.USER_ID DESC 
	  END


	 IF @FLAG = 'R' -- Remediation Owner
	 BEGIN

      SELECT  DISTINCT A.USER_ID,(FST_NM+' '+LST_NM) [User Name] ,A.DEPT_NM
      FROM    USER_PRFL            A
      JOIN    ORG                  B
      ON      A.ORG_KEY			=  B.ORG_KEY
	  JOIN    USER_APPL_ROLE	   C
	  ON      A.USER_ID			=  C.USER_ID
	  JOIN	  APPL_ROLE            D
	  ON      C.APPL_ROLE_KEY   =  D.APPL_ROLE_KEY
      WHERE   A.ORG_KEY			=  CASE WHEN @OrgID = 0 THEN A.ORG_KEY ELSE @OrgID END
	  AND     A.USER_TYP_KEY	=  CASE WHEN @USER_TYP_KEY = 'Internal' THEN 16 WHEN @USER_TYP_KEY = 'Client' THEN 17 WHEN @USER_TYP_KEY = 'Partner' THEN 18 END
	  AND     A.ROW_STS_KEY		=  1
	  AND     A.LCK_IND			=  0
	  AND     B.ROW_STS_KEY		=  1
	  AND	  D.APPL_ROLE_NM	= 'Remediation Owner'
      ORDER BY A.USER_ID DESC 
	  END

	 IF @FLAG = 'G' -- Risk Registry Owner
	 BEGIN

      SELECT  DISTINCT A.USER_ID,(FST_NM+' '+LST_NM) [User Name],A.DEPT_NM
      FROM    USER_PRFL            A
      JOIN    ORG                  B
      ON      A.ORG_KEY			=  B.ORG_KEY
	  JOIN    USER_APPL_ROLE	   C
	  ON      A.USER_ID			=  C.USER_ID
	  JOIN	  APPL_ROLE            D
	  ON      C.APPL_ROLE_KEY   =  D.APPL_ROLE_KEY
      WHERE   A.ORG_KEY			=  CASE WHEN @OrgID = 0 THEN A.ORG_KEY ELSE @OrgID END
	  AND     A.USER_TYP_KEY	=  CASE WHEN @USER_TYP_KEY = 'Internal' THEN 16 WHEN @USER_TYP_KEY = 'Client' THEN 17 WHEN @USER_TYP_KEY = 'Partner' THEN 18 END
	  AND     A.ROW_STS_KEY		=  1
	  AND     A.LCK_IND			=  0
	  AND     B.ROW_STS_KEY		=  1
	  AND	  D.APPL_ROLE_NM	= 'Risk Register Owner'
      ORDER BY A.USER_ID DESC 
	  END
END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;


GO



CREATE PROCEDURE [dbo].[RMDTN_GetPlanListByEngmt]
(
	@CLNT_ENGMT_CD			VARCHAR(50),
	@schema					VARCHAR(50),
	@Userid					INTEGER,
	@Flag					VARCHAR(3)

	

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
	DECLARE @Query VARCHAR(max)

	IF @Flag	= 'AL'
	BEGIN

	SET		@Query = 'SELECT  A.CLNT_RMDTN_PLN_KEY,A.CLNT_ENGMT_CD,A.RMDTN_OWNR_USER_ID,CONCAT(C.FST_NM,'''',C.LST_NM)Owner,
					  A.RMDTN_PLN_STS_CD,B.RMDTN_PLN_STS_NM,
					  A.RMDTN_PLN_NM,A.RMDTN_PLN_DESC,A.RMDTN_PLN_CREAT_DT,A.RMDTN_PLN_NTF_DT,A.RMDTN_PLN_STRT_DT,
					  A.RMDTN_PLN_DUE_DT,A.RMDTN_PLN_CLOS_DT,A.ASSOC_VULN_TOT_CNT,A.ASSOC_VULN_CMPL_CNT,A.ORG_KEY,
					  DATEDIFF(DAY,A.RMDTN_PLN_NTF_DT,GETDATE()) DAYSOPEN,
					  CASE WHEN A.ASSOC_VULN_TOT_CNT <> 0 THEN CONVERT(INTEGER,(convert(numeric(18,2),A.ASSOC_VULN_CMPL_CNT)/convert(numeric(18,2),A.ASSOC_VULN_TOT_CNT))*100) ELSE 0 END Completion


	FROM	'+ @schema+'.CLNT_RMDTN_PLN		A
	JOIN	RMDTN_PLN_STS					B
	ON		A.RMDTN_PLN_STS_CD		=		B.RMDTN_PLN_STS_CD
	JOIN	USER_PRFL						C
	ON		A.RMDTN_OWNR_USER_ID	=		C.USER_ID
	WHERE	A.CLNT_ENGMT_CD			=		'''+ @CLNT_ENGMT_CD+'''
	AND		A.ROW_STS_KEY			=		1 
	ORDER BY CASE WHEN ISNULL(A.UPDT_DT,'''')='''' THEN A.CREAT_DT ELSE A.UPDT_DT END'
 
 	--PRINT    @Query
	 EXECUTE (@Query)
	END

	IF @Flag	= 'RO'
	BEGIN

	SET		@Query = 'SELECT  A.CLNT_RMDTN_PLN_KEY,A.CLNT_ENGMT_CD,A.RMDTN_OWNR_USER_ID,CONCAT(C.FST_NM,'''',C.LST_NM)Owner,
					  A.RMDTN_PLN_STS_CD,B.RMDTN_PLN_STS_NM,
					  A.RMDTN_PLN_NM,A.RMDTN_PLN_DESC,A.RMDTN_PLN_CREAT_DT,A.RMDTN_PLN_NTF_DT,A.RMDTN_PLN_STRT_DT,
					  A.RMDTN_PLN_DUE_DT,A.RMDTN_PLN_CLOS_DT,A.ASSOC_VULN_TOT_CNT,A.ASSOC_VULN_CMPL_CNT,A.ORG_KEY,
					  DATEDIFF(DAY,A.RMDTN_PLN_NTF_DT,GETDATE()) DAYSOPEN,
					  CASE WHEN A.ASSOC_VULN_TOT_CNT <> 0 THEN CONVERT(INTEGER,(convert(numeric(18,2),A.ASSOC_VULN_CMPL_CNT)/convert(numeric(18,2),A.ASSOC_VULN_TOT_CNT))*100) ELSE 0 END Completion


	FROM	'+ @schema+'.CLNT_RMDTN_PLN		A
	JOIN	RMDTN_PLN_STS					B
	ON		A.RMDTN_PLN_STS_CD		=		B.RMDTN_PLN_STS_CD
	JOIN	USER_PRFL						C
	ON		A.RMDTN_OWNR_USER_ID	=		C.USER_ID
	WHERE	A.CLNT_ENGMT_CD			=		'''+ @CLNT_ENGMT_CD+'''
	AND		A.ROW_STS_KEY			=		1
	AND		A.RMDTN_OWNR_USER_ID	=		'+ isnull('''' + convert(varchar(10),@Userid) + '''','null') + '
	ORDER BY CASE WHEN ISNULL(A.UPDT_DT,'''')='''' THEN A.CREAT_DT ELSE A.UPDT_DT END'
 
 --	PRINT    @Query
EXECUTE (@Query)
	END



END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END





GO
CREATE PROCEDURE [dbo].[RMDTN_GetRegistKyeByPlanKey]
(
	@CLNT_RMDTN_PLN_KEY		INTEGER,
	@schema					VARCHAR(50)

	

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
	DECLARE @Query VARCHAR(max)

	SET		@Query = 'SELECT  B.CLNT_RISK_RGST_KEY
			
	FROM	'+ @schema+'.CLNT_RMDTN_PLN				A
	JOIN	'+ @schema+'.CLNT_RISK_RGST				B
	ON		A.CLNT_RMDTN_PLN_KEY			=		B.CLNT_RMDTN_PLN_KEY
	WHERE	A.CLNT_RMDTN_PLN_KEY			=		'+CONVERT(VARCHAR(50),@CLNT_RMDTN_PLN_KEY)+'
 '
--	PRINT    @Query
	EXECUTE (@Query)


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END



GO

CREATE PROCEDURE [dbo].[RMDTN_GetRiskInfoByKey]
(
	@CLNT_RISK_RGST_KEY		INTEGER,
	@schema					VARCHAR(50)

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
	DECLARE @Query VARCHAR(max)

	SET		@Query = 'SELECT B.CLNT_RISK_RGST_KEY, B.ENT_DT,B.ADJ_SEV_CD,B.COMP_CTL_TXT,A.ORG_KEY,B.ENT_USER_ID,
					  C.FST_NM REG_OWNR_FST_NM,C.LST_NM REG_OWNR_LST_NM,C.DEPT_NM REG_OWNR_DEPT_NM,
					  A.CLNT_RMDTN_PLN_KEY,A.CLNT_ENGMT_CD,A.RMDTN_OWNR_USER_ID,E.DEPT_NM RMDTN_OWNR_DEPT_NM,
					  E.FST_NM RMDTN_OWNR_FST_NM,E.LST_NM RMDTN_OWNR_LST_NM,A.RMDTN_PLN_STS_CD,A.RMDTN_PLN_NM,A.RMDTN_PLN_DESC,
					  A.RMDTN_PLN_CREAT_DT, A.RMDTN_PLN_NTF_DT,A.RMDTN_PLN_STRT_DT,A.RMDTN_PLN_DUE_DT,A.RMDTN_PLN_CLOS_DT,
					  A.CREAT_DT,A.CREAT_USER_ID,D.RISK_RSPN_NM,B.RISK_RSPN_CD,B.RISK_JSTFY_TXT,B.ACPT_USER_SGN_TXT,B.ACPT_DT
		
	FROM	'+ @schema+'.CLNT_RMDTN_PLN				A
	JOIN	'+ @schema+'.CLNT_RISK_RGST				B
	ON		A.CLNT_RMDTN_PLN_KEY				=	B.CLNT_RMDTN_PLN_KEY
	JOIN	USER_PRFL								C
	ON		B.ENT_USER_ID						=	C.USER_ID
	LEFT JOIN    RISK_RSPN								D
    ON      B.RISK_RSPN_CD						=   D.RISK_RSPN_CD
	JOIN	USER_PRFL								E
	ON		A.RMDTN_OWNR_USER_ID				=	E.USER_ID
	WHERE	B.CLNT_RISK_RGST_KEY				=	'+CONVERT(VARCHAR(50),@CLNT_RISK_RGST_KEY)+'
	AND		A.ROW_STS_KEY						=	1
 '
--	PRINT    @Query
	EXECUTE (@Query)


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END


GO

CREATE PROCEDURE [dbo].[RMDTN_GetRiskRegistrylist]
(
	@CLNT_ENGMT_CD			VARCHAR(30),
	@Userid					INTEGER,
	@schema					VARCHAR(50),
	@UserFlag				VARCHAR(2)

	

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON	
	DECLARE @Query VARCHAR(max)

	IF	@UserFlag	= 'RO' --Registry Owner
	BEGIN
	SET		@Query = 'SELECT  A.CLNT_RISK_RGST_KEY,A.ADJ_SEV_CD,A.CLNT_RMDTN_PLN_KEY,B.RMDTN_PLN_NM,A.RISK_RGST_ITM_TOT_CNT,
					  A.RISK_RSPN_CD,A.ACPT_DT,A.ACPT_USER_ID,C.VULN_SEV_NM,D.RISK_RSPN_NM,F.FST_NM	,F.LST_NM,A.ACPT_USER_SGN_TXT																																																																																																																																																													
			
	FROM	'+ @schema+'.CLNT_RISK_RGST				A
	JOIN	'+ @schema+'.CLNT_RMDTN_PLN				B
	ON		A.CLNT_RMDTN_PLN_KEY			=		B.CLNT_RMDTN_PLN_KEY
	JOIN	VULN_SEV								C
	ON		C.VULN_SEV_CD					=		A.ADJ_SEV_CD
    LEFT JOIN    RISK_RSPN								D
    ON      A.RISK_RSPN_CD						=   D.RISK_RSPN_CD
--	JOIN	CLNT_RISK_RGST_ITM						E
--	ON		E.CLNT_RISK_RGST_KEY			=		A.CLNT_RISK_RGST_KEY
	JOIN	USER_PRFL								F
	ON		F.USER_ID						=		A.ENT_USER_ID
	WHERE	B.CLNT_ENGMT_CD					=		'''+CONVERT(VARCHAR,@CLNT_ENGMT_CD)+'''
	AND		A.ENT_USER_ID					=		'+CONVERT(VARCHAR,@Userid)+'
	ORDER BY CASE WHEN ISNULL(A.UPDT_DT,'''')='''' THEN A.CREAT_DT ELSE A.UPDT_DT END
 '
--	PRINT    @Query
	EXECUTE (@Query)
	END

	IF	@UserFlag	= 'RA' --Remediation Cordinator or Remediation Analyst Owner
	BEGIN
	SET		@Query = 'SELECT  A.CLNT_RISK_RGST_KEY,A.ADJ_SEV_CD,A.CLNT_RMDTN_PLN_KEY,B.RMDTN_PLN_NM,A.RISK_RGST_ITM_TOT_CNT,
					  A.RISK_RSPN_CD,A.ACPT_DT,A.ACPT_USER_ID,C.VULN_SEV_NM,D.RISK_RSPN_NM,F.FST_NM	,F.LST_NM,A.ACPT_USER_SGN_TXT																																																																																																																																																													
			
	FROM	'+ @schema+'.CLNT_RISK_RGST				A
	JOIN	'+ @schema+'.CLNT_RMDTN_PLN				B
	ON		A.CLNT_RMDTN_PLN_KEY			=		B.CLNT_RMDTN_PLN_KEY
	JOIN	VULN_SEV								C
	ON		C.VULN_SEV_CD					=		A.ADJ_SEV_CD
    LEFT JOIN    RISK_RSPN								D
    ON      A.RISK_RSPN_CD						=   D.RISK_RSPN_CD
--	JOIN	CLNT_RISK_RGST_ITM						E
--	ON		E.CLNT_RISK_RGST_KEY			=		A.CLNT_RISK_RGST_KEY
	JOIN	USER_PRFL								F
	ON		F.USER_ID						=		'+CONVERT(VARCHAR,@Userid)+'
	WHERE	B.CLNT_ENGMT_CD					=		'''+CONVERT(VARCHAR,@CLNT_ENGMT_CD)+'''
--	AND		A.ENT_USER_ID					=		'+CONVERT(VARCHAR,@Userid)+'
	ORDER BY CASE WHEN ISNULL(A.UPDT_DT,'''')=''''  THEN A.CREAT_DT ELSE A.UPDT_DT END
 '
--	PRINT    @Query
	EXECUTE (@Query)
	END

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END


GO

CREATE PROCEDURE [dbo].[RMDTN_GetRiskRegstWorklist]
(
	@Userid					INTEGER,
	@schema					VARCHAR(50),
	@UserFlag				VARCHAR(2),
	@ORG_NM					VARCHAR(100),
	@CLNT_ENGMT_CD			VARCHAR(50),
	@CLNT_ENGMT_NM			VARCHAR(100)

	

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON	
	DECLARE @Query VARCHAR(max)

	IF	@UserFlag	= 'RO' --Registry Owner
	BEGIN
	SET		@Query = 'SELECT  C.CLNT_ENGMT_CD,C.CLNT_ORG_KEY,D.ORG_NM,C.CLNT_ENGMT_NM
			
	FROM	'+ @schema+'.CLNT_RISK_RGST				A
	JOIN	'+ @schema+'.CLNT_RMDTN_PLN				B
	ON		A.CLNT_RMDTN_PLN_KEY			=		B.CLNT_RMDTN_PLN_KEY
	JOIN	CLNT_ENGMT								C
	ON		B.CLNT_ENGMT_CD					=		C.CLNT_ENGMT_CD
    JOIN    ORG										D
    ON      D.ORG_KEY     =      C.CLNT_ORG_KEY
	WHERE	A.ENT_USER_ID			=		'+CONVERT(VARCHAR,@Userid)+'
	AND     ISNULL(D.ORG_NM,'''')		 LIKE CASE WHEN '''+@ORG_NM+''' = '''' THEN  ISNULL(D.ORG_NM,'''') ELSE ''%'' + '''+@ORG_NM+''' + ''%'' END
	AND     ISNULL(C.CLNT_ENGMT_CD,'''') LIKE CASE WHEN '''+@CLNT_ENGMT_CD+''' = '''' THEN   C.CLNT_ENGMT_CD ELSE ''%'' + '''+@CLNT_ENGMT_CD+''' +''%'' END 
	AND     ISNULL(C.CLNT_ENGMT_NM,'''') LIKE CASE WHEN '''+@CLNT_ENGMT_NM+''' = '''' THEN   C.CLNT_ENGMT_NM ELSE ''%'' + '''+@CLNT_ENGMT_NM+''' + ''%''   END   
 '
--	PRINT    @Query
	EXECUTE (@Query)
	END

	IF	@UserFlag	= 'RA' --Remediation Cordinator or Remediation Analyst
	BEGIN
	SET		@Query = 'SELECT  C.CLNT_ENGMT_CD,C.CLNT_ORG_KEY,D.ORG_NM,C.CLNT_ENGMT_NM
			
	FROM	CLNT_ENGMT								C
    JOIN    ORG										D
    ON      D.ORG_KEY						=		C.CLNT_ORG_KEY
	WHERE   ISNULL(D.ORG_NM,'''')		 LIKE CASE WHEN '''+@ORG_NM+''' = '''' THEN  ISNULL(D.ORG_NM,'''') ELSE ''%'' + '''+@ORG_NM+''' + ''%'' END
	AND     ISNULL(C.CLNT_ENGMT_CD,'''') LIKE CASE WHEN '''+@CLNT_ENGMT_CD+''' = '''' THEN   C.CLNT_ENGMT_CD ELSE ''%'' + '''+@CLNT_ENGMT_CD+''' +''%'' END 
	AND     ISNULL(C.CLNT_ENGMT_NM,'''') LIKE CASE WHEN '''+@CLNT_ENGMT_NM+''' = '''' THEN   C.CLNT_ENGMT_NM ELSE ''%'' + '''+@CLNT_ENGMT_NM+''' + ''%''   END   
--	WHERE	A.ENT_USER_ID					=		'+CONVERT(VARCHAR,@Userid)+'
 '
--	PRINT    @Query
	EXECUTE (@Query)
	END
END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END





GO

CREATE PROCEDURE [dbo].[RMDTN_GetRmdtnstslist]

AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
	
			SELECT RMDTN_PLN_STS_CD,RMDTN_PLN_STS_NM FROM RMDTN_PLN_STS ORDER BY RMDTN_PLN_STS_NM


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END



GO
/****** Object:  StoredProcedure [dbo].[RMDTN_INS_CLNT_RISK_RGST]    Script Date: 4/7/2017 5:40:14 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[RMDTN_INS_CLNT_RISK_RGST]
(
       @CLNT_RISK_RGST_KEY			INTEGER,
	   @ROW_STS_KEY					INTEGER,
	   @CLNT_RMDTN_PLN_KEY			INTEGER,	
	   @ADJ_SEV_CD					VARCHAR(3),
	   @ENT_USER_ID					INTEGER,
	   @ENT_DT						DATETIME,
	   @COMP_CTL_TXT				TEXT,
	   @NTF_DT						DATETIME,
	   @ACPT_USER_ID				INTEGER,
	   @ACPT_DT						DATETIME,
	   @ACPT_USER_SGN_TXT			VARCHAR(150),
	   @RISK_RSPN_CD				VARCHAR(1),
	   @RISK_JSTFY_TXT				TEXT,
	   @RISK_RGST_ITM_TOT_CNT		INTEGER,
	   @USER_ID						INTEGER,
       @Flag						VARCHAR(1),    
       @schema						VARCHAR(50)       

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
DECLARE @Query VARCHAR(max)
DECLARE @id INTEGER

       IF @Flag = 'D'
       BEGIN
              
        SET   @Query = 'DELETE FROM '+ @schema+'.CLNT_RISK_RGST
                       WHERE CLNT_RISK_RGST_KEY  =   '+ CONVERT(VARCHAR,@CLNT_RISK_RGST_KEY) +''

              EXECUTE (@Query)
              SELECT @@ROWCOUNT AS RETVALS
                     
       END

       IF @Flag = 'I'
       BEGIN
  
		SET          @Query =	'INSERT '+ @schema+'.CLNT_RISK_RGST (ROW_STS_KEY,CLNT_RMDTN_PLN_KEY,ADJ_SEV_CD,
								ENT_USER_ID,ENT_DT,COMP_CTL_TXT,NTF_DT,ACPT_USER_ID,ACPT_DT,ACPT_USER_SGN_TXT,
								RISK_RSPN_CD,RISK_JSTFY_TXT,RISK_RGST_ITM_TOT_CNT,CREAT_DT,CREAT_USER_ID) VALUES

		('+CONVERT(VARCHAR, @ROW_STS_KEY)+',
		'+CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY)+',
		 '+ isnull('''' + convert(varchar(3),@ADJ_SEV_CD) + '''','null') + ',
		 '+ isnull('''' + convert(varchar,@ENT_USER_ID) + '''','null') + ',
		 '+ isnull('''' + convert(varchar(50),@ENT_DT) + '''','null') + ',
		  '+ isnull('''' + replace(convert(varchar(max),@COMP_CTL_TXT),'''','''''') + '''','null') + ',
		  '+ isnull('''' + convert(varchar(50),@NTF_DT) + '''','null') + ',
		  '+ isnull('''' + convert(varchar,@ACPT_USER_ID) + '''','null') + ',
		  '+ isnull('''' + convert(varchar(50),@ACPT_DT) + '''','null') + ',
		  '+ isnull('''' + convert(varchar(150),@ACPT_USER_SGN_TXT) + '''','null') + ',
		  '+ isnull('''' + convert(varchar(50),@RISK_RSPN_CD) + '''','null') + ',
		  '+ isnull('''' + replace(convert(varchar(max),@RISK_JSTFY_TXT),'''','''''') + '''','null') + ',
		  '+ isnull('''' + convert(varchar,@RISK_RGST_ITM_TOT_CNT) + '''','null') + ',
		  '+'GETDATE()'+',
		  '+CONVERT(VARCHAR,@USER_ID)+') ; SELECT @@IDENTITY' 

		  PRINT @Query
		--  PRINT @id
		--  EXECUTE sp_executesql @Query, N'@Id INTEGER OUTPUT', @NewId OUTPUT
		  -- SELECT @Result = @id
		  DECLARE @Result AS Table (RetValue int)
		  INSERT INTO @Result EXECUTE (@Query)
		  SELECT RetValue FROM @Result
		--  SELECT @id AS RETVAL
                       
       END
	   
       IF @Flag = 'U'
       BEGIN
            
               SET		@Query = 'UPDATE  '+ @schema+'.CLNT_RISK_RGST
               SET      ACPT_USER_ID			= '+ isnull('''' + convert(varchar,@ACPT_USER_ID) + '''','null') + ',
						ACPT_DT					= '+'GETDATE()'+',
						ACPT_USER_SGN_TXT		= '+ isnull('''' + convert(varchar(150),@ACPT_USER_SGN_TXT) + '''','null') + ',
						RISK_RSPN_CD			= '+ isnull('''' + convert(varchar(50),@RISK_RSPN_CD) + '''','null') + ',
						RISK_JSTFY_TXT			=  '+ isnull('''' + replace(convert(varchar(max),@RISK_JSTFY_TXT),'''','''''') + '''','null') + '
               WHERE	CLNT_RISK_RGST_KEY		=  '+CONVERT(VARCHAR,@CLNT_RISK_RGST_KEY)+ +''
              
              
               EXECUTE (@Query)
               SELECT @@ROWCOUNT AS RETVALS
       END

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END


GO
CREATE PROCEDURE [dbo].[RMDTN_INS_CLNT_RISK_RGST_ITM]
(
       @CLNT_RISK_RGST_KEY			INTEGER,
	   @CLNT_VULN_INSTC_KEY			INTEGER,
	   @USER_ID						INTEGER,
       @Flag						VARCHAR(1),    
       @schema						VARCHAR(50)       

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
DECLARE @Query VARCHAR(max)
DECLARE @id INTEGER

       IF @Flag = 'D'
       BEGIN
              
        SET   @Query = 'DELETE FROM '+ @schema+'.CLNT_RISK_RGST_ITM
                       WHERE CLNT_RISK_RGST_KEY  =   '+ CONVERT(VARCHAR,@CLNT_RISK_RGST_KEY) +''

              EXECUTE (@Query)
              SELECT @@ROWCOUNT AS RETVALS
                     
       END

       IF @Flag = 'I'
       BEGIN
  
		SET          @Query =	'INSERT '+ @schema+'.CLNT_RISK_RGST_ITM (CLNT_RISK_RGST_KEY,CLNT_VULN_INSTC_KEY,CREAT_DT,CREAT_USER_ID) VALUES

		('+CONVERT(VARCHAR, @CLNT_RISK_RGST_KEY)+',
		'+CONVERT(VARCHAR,@CLNT_VULN_INSTC_KEY)+',
		'+'GETDATE()'+',
		  '+CONVERT(VARCHAR,@USER_ID)+') ; SELECT @@IDENTITY' 

		--  PRINT @Query
		--  PRINT @id
		--  EXECUTE sp_executesql @Query, N'@Id INTEGER OUTPUT', @NewId OUTPUT
		  -- SELECT @Result = @id
		  DECLARE @Result AS Table (RetValue int)
		  INSERT INTO @Result EXECUTE (@Query)
	--	  SELECT RetValue FROM @Result
		--  SELECT @id AS RETVAL
         SELECT @@ROWCOUNT AS RETVALS               
       END
	   
       IF @Flag = 'U'
       BEGIN
            
        --       SET   @Query = 'UPDATE  '+ @schema+'.CLNT_RMDTN_PLN_COMMT
        --       SET     CLNT_RMDTN_PLN_KEY	=   '+CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY)+',
        --               ENT_DT				=   '+ isnull('''' + convert(varchar(50),@ENT_DT) + '''','null') + ',  
					   --COMMT_TXT			=	'+ isnull('''' + replace(convert(varchar(max),@COMMT_TXT),'''','''''') + '''','null') + ',
        --               UPDT_DT				=   '+'GETDATE()'+'
					   --UPDT_USER_ID			=	'+ CONVERT(VARCHAR,@USER_ID) +'
        --       WHERE   CLNT_RMDTN_PLN_COMMT_KEY  =   '+ CONVERT(VARCHAR,@CLNT_RMDTN_PLN_COMMT_KEY) +''
              
              
                        EXECUTE (@Query)
               SELECT @@ROWCOUNT AS RETVALS
       END

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END



GO
CREATE PROCEDURE [dbo].[RMDTN_INS_CLNT_RMDTN_PLN]
(
       @CLNT_RMDTN_PLN_KEY			INTEGER,
	   @ROW_STS_KEY					INTEGER,
	   @ORG_KEY						INTEGER,	
	   @CLNT_ENGMT_CD				VARCHAR(30),				
       @RMDTN_OWNR_USER_ID			INTEGER,
	   @RMDTN_PLN_STS_CD            VARCHAR(1),
	   @RMDTN_PLN_NM				VARCHAR(150),
	   @RMDTN_PLN_DESC				TEXT,
	   @RMDTN_PLN_CREAT_DT			DATETIME,
	   @RMDTN_PLN_NTF_DT			DATETIME,
	   @RMDTN_PLN_STRT_DT			DATETIME,
	   @RMDTN_PLN_DUE_DT			DATETIME,
	   @RMDTN_PLN_CLOS_DT			DATETIME,
	   @ASSOC_VULN_TOT_CNT			INTEGER,
	   @ASSOC_VULN_CMPL_CNT 		INTEGER,
       @USER_ID						INTEGER,
       @Flag						VARCHAR(1),    
       @schema						VARCHAR(50)       

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
DECLARE @Query VARCHAR(max)
DECLARE @id INTEGER

       IF @Flag = 'D'
       BEGIN
              
        SET   @Query = 'DELETE FROM '+ @schema+'.CLNT_RMDTN_PLN
                       WHERE CLNT_RMTN_PLN_KEY  =' +CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY) +''

              EXECUTE (@Query)
              SELECT @@ROWCOUNT AS RETVALS
                     
       END

       IF @Flag = 'I'
       BEGIN
  
		SET          @Query = 'INSERT '+ @schema+'.CLNT_RMDTN_PLN (ROW_STS_KEY,ORG_KEY, CLNT_ENGMT_CD,RMDTN_OWNR_USER_ID, 
					RMDTN_PLN_STS_CD,RMDTN_PLN_NM,RMDTN_PLN_DESC,RMDTN_PLN_CREAT_DT,RMDTN_PLN_NTF_DT,RMDTN_PLN_STRT_DT,
					RMDTN_PLN_DUE_DT,RMDTN_PLN_CLOS_DT,ASSOC_VULN_TOT_CNT,ASSOC_VULN_CMPL_CNT,CREAT_DT,CREAT_USER_ID) VALUES

		('+CONVERT(VARCHAR, @ROW_STS_KEY)+',
		'+CONVERT(VARCHAR,@ORG_KEY)+',
		'''+CONVERT(VARCHAR,@CLNT_ENGMT_CD)+''',
		 '+ isnull('''' + convert(varchar(10),@RMDTN_OWNR_USER_ID) + '''','null') + ',
		 '+ isnull('''' + convert(varchar(1),@RMDTN_PLN_STS_CD) + '''','null') + ',
		  '+ isnull('''' + convert(varchar(150),@RMDTN_PLN_NM) + '''','null') + ',
		  '+ isnull('''' + replace(convert(varchar(max),@RMDTN_PLN_DESC),'''','''''') + '''','null') + ',
		  '+ isnull('''' + convert(varchar(50),@RMDTN_PLN_CREAT_DT) + '''','null') + ',
		  '+ isnull('''' + convert(varchar(50),@RMDTN_PLN_NTF_DT) + '''','null') + ',
		  '+ isnull('''' + convert(varchar(50),@RMDTN_PLN_STRT_DT) + '''','null') + ',
		  '+ isnull('''' + convert(varchar(50),@RMDTN_PLN_DUE_DT) + '''','null') + ',
		  '+ isnull('''' + convert(varchar(50),@RMDTN_PLN_CLOS_DT) + '''','null') + ',
		  '+ isnull('''' + convert(varchar,@ASSOC_VULN_TOT_CNT) + '''','null') + ',
		  '+ isnull('''' + convert(varchar,@ASSOC_VULN_CMPL_CNT) + '''','null') + ',
		  '+'GETDATE()'+',
		  '+CONVERT(VARCHAR,@USER_ID)+') ; SELECT @@IDENTITY' 

		 -- PRINT @Query
		--  PRINT @id
		--  EXECUTE sp_executesql @Query, N'@Id INTEGER OUTPUT', @NewId OUTPUT
		--   SELECT @Result = @id
		  DECLARE @Result AS Table (RetValue int)
		  INSERT INTO @Result EXECUTE (@Query)
		  SELECT RetValue FROM @Result
		--  SELECT @id AS RETVAL
                       
       END
	   
       IF @Flag = 'U'
       BEGIN
            
               SET   @Query = 'UPDATE  '+ @schema+'.CLNT_RMDTN_PLN
               SET     RMDTN_OWNR_USER_ID	=   '+ isnull('''' + convert(varchar(10),@RMDTN_OWNR_USER_ID) + '''','null') + ',   
					   RMDTN_PLN_NM			=	'+ isnull('''' + convert(varchar(150),@RMDTN_PLN_NM) + '''','null') + ',
					   RMDTN_PLN_DESC		=	'+ isnull('''' + replace(convert(varchar(max),@RMDTN_PLN_DESC),'''','''''') + '''','null') + ',
					   RMDTN_PLN_STRT_DT	=	'+ isnull('''' + convert(varchar(50),@RMDTN_PLN_STRT_DT) + '''','null') + ',
					   RMDTN_PLN_DUE_DT		=	'+ isnull('''' + convert(varchar(50),@RMDTN_PLN_DUE_DT) + '''','null') + ',
					   ASSOC_VULN_TOT_CNT	=	'+ isnull('''' + convert(varchar,@ASSOC_VULN_TOT_CNT) + '''','null') + ',
					   UPDT_DT				=   '+'GETDATE()'+',
					   UPDT_USER_ID			=	'+ CONVERT(VARCHAR,@USER_ID) +'
               WHERE   CLNT_RMDTN_PLN_KEY   =      '+ CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY) +''
              
              
                        EXECUTE (@Query)
               SELECT @@ROWCOUNT AS RETVALS
       END

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END


GO
CREATE PROCEDURE [dbo].[RMDTN_INS_CLNT_RMDTN_PLN_COMMT]
(
       @CLNT_RMDTN_PLN_COMMT_KEY	INTEGER,
	   @CLNT_RMDTN_PLN_KEY			INTEGER,		
	   @ENT_DT						DATETIME,
	   @COMMT_TXT					TEXT,
	   @USER_ID						INTEGER,
       @Flag						VARCHAR(1),    
       @schema						VARCHAR(50)       

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
DECLARE @Query VARCHAR(max)
DECLARE @id INTEGER

       IF @Flag = 'D'
       BEGIN
              
        SET   @Query = 'DELETE FROM '+ @schema+'.CLNT_RMDTN_PLN_COMMT
                       WHERE CLNT_RMDTN_PLN_COMMT_KEY  =   '+ CONVERT(VARCHAR,@CLNT_RMDTN_PLN_COMMT_KEY) +''

              EXECUTE (@Query)
              SELECT @@ROWCOUNT AS RETVALS
                     
       END

       IF @Flag = 'I'
       BEGIN
  
		SET          @Query =	'INSERT '+ @schema+'.CLNT_RMDTN_PLN_COMMT (CLNT_RMDTN_PLN_KEY,ENT_DT,
								COMMT_TXT,CREAT_DT,CREAT_USER_ID) VALUES

		('+CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY)+',
		'+ isnull('''' + convert(varchar(50),@ENT_DT) + '''','null') + ',
		'+ isnull('''' + replace(convert(varchar(max),@COMMT_TXT),'''','''''') + '''','null') + ',
		'+'GETDATE()'+',
		'+CONVERT(VARCHAR,@USER_ID)+') ; SELECT @@IDENTITY' 

		--  PRINT @Query
		--  PRINT @id
		--  EXECUTE sp_executesql @Query, N'@Id INTEGER OUTPUT', @NewId OUTPUT
		  -- SELECT @Result = @id
		  DECLARE @Result AS Table (RetValue int)
		  INSERT INTO @Result EXECUTE (@Query)
		  SELECT RetValue FROM @Result
		--  SELECT @id AS RETVAL
                       
       END
	   
       IF @Flag = 'U'
       BEGIN
            
               SET   @Query = 'UPDATE  '+ @schema+'.CLNT_RMDTN_PLN_COMMT
               SET     CLNT_RMDTN_PLN_KEY	=   '+CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY)+',
                       ENT_DT				=   '+ isnull('''' + convert(varchar(50),@ENT_DT) + '''','null') + ',  
					   COMMT_TXT			=	'+ isnull('''' + replace(convert(varchar(max),@COMMT_TXT),'''','''''') + '''','null') + ',
                       UPDT_DT				=   '+'GETDATE()'+'
					   UPDT_USER_ID			=	'+ CONVERT(VARCHAR,@USER_ID) +'
               WHERE   CLNT_RMDTN_PLN_COMMT_KEY  =   '+ CONVERT(VARCHAR,@CLNT_RMDTN_PLN_COMMT_KEY) +''
              
              
                        EXECUTE (@Query)
               SELECT @@ROWCOUNT AS RETVALS
       END

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END

GO
CREATE PROCEDURE [dbo].[RMDTN_ListRiskRSPN]
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	RISK_RSPN_CD,RISK_RSPN_NM
FROM	RISK_RSPN
ORDER BY RISK_RSPN_NM

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;


GO

CREATE PROCEDURE [dbo].[RMDTN_UpdateRmdtnNtfDate]
(
	@CLNT_RMDTN_PLN_KEY		INTEGER,
	@Userid					INTEGER,
	@schema					VARCHAR(50)
)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON	
	DECLARE @Query VARCHAR(max)
	
	SET		@Query =		'UPDATE '+@schema+'.CLNT_RMDTN_PLN
							 SET RMDTN_PLN_NTF_DT		=   '+'GETDATE()'+',
							 UPDT_DT					=	'+'GETDATE()'+',
							 UPDT_USER_ID				=	'+CONVERT(VARCHAR,@Userid)+'
							 WHERE CLNT_RMDTN_PLN_KEY	=   '+CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY)+''
	
	 SELECT @@ROWCOUNT AS RETVALS
 
--	PRINT    @Query
	EXECUTE (@Query)


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END

GO

CREATE PROCEDURE [dbo].[RMDTN_UpdateRiskRegistry]
(
	@CLNT_RISK_RGST_KEY		INTEGER,
	@ADJ_SEV_CD				VARCHAR(3),
	@COMP_CTL_TXT			TEXT,
	@ENT_USER_ID			INTEGER,
	@Userid					INTEGER,
	@schema					VARCHAR(50)

	

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON	
	DECLARE @Query VARCHAR(max)
	
	SET		@Query =	'UPDATE '+ @schema+'.CLNT_RISK_RGST
						SET ADJ_SEV_CD		= '+ isnull('''' + convert(varchar(3),@ADJ_SEV_CD) + '''','null') + ',
							COMP_CTL_TXT	= '+ISNULL('''' + REPLACE(CONVERT(VARCHAR(MAX),@COMP_CTL_TXT),'''','''''') + '''','NULL') +',
							ENT_USER_ID		=  '+ isnull('''' + convert(varchar,@ENT_USER_ID) + '''','null') + ',
							UPDT_DT			=	'+'GETDATE()'+',
							UPDT_USER_ID	=	'+CONVERT(VARCHAR,@Userid)+'
							WHERE	CLNT_RISK_RGST_KEY		=  '+CONVERT(VARCHAR,@CLNT_RISK_RGST_KEY)+''
	
	
 
--	PRINT    @Query
	EXECUTE (@Query)
	 SELECT @@ROWCOUNT AS RETVALS

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END

GO

CREATE PROCEDURE [dbo].[RMDTN_UpdateFindingRmdtnStatus]
(
	@CLNT_VULN_INSTC_KEY		INTEGER,
	@VULN_RMDTN_STS_CD			VARCHAR(1),
	@CLOS_RSN_TXT				TEXT,
	@Userid						INTEGER,
	@schema						VARCHAR(50),
	@CLOS_DT					VARCHAR(50)						

	

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON	
	DECLARE @Query VARCHAR(max)
	SET		@Query =	'UPDATE '+ @schema+'.CLNT_VULN_RMDTN_PLN_ITM
							SET	 VULN_RMDTN_STS_CD	=	'+ isnull('''' + convert(varchar(1),@VULN_RMDTN_STS_CD) + '''','null') + ',
							CLOS_RSN_TXT		=		'+ isnull('''' + replace(convert(varchar(max),@CLOS_RSN_TXT),'''','''''') + '''','null') + ',
							UPDT_DT				=	'+'GETDATE()'+',
							CLOS_DT				=	'+ isnull('''' + convert(varchar(50),@CLOS_DT) + '''','null') + ',
							UPDT_USER_ID		=	'+CONVERT(VARCHAR,@Userid)+'
							
							WHERE	CLNT_VULN_INSTC_KEY = '+CONVERT(VARCHAR,@CLNT_VULN_INSTC_KEY)+''
	

 
 SELECT @@ROWCOUNT AS RETVALS

 
--	PRINT    @Query
	EXECUTE (@Query)


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END


GO
/****** Object:  StoredProcedure [dbo].[RMDTN_INS_CLNT_VULN_RMDTN_PLN_ITM]    Script Date: 4/6/2017 3:32:26 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[RMDTN_INS_CLNT_VULN_RMDTN_PLN_ITM]
(
       @CLNT_VULN_INSTC_KEY			INTEGER,
	   @CLNT_RMDTN_PLN_KEY			INTEGER,
	   @VULN_RMDTN_STS_CD           VARCHAR(1),			
	   @CLOS_DT						DATETIME,
	   @ROW_STS_KEY					INTEGER,
	   @USER_ID						INTEGER,
       @Flag						VARCHAR(1),    
       @schema						VARCHAR(50)       

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
DECLARE @Query VARCHAR(max)
DECLARE @Query1 VARCHAR(max)
DECLARE @id INTEGER

       IF @Flag = 'D'
       BEGIN
              
        SET   @Query = 'DELETE FROM '+ @schema+'.CLNT_VULN_RMDTN_PLN_ITM
                       WHERE CLNT_VULN_INSTC_KEY  =   '+ CONVERT(VARCHAR,@CLNT_VULN_INSTC_KEY) +''

              EXECUTE (@Query)

			          SET  @Query1 = 'DELETE FROM '+ @schema+'.CLNT_RISK_RGST_ITM
                       WHERE CLNT_VULN_INSTC_KEY =	'+CONVERT(VARCHAR,@CLNT_VULN_INSTC_KEY) +''

				 
              EXECUTE (@Query1)
			  	
              SELECT @@ROWCOUNT AS RETVALS

                     
       END

       IF @Flag = 'I'
       BEGIN
  
		SET          @Query =	'INSERT '+ @schema+'.CLNT_VULN_RMDTN_PLN_ITM (CLNT_VULN_INSTC_KEY,CLNT_RMDTN_PLN_KEY,VULN_RMDTN_STS_CD,
								CLOS_DT,ROW_STS_KEY,CREAT_DT,CREAT_USER_ID) VALUES

		('+CONVERT(VARCHAR,@CLNT_VULN_INSTC_KEY)+',
		'+CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY)+',
		'+ isnull('''' + convert(varchar(1),@VULN_RMDTN_STS_CD) + '''','null') + ',
		'+ isnull('''' + convert(varchar(50),@CLOS_DT) + '''','null') + ',
		'+CONVERT(VARCHAR, @ROW_STS_KEY)+',
		'+'GETDATE()'+',
		 '+CONVERT(VARCHAR,@USER_ID)+') ; ' 

 EXECUTE (@Query)
SELECT @@ROWCOUNT AS RETVALS
		 -- PRINT @Query
		--  PRINT @id
		--  EXECUTE sp_executesql @Query, N'@Id INTEGER OUTPUT', @NewId OUTPUT
		--   SELECT @Result = @id
		  --DECLARE @Result AS Table (RetValue int)
		  --INSERT INTO @Result EXECUTE (@Query)
		  --SELECT RetValue FROM @Result
		--  SELECT @id AS RETVAL
                       
       END
	   
       IF @Flag = 'U'
       BEGIN
            
               SET   @Query = 'UPDATE  '+ @schema+'.CLNT_VULN_RMDTN_PLN_ITM
               SET     CLNT_RMDTN_PLN_KEY	=   '+CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY)+',
                       VULN_RMDTN_STS_CD	=   '+ isnull('''' + convert(varchar(1),@VULN_RMDTN_STS_CD) + '''','null') + ',  
					   CLOS_DT				=	'+ isnull('''' + convert(varchar(50),@CLOS_DT) + '''','null') + ',
					   ROW_STS_KEY			=	'+ CONVERT(VARCHAR,@ROW_STS_KEY) +',
                       UPDT_DT				=   '+'GETDATE()'+'
					   UPDT_USER_ID			=	'+ CONVERT(VARCHAR,@USER_ID) +'
               WHERE   CLNT_VULN_INSTC_KEY  =   '+ CONVERT(VARCHAR,@CLNT_VULN_INSTC_KEY) +''
              
              
                        EXECUTE (@Query)
               SELECT @@ROWCOUNT AS RETVALS
       END

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END




GO


CREATE PROCEDURE [dbo].[RMDTN_GetCOMMTByPlanKey]
(
	@CLNT_RMDTN_PLN_KEY		INTEGER,
	@schema					VARCHAR(50)

	

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
	DECLARE @Query VARCHAR(max)

	SET		@Query = 'SELECT  B.CLNT_RMDTN_PLN_COMMT_KEY,A.CLNT_RMDTN_PLN_KEY,B.ENT_DT,B.COMMT_TXT,A.CREAT_DT,
	A.CREAT_USER_ID,C.FST_NM+'' ''+C.LST_NM Username


	FROM	'+ @schema+'.CLNT_RMDTN_PLN		A
	JOIN	'+ @schema+'.CLNT_RMDTN_PLN_COMMT			B
	ON		A.CLNT_RMDTN_PLN_KEY	=		B.CLNT_RMDTN_PLN_KEY
	JOIN	USER_PRFL						C
	ON		B.CREAT_USER_ID			=		C.USER_ID
	WHERE	A.CLNT_RMDTN_PLN_KEY	=		'+CONVERT(VARCHAR(50),@CLNT_RMDTN_PLN_KEY)+'
 '
--	PRINT    @Query
	EXECUTE (@Query)


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END





GO
/****** Object:  StoredProcedure [dbo].[RMDTN_GetFindingsByPlanKey]    Script Date: 4/6/2017 7:38:12 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[RMDTN_GetFindingsByPlanKey]
(
	@CLNT_RMDTN_PLN_KEY		INTEGER,
	@schema					VARCHAR(50)

	

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
	DECLARE @Query VARCHAR(max)

	SET		@Query = 'SELECT  B.CLNT_VULN_INSTC_KEY,A.CLNT_RMDTN_PLN_KEY,B.VULN_RMDTN_STS_CD,B.CLOS_DT,C.IPADR,C.SFTW_NM,C.VULN_SEV_CD,
			B.CREAT_DT,C.VULN_NM,D.VULN_SEV_NM,E.VULN_RMDTN_STS_NM ,C.VULN_NM,F.VULN_CATGY_NM
			
	FROM	'+ @schema+'.CLNT_RMDTN_PLN				A
	JOIN	'+ @schema+'.CLNT_VULN_RMDTN_PLN_ITM	B
	ON		A.CLNT_RMDTN_PLN_KEY			=		B.CLNT_RMDTN_PLN_KEY
	JOIN	'+ @schema+'.CLNT_VULN_INSTC			C
	ON		B.CLNT_VULN_INSTC_KEY			=		C.CLNT_VULN_INSTC_KEY
	JOIN	VULN_RMDTN_STS							E
	ON		B.VULN_RMDTN_STS_CD				=		E.VULN_RMDTN_STS_CD
	JOIN	VULN_SEV								D
	ON		C.VULN_SEV_CD					=		D.VULN_SEV_CD
	JOIN	VULN_CATGY								F
	ON		C.VULN_CATGY_CD					=		F.VULN_CATGY_CD
	WHERE	A.CLNT_RMDTN_PLN_KEY			=		'+CONVERT(VARCHAR(50),@CLNT_RMDTN_PLN_KEY)+'
 '
--	PRINT    @Query
	EXECUTE (@Query)


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END




GO

CREATE PROCEDURE [dbo].[RMDTN_GetFindingsByRegistKey]
(
	@CLNT_RISK_RGST_KEY		INTEGER,
	@schema					VARCHAR(50)

	

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
	DECLARE @Query VARCHAR(max)

	SET		@Query = 'SELECT  B.CLNT_VULN_INSTC_KEY,A.CLNT_RMDTN_PLN_KEY,C.IPADR,C.SFTW_NM,C.VULN_SEV_CD,
			B.CREAT_DT,C.VULN_NM,D.VULN_SEV_NM,F.VULN_CATGY_NM,C.VULN_CREAT_DT,C.VULN_CLOS_DT,E.RMDTN_PLN_STS_NM
			
	FROM	'+ @schema+'.CLNT_RISK_RGST				A
	JOIN	'+ @schema+'.CLNT_RISK_RGST_ITM			B
	ON		A.CLNT_RISK_RGST_KEY			=		B.CLNT_RISK_RGST_KEY
	JOIN	'+ @schema+'.CLNT_VULN_INSTC			C
	ON		B.CLNT_VULN_INSTC_KEY			=		C.CLNT_VULN_INSTC_KEY
	JOIN	'+ @schema+'.CLNT_RMDTN_PLN				G
	ON		A.CLNT_RMDTN_PLN_KEY			=		G.CLNT_RMDTN_PLN_KEY
	JOIN	RMDTN_PLN_STS							E
	ON		G.RMDTN_PLN_STS_CD				=		E.RMDTN_PLN_STS_CD
	JOIN	VULN_SEV								D
	ON		C.VULN_SEV_CD					=		D.VULN_SEV_CD
	JOIN	VULN_CATGY								F
	ON		C.VULN_CATGY_CD					=		F.VULN_CATGY_CD
	WHERE	A.CLNT_RISK_RGST_KEY			=		'+CONVERT(VARCHAR(50),@CLNT_RISK_RGST_KEY)+'
 '
--	PRINT    @Query
	EXECUTE (@Query)


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END

GO
CREATE PROCEDURE [dbo].[RMTDNListOSCATGY]
AS
BEGIN

BEGIN TRY
SET NOCOUNT ON

			SELECT   OS_CATGY_KEY,OS_CATGY_NM
			FROM	 OS_CATGY		
			WHERE	 ISNULL(OS_CATGY_NM,'')<>''
			ORDER BY OS_CATGY_KEY
END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END

GO
CREATE PROCEDURE [dbo].[RMTDN_GetFindingListSearchCriteria]
(
	@CLNT_ENGMT_CD			VARCHAR(50),
	@SchemaName				VARCHAR(50),
	@VULN_SEV_CD			VARCHAR(500),
	@VULN_SRC_KEY			VARCHAR(500),
	@SECUR_SRVC_CD			VARCHAR(500),
	@OS_CATGY				VARCHAR(500),
	@VULN_CATGY_CD			VARCHAR(500)

	

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
	DECLARE @Query VARCHAR(max)



	SET		@Query = 'SELECT A.CLNT_ENGMT_CD,A.CLNT_VULN_INSTC_KEY,A.VULN_NM,A.CVE_ID,ISNULL(A.IPADR,'''')IPADR,ISNULL(A.APPL_URL,'''')APPL_URL
			FROM	  '+ @SchemaName+ '.CLNT_VULN_INSTC							  A
			WHERE	  A.CLNT_ENGMT_CD							= '''+@CLNT_ENGMT_CD +'''
			AND		  A.VULN_INSTC_STS_CD						= ''V''
			AND		  A.VULN_SEV_CD								NOT IN(''I'')
			AND		  A.ROW_STS_KEY								= 1
			AND		  1= CASE WHEN '''+@VULN_SEV_CD+''' = '''' THEN 1	
					  WHEN A.VULN_SEV_CD IN (SELECT Items FROM Dbo.FnSplit('''+@VULN_SEV_CD+''','','')) THEN 1 END
			AND		  1= CASE WHEN '''+@VULN_SRC_KEY+''' = '''' THEN 1	
					  WHEN A.VULN_SRC_KEY IN (SELECT Items FROM Dbo.FnSplit('''+@VULN_SRC_KEY+''','','')) THEN 1 END
			AND		  1= CASE WHEN '''+@SECUR_SRVC_CD+''' = '''' THEN 1	
					  WHEN A.SECUR_SRVC_CD IN (SELECT Items FROM Dbo.FnSplit('''+@SECUR_SRVC_CD+''','','')) THEN 1 END
			AND		  1= CASE WHEN '''+@OS_CATGY+''' = '''' THEN 1	
					  WHEN A.OS_KEY IN (SELECT C.OS_KEY FROM Dbo.FnSplit('''+@OS_CATGY+''','','') AS A
					  JOIN OS_CATGY B ON A.Items = B.OS_CATGY_KEY
					  JOIN OS C ON B.OS_CATGY_KEY = C.OS_CATGY_KEY) THEN 1 END
			AND		  1= CASE WHEN '''+@VULN_CATGY_CD+''' = '''' THEN 1	
					  WHEN A.VULN_CATGY_CD IN (SELECT Items FROM Dbo.FnSplit('''+@VULN_CATGY_CD+''','','')) THEN 1 END
		    AND		  A.CLNT_VULN_INSTC_KEY NOT IN(SELECT CLNT_VULN_INSTC_KEY FROM '+ @SchemaName+ '.CLNT_VULN_RMDTN_PLN_ITM )

		
			 '
	-- PRINT    @Query
 EXECUTE (@Query)



END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: INS_USER_PRFL
	** Desc: This procedure insert data into USER_PRFL table
	** Auth: Prasad varma
	** Date: 13/4/2016
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    00/00/1999      xxxxx          

	**************************************/

	ALTER PROCEDURE [dbo].[INS_USER_PRFL](
	@ORG_KEY            INTEGER,
	@USER_TYP_KEY       INTEGER,
	@ROW_STS_KEY        INTEGER, 
	@FST_NM             VARCHAR(150), 
	@LST_NM             VARCHAR(150), 
	@MIDL_NM            VARCHAR(150), 
	@JOB_TITL_NM        VARCHAR(150), 
	@EMAIL              VARCHAR(150), 
	@TEL_NBR            VARCHAR(20),
	@USER_VERF_IND		INTEGER, -- DEFAULT 0
	@LCK_IND            INTEGER, -- DEFAULT 0
	@LOGIN_ATMPT_CNT    INTEGER,
	@CREAT_USER_ID      INTEGER,
	@MAC_ADR_NM			VARCHAR(50),
	@STS_COMMT_TXT		TEXT,
	@DEPT_NM			VARCHAR(150) 
	)

	AS
	BEGIN
		BEGIN TRY

		SET NOCOUNT ON

		    INSERT USER_PRFL(ORG_KEY,USER_TYP_KEY,ROW_STS_KEY,FST_NM,LST_NM,MIDL_NM,JOB_TITL_NM,EMAIL_ID,TEL_NBR,USER_VERF_IND,LCK_IND,LOGIN_ATMPT_CNT,
			CREAT_DT,CREAT_USER_ID,MAC_ADR_NM,STS_COMMT_TXT,DEPT_NM) VALUES
			(@ORG_KEY,@USER_TYP_KEY,@ROW_STS_KEY,@FST_NM,@LST_NM,@MIDL_NM,@JOB_TITL_NM,@EMAIL,@TEL_NBR,@USER_VERF_IND,@LCK_IND,@LOGIN_ATMPT_CNT,
			GETDATE(),@CREAT_USER_ID,@MAC_ADR_NM,@STS_COMMT_TXT,@DEPT_NM)

			SELECT SCOPE_IDENTITY() AS RETVAL

		END TRY

		BEGIN CATCH
			
			DECLARE @ErrorNumber INT = ERROR_NUMBER();
			DECLARE @ErrorLine INT = ERROR_LINE();
			DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
			DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
			DECLARE @ErrorState INT = ERROR_STATE();

			PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
			PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

			RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
		  END CATCH
		
	END;

	
GO
ALTER PROCEDURE [dbo].[GetUserDetailsByID]  
(  
       @UserID  INTEGER 
)  
AS  
BEGIN  
BEGIN TRY  
SET NOCOUNT ON  

  
SELECT A.[USER_ID] ID,USER_TYP_KEY,dbo.fnGetMasterLkpNameByID(USER_TYP_KEY) [User Type],B.ORG_NM [Organization Name],
	   A.ORG_KEY,FST_NM [First Name],MIDL_NM [Middle Name],LST_NM [Last Name],JOB_TITL_NM [Job Title],EMAIL_ID [EMAIL ID],
	   TEL_NBR [Phone Number],dbo.fnGetMasterLkpNameByID(A.ROW_STS_KEY)[Status], A.STS_COMMT_TXT,A.ROW_STS_KEY,DEPT_NM	
	     
FROM   USER_PRFL			 A
JOIN   ORG					 B
ON	   A.ORG_KEY		   = B.ORG_KEY
WHERE  A.[USER_ID]         = @UserID 
ORDER BY CASE WHEN ISNULL(A.UPDT_DT,'')='' THEN A.CREAT_DT ELSE A.UPDT_DT END DESC  
END TRY  
  
BEGIN CATCH  
  
  
    DECLARE @ErrorNumber INT = ERROR_NUMBER();  
    DECLARE @ErrorLine INT = ERROR_LINE();  
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
    DECLARE @ErrorState INT = ERROR_STATE();  
  
    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
  END CATCH  
-- COMMIT TRANSACTION  
END


GO
ALTER PROCEDURE [dbo].[UPDATE_USER_PRFL](
       @USER_ID            INTEGER,
       @ORG_KEY            INTEGER,
       @USER_TYP_KEY       INTEGER,
       @ROW_STS_KEY        INTEGER, 
       @FST_NM             VARCHAR(150), 
       @LST_NM             VARCHAR(150), 
       @MIDL_NM            VARCHAR(150), 
       @JOB_TITL_NM        VARCHAR(150), 
       @TEL_NBR            VARCHAR(20),
       @UPDAT_USER_ID      INTEGER,
	   @STS_COMMT_TXT	   TEXT, 
	   @DEPT_NM			   VARCHAR(150) 
       
       )

       AS
       BEGIN



              BEGIN TRY
			  DECLARE @liRowStatus INTEGER = 0
			  SET NOCOUNT ON

			      SELECT    @liRowStatus = ROW_STS_KEY FROM USER_PRFL WHERE  USER_ID =   @USER_ID

                  UPDATE	USER_PRFL
                  SET		ORG_KEY			=	@ORG_KEY,
							USER_TYP_KEY	=	@USER_TYP_KEY,
							ROW_STS_KEY		=	@ROW_STS_KEY,
							FST_NM			=	@FST_NM,
							LST_NM			=	@LST_NM,
							MIDL_NM			=	@MIDL_NM,
							JOB_TITL_NM		=	@JOB_TITL_NM,
							TEL_NBR			=	@TEL_NBR,
							UPDT_DT			=	GETDATE(),
							UPDT_USER_ID	=	@UPDAT_USER_ID,
							STS_COMMT_TXT   =   @STS_COMMT_TXT,
							DEPT_NM			=	@DEPT_NM,
							USER_VERF_IND	=   CASE WHEN @liRowStatus = 2 AND @ROW_STS_KEY = 1 THEN 0 ELSE USER_VERF_IND END
							
					 WHERE  USER_ID			=   @USER_ID

                     SELECT 1 AS RETVAL

              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END

	   

GO
CREATE PROCEDURE  [dbo].[RMTDN_FindingDetailsByID]
(
	
	@CLNT_ENGMT_CD		 VARCHAR(100),
	@CLNT_VULN_INSTC_KEY VARCHAR(1000),
	@SchemaName			 VARCHAR(50)
)
AS
BEGIN

BEGIN TRY
SET NOCOUNT ON
DECLARE @Query VARCHAR(MAX)


SET @Query='
SELECT    A.CLNT_VULN_INSTC_KEY,A.CLNT_ENGMT_CD,A.VULN_NM,A.SFTW_NM,VULN_CATGY_NM,A.IPADR,
		  A.VULN_SEV_NM,A.CREAT_USER_ID,A.CREAT_DT
FROM	  '+ @SchemaName+ '.Findings					  A
JOIN	  dbo.FnSplit('''+@CLNT_VULN_INSTC_KEY + ''','','')	  E
ON		  A.CLNT_VULN_INSTC_KEY							= E.items
WHERE	  A.VULN_INSTC_STS_CD							  NOT IN(''D'',''FP'')
AND		  A.VULN_SEV_CD									  NOT IN(''I'')
AND		  A.CLNT_ENGMT_CD								= '''+@CLNT_ENGMT_CD + '''
'
-- PRINT @Query
 EXECUTE(@Query)


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END

GO
CREATE PROCEDURE [dbo].[RMDTN_GetPlanInfoByKey]
(
	@CLNT_RMDTN_PLN_KEY		INTEGER,
	@schema					VARCHAR(50)
	
)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
	DECLARE @Query VARCHAR(max)

	SET		@Query = 'SELECT  A.CLNT_RMDTN_PLN_KEY,A.ORG_KEY,A.CLNT_ENGMT_CD,A.RMDTN_OWNR_USER_ID,
					  A.RMDTN_PLN_STS_CD,A.RMDTN_PLN_NM,A.RMDTN_PLN_DESC,A.RMDTN_PLN_CREAT_DT,
					  A.RMDTN_PLN_NTF_DT,A.RMDTN_PLN_STRT_DT,A.RMDTN_PLN_DUE_DT,A.RMDTN_PLN_CLOS_DT,A.ASSOC_VULN_TOT_CNT,
					  A.ASSOC_VULN_CMPL_CNT,A.CREAT_DT,A.CREAT_USER_ID,B.RMDTN_PLN_STS_NM,C.FST_NM UserName,C.DEPT_NM
		
	FROM	'+ @schema+'.CLNT_RMDTN_PLN				A
	JOIN	RMDTN_PLN_STS							B
	ON		A.RMDTN_PLN_STS_CD				=		B.RMDTN_PLN_STS_CD
	JOIN	USER_PRFL								C
	ON		A.RMDTN_OWNR_USER_ID			=		C.USER_ID
	WHERE	A.CLNT_RMDTN_PLN_KEY			=		'+CONVERT(VARCHAR(50),@CLNT_RMDTN_PLN_KEY)+'
	AND		A.ROW_STS_KEY					=		1
 '
--	PRINT    @Query
	EXECUTE (@Query)


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END


GO

CREATE PROCEDURE [dbo].[RMDTN_DEL_RISK_RGST_ITM]
(
       @CLNT_RISK_RGST_KEY			INTEGER,  
	   @CLNT_VULN_INSTC_KEY			INTEGER,      
       @schema						VARCHAR(50)       

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
DECLARE @Query VARCHAR(max)

DECLARE @id INTEGER

      
              
        SET  @Query = 'DELETE FROM '+ @schema+'.CLNT_RISK_RGST_ITM
                       WHERE CLNT_RISK_RGST_KEY  =  '+CONVERT(VARCHAR,@CLNT_RISK_RGST_KEY) +'
						AND CLNT_VULN_INSTC_KEY =	'+CONVERT(VARCHAR,@CLNT_VULN_INSTC_KEY) +''

				 
              EXECUTE (@Query)
			  	
              SELECT @@ROWCOUNT AS RETVALS
                     
       

       

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END



GO

CREATE PROCEDURE [dbo].[RMDTN_DEL_RMDTN_PLN]
(
       @CLNT_RMDTN_PLN_KEY			INTEGER,       
       @schema						VARCHAR(50)       

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
DECLARE @Query1 VARCHAR(max)
DECLARE @Query2 VARCHAR(max)
DECLARE @Query3 VARCHAR(max)
DECLARE @Query4 VARCHAR(max)
DECLARE @Query5 VARCHAR(max)
DECLARE @id INTEGER

      
              
        SET  @Query1 = 'DELETE FROM '+ @schema+'.CLNT_RISK_RGST_ITM
                       WHERE CLNT_RISK_RGST_KEY  = (SELECT CLNT_RISK_RGST_KEY FROM '+ @schema+'.CLNT_RISK_RGST
					   WHERE CLNT_RMDTN_PLN_KEY= ' +CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY) +')'


              EXECUTE (@Query1)
			 -- PRINT @Query1

		SET	  @Query2 = 'DELETE FROM '+ @schema+'.CLNT_RISK_RGST
                       WHERE CLNT_RMDTN_PLN_KEY  =' +CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY) +''

              EXECUTE (@Query2)

		SET	 @Query3 = 'DELETE FROM '+ @schema+'.CLNT_RMDTN_PLN_COMMT
                       WHERE CLNT_RMDTN_PLN_KEY  =' +CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY) +''

              EXECUTE (@Query3)

		SET	   @Query4 = 'DELETE FROM '+ @schema+'.CLNT_VULN_RMDTN_PLN_ITM
                       WHERE CLNT_RMDTN_PLN_KEY  =' +CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY) +''

              EXECUTE (@Query4)

		SET	   @Query5 = 'DELETE FROM '+ @schema+'.CLNT_RMDTN_PLN
                       WHERE CLNT_RMDTN_PLN_KEY  =' +CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY) +''

              EXECUTE (@Query5)

              SELECT @@ROWCOUNT AS RETVALS
                     
       

       

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END


GO
CREATE PROCEDURE [dbo].[RMDTN_GetRmdPlanitmByInstcKey]
(
	@CLNT_VULN_INSTC_KEY	INTEGER,
	@schema					VARCHAR(50)

	

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
	DECLARE @Query VARCHAR(max)

	SET		@Query = 'SELECT  CLNT_RMDTN_PLN_KEY,VULN_RMDTN_STS_CD,CLOS_DT,CLOS_RSN_TXT
			
	FROM	'+ @schema+'.CLNT_VULN_RMDTN_PLN_ITM	
	WHERE	CLNT_VULN_INSTC_KEY			=		'+CONVERT(VARCHAR(50),@CLNT_VULN_INSTC_KEY)+'
 '
--	PRINT    @Query
	EXECUTE (@Query)


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END

GO

CREATE PROCEDURE [dbo].[RMDTN_UpdateItemsCount]
(
	@KEY					INTEGER,
	@TOT_CNT				INTEGER,
	@Userid					INTEGER,
	@schema					VARCHAR(50),
	@Flag					VARCHAR(2) -- RM(Remediation) RG(Registry)

	

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON	
	DECLARE @Query VARCHAR(max)

	IF @Flag		=	'RM'
	BEGIN	
	SET		@Query  =	'UPDATE '+ @schema+'.CLNT_RMDTN_PLN
						 SET	ASSOC_VULN_TOT_CNT		= '+CONVERT(VARCHAR,@TOT_CNT)+ ',
								UPDT_DT					=	'+'GETDATE()'+',
								UPDT_USER_ID			=	'+CONVERT(VARCHAR,@Userid)+'
						 WHERE	CLNT_RMDTN_PLN_KEY		=  '+CONVERT(VARCHAR,@KEY)+''
	END
	
	IF @Flag		=	'RG'
	BEGIN	
	SET		@Query  =	'UPDATE '+ @schema+'.CLNT_RISK_RGST
						 SET	RISK_RGST_ITM_TOT_CNT	= '+CONVERT(VARCHAR,@TOT_CNT)+ ',
								UPDT_DT					=	'+'GETDATE()'+',
								UPDT_USER_ID			=	'+CONVERT(VARCHAR,@Userid)+'
						 WHERE	CLNT_RISK_RGST_KEY		=  '+CONVERT(VARCHAR,@KEY)+''
	END
	
 	IF @Flag		=	'CD'
	BEGIN	
	SET		@Query  =	'UPDATE '+ @schema+'.CLNT_RMDTN_PLN
						 SET	ASSOC_VULN_CMPL_CNT		=   (SELECT COUNT(CLNT_VULN_INSTC_KEY) FROM '+ @schema+'.CLNT_VULN_RMDTN_PLN_ITM WHERE CLNT_RMDTN_PLN_KEY ='+CONVERT(VARCHAR,@KEY)+' AND VULN_RMDTN_STS_CD IN(''C'',''A'')),
								UPDT_DT					=	'+'GETDATE()'+',
								UPDT_USER_ID			=	'+CONVERT(VARCHAR,@Userid)+'
						 WHERE	CLNT_RMDTN_PLN_KEY		=   '+CONVERT(VARCHAR,@KEY)+''
	END

	IF @Flag		=	'RI'-- Remediation Items
	BEGIN	
	SET		@Query  =	'UPDATE A

						 SET	A.VULN_RMDTN_STS_CD		=  ''A'',
								UPDT_DT					=	'+'GETDATE()'+',
								UPDT_USER_ID			=	'+CONVERT(VARCHAR,@Userid)+'

						 FROM   '+ @schema+'.CLNT_VULN_RMDTN_PLN_ITM A JOIN '+ @schema+'.CLNT_RISK_RGST B
						 ON		A.CLNT_RMDTN_PLN_KEY	=  B.CLNT_RMDTN_PLN_KEY
						 JOIN  '+ @schema+'.CLNT_RISK_RGST_ITM C
						 ON		B.CLNT_RISK_RGST_KEY	=   C.CLNT_RISK_RGST_KEY
						 AND	A.CLNT_VULN_INSTC_KEY	=	C.CLNT_VULN_INSTC_KEY
						 WHERE	C.CLNT_RISK_RGST_KEY		=  '+CONVERT(VARCHAR,@KEY)+''
	END
	--PRINT    @Query
	EXECUTE (@Query)
	 SELECT @@ROWCOUNT AS RETVALS

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END



GO
CREATE PROCEDURE [dbo].[RMDTN_VULN_RMDTN_STS]
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

		SELECT VULN_RMDTN_STS_CD ,VULN_RMDTN_STS_NM  FROM VULN_RMDTN_STS
		ORDER BY VULN_RMDTN_STS_NM

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;



GO

CREATE PROCEDURE [dbo].[RMDTN_UpdatePlanStatus]
(
	@CLNT_RMDTN_PLN_KEY		INTEGER,
	@Userid					INTEGER,
	@schema					VARCHAR(50),
	@Flag					VARCHAR(1)

	

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON	
	DECLARE @Query VARCHAR(max)

	IF		@Flag = 'I' -- Inprogress
			BEGIN
	SET		@Query =	'UPDATE '+ @schema+'.CLNT_RMDTN_PLN
						 SET 
								RMDTN_PLN_STS_CD		=   ''I'',
								UPDT_DT					=	'+'GETDATE()'+',
								UPDT_USER_ID			=	'+CONVERT(VARCHAR,@Userid)+'
						 WHERE	CLNT_RMDTN_PLN_KEY		=  '+CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY)+''

	END
	
	IF		@Flag = 'C' -- Closed
			BEGIN
	SET		@Query =	'UPDATE '+ @schema+'.CLNT_RMDTN_PLN
						 SET 
								RMDTN_PLN_STS_CD		=   CASE WHEN ASSOC_VULN_TOT_CNT<>0 AND ASSOC_VULN_TOT_CNT = ASSOC_VULN_CMPL_CNT THEN ''C'' ELSE RMDTN_PLN_STS_CD END  ,
								UPDT_DT					=	'+'GETDATE()'+',
								UPDT_USER_ID			=	'+CONVERT(VARCHAR,@Userid)+'
						 WHERE	CLNT_RMDTN_PLN_KEY		=  '+CONVERT(VARCHAR,@CLNT_RMDTN_PLN_KEY)+''
	END
 
--	PRINT    @Query
	EXECUTE (@Query)
	 SELECT @@ROWCOUNT AS RETVALS

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END

