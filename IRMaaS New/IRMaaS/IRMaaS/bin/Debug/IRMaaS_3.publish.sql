/*
Deployment script for IRMaaS

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "IRMaaS"
:setvar DefaultFilePrefix "IRMaaS"
:setvar DefaultDataPath "E:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER1\MSSQL\DATA\"
:setvar DefaultLogPath "E:\Program Files\Microsoft SQL Server\MSSQL11.MSSQLSERVER1\MSSQL\DATA\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Creating [stg]...';


GO
CREATE SCHEMA [stg]
    AUTHORIZATION [dbo];


GO
PRINT N'Creating [stg].[SECUR_CTL_MAP_STG]...';


GO
CREATE TABLE [stg].[SECUR_CTL_MAP_STG] (
    [PRI_REG_CMPLN_CD]  VARCHAR (20) NOT NULL,
    [PRI_REG_CMPLN_VER] VARCHAR (20) NOT NULL,
    [PRI_SECUR_CTL_CD]  VARCHAR (20) NOT NULL,
    [SEC_REG_CMPLN_CD]  VARCHAR (20) NOT NULL,
    [SEC_REG_CMPLN_VER] VARCHAR (20) NOT NULL,
    [SEC_SECUR_CTL_CD]  VARCHAR (20) NOT NULL,
    [CREAT_DT]          DATETIME     NULL,
    [CREAT_USER_ID]     INT          NULL,
    CONSTRAINT [PK_SECUR_CTL_MAP_STG] PRIMARY KEY CLUSTERED ([PRI_REG_CMPLN_CD] ASC, [PRI_REG_CMPLN_VER] ASC, [PRI_SECUR_CTL_CD] ASC, [SEC_REG_CMPLN_CD] ASC, [SEC_REG_CMPLN_VER] ASC, [SEC_SECUR_CTL_CD] ASC)
);


GO
PRINT N'Creating [stg].[CISCO_PEN_TST_STG]...';


GO
CREATE TABLE [stg].[CISCO_PEN_TST_STG] (
    [ID]                     VARCHAR (50)    NULL,
    [SEV]                    INT             NULL,
    [SEV_LBL]                VARCHAR (150)   NULL,
    [PRBL]                   INT             NULL,
    [PRBL_LBL]               VARCHAR (150)   NULL,
    [URL]                    VARCHAR (1000)  NULL,
    [DESC]                   TEXT            NULL,
    [CREAT_AT]               DATETIME        NULL,
    [STS]                    VARCHAR (150)   NULL,
    [IP]                     VARCHAR (15)    NULL,
    [IP_AS_INTG]             BIGINT          NULL,
    [PORT]                   INT             NULL,
    [PRTCL]                  VARCHAR (150)   NULL,
    [CVSS_BAS]               DECIMAL (10, 2) NULL,
    [CVSS_TMPRL]             DECIMAL (10, 2) NULL,
    [HST]                    VARCHAR (150)   NULL,
    [OS]                     VARCHAR (150)   NULL,
    [SCOR]                   INT             NULL,
    [SCOR_LBL]               VARCHAR (150)   NULL,
    [RMDTN_EFFRT]            INT             NULL,
    [RMDTN_EFFRT_LBL]        VARCHAR (150)   NULL,
    [PROJ_ID]                VARCHAR (150)   NULL,
    [PROJ_STRT_DT]           DATETIME        NULL,
    [PROJ_END_DT]            DATETIME        NULL,
    [VULN_CLSS]              VARCHAR (150)   NULL,
    [CVE]                    VARCHAR (1000)  NULL,
    [CATGY]                  VARCHAR (150)   NULL,
    [DTL]                    TEXT            NULL,
    [SECUR_IMP]              TEXT            NULL,
    [MITG_FCT]               TEXT            NULL,
    [SOLN]                   TEXT            NULL,
    [REPRD_STEP]             TEXT            NULL,
    [REPRD_NOTE]             TEXT            NULL,
    [CSTM_FLD_1]             VARCHAR (255)   NULL,
    [CSTM_FLD_2]             VARCHAR (255)   NULL,
    [CSTM_FLD_3]             VARCHAR (255)   NULL,
    [CSTM_FLD_4]             VARCHAR (255)   NULL,
    [CSTM_COL_TYP]           VARCHAR (255)   NULL,
    [CSTM_COL_LBL]           VARCHAR (255)   NULL,
    [APPL_FL_UPLOAD_LOG_KEY] INT             NOT NULL,
    [CREAT_DT]               DATETIME        NULL,
    [CREAT_USER_ID]          INT             NULL
);


GO
PRINT N'Creating [stg].[CISCO_SECUR_RISK_ASES_STG]...';


GO
CREATE TABLE [stg].[CISCO_SECUR_RISK_ASES_STG] (
    [RISK_NBR]               INT            NULL,
    [RISK_NM]                VARCHAR (255)  NULL,
    [CTL_EFF]                VARCHAR (150)  NULL,
    [RISK_LVL_IMP]           VARCHAR (150)  NULL,
    [RISK_LVL_PRBL]          VARCHAR (150)  NULL,
    [RISK_LVL_OVALL]         VARCHAR (150)  NULL,
    [RISK_DESC]              TEXT           NULL,
    [IMP_COMMT]              TEXT           NULL,
    [CTL_DEFICIENCIES]       TEXT           NULL,
    [RMDTN_RECOM]            TEXT           NULL,
    [MITG_CTL_AREA]          VARCHAR (2000) NULL,
    [RLVN_STRG_TRND]         VARCHAR (2000) NULL,
    [APPL_FL_UPLOAD_LOG_KEY] INT            NOT NULL,
    [CREAT_DT]               DATETIME       NULL,
    [CREAT_USER_ID]          INT            NULL
);


GO
PRINT N'Creating [stg].[REG_CMPLN_STG]...';


GO
CREATE TABLE [stg].[REG_CMPLN_STG] (
    [REG_CMPLN_CD]      VARCHAR (20)   NOT NULL,
    [REG_CMPLN_VER]     VARCHAR (20)   NOT NULL,
    [REG_CMPLN_NM]      VARCHAR (200)  NULL,
    [REG_CMPLN_DESC]    VARCHAR (2000) NULL,
    [REG_CMPLN_PUBL_DT] DATE           NULL,
    [CREAT_DT]          DATETIME       NULL,
    [CREAT_USER_ID]     INT            NULL,
    CONSTRAINT [PK_REG_CMPLN_STG] PRIMARY KEY CLUSTERED ([REG_CMPLN_CD] ASC, [REG_CMPLN_VER] ASC)
);


GO
PRINT N'Creating [stg].[SECUR_CTL_STG]...';


GO
CREATE TABLE [stg].[SECUR_CTL_STG] (
    [REG_CMPLN_CD]       VARCHAR (20)   NOT NULL,
    [REG_CMPLN_VER]      VARCHAR (20)   NOT NULL,
    [SECUR_CTL_CD]       VARCHAR (20)   NOT NULL,
    [SECUR_CTL_FAM_CD]   VARCHAR (20)   NOT NULL,
    [SECUR_CTL_FAM_NM]   VARCHAR (200)  NULL,
    [SECUR_CTL_FAM_DESC] VARCHAR (2000) NULL,
    [SECUR_OBJ_CD]       VARCHAR (20)   NULL,
    [SECUR_OBJ_NM]       VARCHAR (200)  NULL,
    [SECUR_OBJ_DESC]     VARCHAR (2000) NULL,
    [SECUR_CTL_NM]       VARCHAR (200)  NULL,
    [SECUR_CTL_DESC]     VARCHAR (2000) NULL,
    [CTL_TYP_NM]         VARCHAR (150)  NULL,
    [TPC_TXT]            VARCHAR (2000) NULL,
    [CREAT_DT]           DATETIME       NULL,
    [CREAT_USER_ID]      INT            NULL,
    CONSTRAINT [PK_SECUR_CTL_STG] PRIMARY KEY CLUSTERED ([REG_CMPLN_CD] ASC, [REG_CMPLN_VER] ASC, [SECUR_CTL_CD] ASC)
);


GO
PRINT N'Creating [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
CREATE TABLE [dbo].[APPL_FL_UPLOAD_LOG] (
    [APPL_FL_UPLOAD_LOG_KEY] INT            IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]            INT            NOT NULL,
    [ORG_KEY]                INT            NOT NULL,
    [CLNT_ENGMT_CD]          VARCHAR (30)   NOT NULL,
    [SRC_KEY]                INT            NOT NULL,
    [DOC_TYP_KEY]            INT            NOT NULL,
    [UPLOAD_USER_ID]         INT            NOT NULL,
    [FL_STS_KEY]             INT            NOT NULL,
    [FL_NM]                  VARCHAR (150)  NOT NULL,
    [FL_FLDR_PTH]            VARCHAR (500)  NOT NULL,
    [FL_UPLOAD_DT]           DATETIME       NOT NULL,
    [ETL_PROC_END_DT]        DATETIME       NULL,
    [FL_COMMT]               VARCHAR (1000) NULL,
    [SECUR_SRVC_CD]          VARCHAR (10)   NOT NULL,
    [CREAT_USER_ID]          INT            NULL,
    [CREAT_DT]               DATETIME       NULL,
    [UPDT_USER_ID]           INT            NULL,
    [UPDT_DT]                DATETIME       NULL,
    CONSTRAINT [PK_APPL_FL_UPLOAD_LOG] PRIMARY KEY CLUSTERED ([APPL_FL_UPLOAD_LOG_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[APPL_FL_UPLOAD_LOG].[AK1_APPL_FL_UPLOAD_LOG]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [AK1_APPL_FL_UPLOAD_LOG]
    ON [dbo].[APPL_FL_UPLOAD_LOG]([FL_NM] ASC, [FL_UPLOAD_DT] ASC, [FL_FLDR_PTH] ASC);


GO
PRINT N'Creating [dbo].[APPL_ROLE]...';


GO
CREATE TABLE [dbo].[APPL_ROLE] (
    [APPL_ROLE_KEY]  INT            IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]    INT            NOT NULL,
    [APPL_ROLE_NM]   VARCHAR (100)  NOT NULL,
    [APPL_ROLE_DESC] VARCHAR (1000) NULL,
    [STS_COMMT_TXT]  TEXT           NULL,
    [CREAT_DT]       DATETIME       NULL,
    [CREAT_USER_ID]  INT            NULL,
    [UPDT_DT]        DATETIME       NULL,
    [UPDT_USER_ID]   INT            NULL,
    CONSTRAINT [PK_APPL_ROLE] PRIMARY KEY CLUSTERED ([APPL_ROLE_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[APPL_ROLE_PERMSN_GRP]...';


GO
CREATE TABLE [dbo].[APPL_ROLE_PERMSN_GRP] (
    [USER_ROLE_PERMSN_GRP_KEY] INT      IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]              INT      NOT NULL,
    [APPL_ROLE_KEY]            INT      NOT NULL,
    [PERMSN_GRP_KEY]           INT      NOT NULL,
    [CREAT_DT]                 DATETIME NULL,
    [CREAT_USER_ID]            INT      NULL,
    [UPDT_DT]                  DATETIME NULL,
    [UPDT_USER_ID]             INT      NULL,
    CONSTRAINT [PK_APPL_ROLE_PERMSN_GRP] PRIMARY KEY CLUSTERED ([USER_ROLE_PERMSN_GRP_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[CD_XREF]...';


GO
CREATE TABLE [dbo].[CD_XREF] (
    [CD_XREF_KEY]       INT           IDENTITY (1, 1) NOT NULL,
    [SRC_KEY]           INT           NOT NULL,
    [REFERRENCE_TYP_NM] VARCHAR (100) NOT NULL,
    [TGT_REF_CD]        VARCHAR (3)   NOT NULL,
    [SRC_REF_CD]        VARCHAR (3)   NOT NULL,
    [SRC_REF_NM]        VARCHAR (150) NOT NULL,
    [CREAT_DT]          DATETIME      NULL,
    [CREAT_USER_ID]     INT           NULL,
    [UPDT_DT]           DATETIME      NULL,
    [UPDT_USER_ID]      INT           NULL,
    CONSTRAINT [PK_CD_XREF] PRIMARY KEY CLUSTERED ([CD_XREF_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[CLNT_ENGMT]...';


GO
CREATE TABLE [dbo].[CLNT_ENGMT] (
    [CLNT_ENGMT_CD]    VARCHAR (30)   NOT NULL,
    [ROW_STS_KEY]      INT            NOT NULL,
    [CLNT_ORG_KEY]     INT            NOT NULL,
    [SECUR_PKG_CD]     VARCHAR (10)   NOT NULL,
    [ENGMT_STS_KEY]    INT            NOT NULL,
    [CLNT_ENGMT_NM]    VARCHAR (150)  NULL,
    [AGR_DT]           DATETIME       NOT NULL,
    [ENGMT_STRT_DT]    DATETIME       NOT NULL,
    [ENGMT_EST_END_DT] DATETIME       NULL,
    [CLNT_ENGMT_DESC]  VARCHAR (1000) NULL,
    [ENGMT_COMMT]      TEXT           NULL,
    [CREAT_DT]         DATETIME       NULL,
    [CREAT_USER_ID]    INT            NULL,
    [UPDT_DT]          DATETIME       NULL,
    [UPDT_USER_ID]     INT            NULL,
    CONSTRAINT [PK_CLNT_ENGMT] PRIMARY KEY CLUSTERED ([CLNT_ENGMT_CD] ASC)
);


GO
PRINT N'Creating [dbo].[CLNT_ENGMT].[AK1_CLNT_ENGMT]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [AK1_CLNT_ENGMT]
    ON [dbo].[CLNT_ENGMT]([CLNT_ORG_KEY] ASC, [SECUR_PKG_CD] ASC, [AGR_DT] ASC);


GO
PRINT N'Creating [dbo].[CLNT_ENGMT_USER_ASGN]...';


GO
CREATE TABLE [dbo].[CLNT_ENGMT_USER_ASGN] (
    [CLNT_ENGMT_USER_ASGN_KEY] INT           IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]              INT           NOT NULL,
    [USER_ID]                  INT           NOT NULL,
    [SECUR_SRVC_LIST_CD]       VARCHAR (150) NULL,
    [CREAT_DT]                 DATETIME      NULL,
    [CREAT_USER_ID]            INT           NULL,
    [UPDT_DT]                  DATETIME      NULL,
    [UPDT_USER_ID]             INT           NULL,
    [CLNT_ENGMT_CD]            VARCHAR (30)  NOT NULL,
    CONSTRAINT [PK_CLNT_ENGMT_USER_ASGN] PRIMARY KEY CLUSTERED ([CLNT_ENGMT_USER_ASGN_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[CLNT_REL_ENGMT_ID]...';


GO
CREATE TABLE [dbo].[CLNT_REL_ENGMT_ID] (
    [CLNT_REL_ENGMT_ID_KEY] INT           IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]           INT           NOT NULL,
    [CLNT_ENGMT_CD]         VARCHAR (30)  NOT NULL,
    [SRC_KEY]               INT           NOT NULL,
    [SRC_REL_ENGMT_ID]      VARCHAR (150) NULL,
    [CREAT_DT]              DATETIME      NULL,
    [CREAT_USER_ID]         INT           NULL,
    [UPDT_DT]               DATETIME      NULL,
    [UPDT_USER_ID]          INT           NULL,
    CONSTRAINT [PK_CLNT_REL_ENGMT_ID] PRIMARY KEY CLUSTERED ([CLNT_REL_ENGMT_ID_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[CLNT_SECUR_SRVC_ENGMT]...';


GO
CREATE TABLE [dbo].[CLNT_SECUR_SRVC_ENGMT] (
    [CLNT_ENGMT_CD]      VARCHAR (30) NOT NULL,
    [SECUR_SRVC_CD]      VARCHAR (10) NOT NULL,
    [ROW_STS_KEY]        INT          NOT NULL,
    [SRVC_ENGMT_STS_KEY] INT          NOT NULL,
    [SRVC_EST_STRT_DT]   DATETIME     NOT NULL,
    [SRVC_EST_END_DT]    DATETIME     NULL,
    [FL_LCK_IND]         INT          NOT NULL,
    [CREAT_DT]           DATETIME     NULL,
    [CREAT_USER_ID]      INT          NULL,
    [UPDT_DT]            DATETIME     NULL,
    [UPDT_USER_ID]       INT          NULL,
    CONSTRAINT [PK_CLNT_SECUR_SRVC_ENGMT] PRIMARY KEY CLUSTERED ([CLNT_ENGMT_CD] ASC, [SECUR_SRVC_CD] ASC)
);


GO
PRINT N'Creating [dbo].[CLNT_VULN_INSTC]...';


GO
CREATE TABLE [dbo].[CLNT_VULN_INSTC] (
    [CLNT_VULN_INSTC_KEY]    INT             IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]            INT             NOT NULL,
    [ORG_KEY]                INT             NOT NULL,
    [CLNT_ENGMT_CD]          VARCHAR (30)    NOT NULL,
    [SECUR_SRVC_CD]          VARCHAR (10)    NOT NULL,
    [VULN_SRC_KEY]           INT             NOT NULL,
    [VULN_INSTC_STS_CD]      VARCHAR (3)     NOT NULL,
    [VULN_SEV_CD]            VARCHAR (3)     NULL,
    [VULN_IMP_CD]            VARCHAR (3)     NULL,
    [RISK_PRBL_CD]           VARCHAR (3)     NULL,
    [RMDTN_CST_EFFRT_CD]     VARCHAR (3)     NULL,
    [ROOT_CAUS_ANLYS_CD]     VARCHAR (10)    NULL,
    [THREAT_CATGY_CD]        VARCHAR (3)     NULL,
    [CVE_ID]                 VARCHAR (15)    NULL,
    [SRC_VULN_SCAN_ID]       VARCHAR (150)   NULL,
    [SRC_VULN_SCAN_STRT_DT]  DATE            NULL,
    [SRC_VULN_SCAN_END_DT]   DATE            NULL,
    [SRC_VULN_INSTC_ID]      VARCHAR (150)   NULL,
    [SRC_VULN_ID]            VARCHAR (150)   NULL,
    [VULN_NM]                VARCHAR (255)   NOT NULL,
    [VULN_DESC]              TEXT            NULL,
    [VULN_CREAT_DT]          DATETIME        NOT NULL,
    [IPADR]                  VARCHAR (15)    NULL,
    [PORT_NBR]               INT             NULL,
    [SRC_ADVS_TXT]           VARCHAR (1024)  NULL,
    [VULN_BAS_SCOR]          DECIMAL (10, 2) NULL,
    [VULN_IMP_SUB_SCOR]      DECIMAL (10, 2) NULL,
    [VULN_EXPLT_SUB_SCOR]    DECIMAL (10, 2) NULL,
    [VULN_TMPRL_SCOR]        DECIMAL (10, 2) NULL,
    [VULN_ENV_SCOR]          DECIMAL (10, 2) NULL,
    [VULN_VCTR_TXT]          VARCHAR (100)   NULL,
    [NTWK_NM]                VARCHAR (150)   NULL,
    [PRTCL_NM]               VARCHAR (150)   NULL,
    [HST_NM]                 VARCHAR (150)   NULL,
    [DOM_NM]                 VARCHAR (150)   NULL,
    [SFTW_NM]                VARCHAR (150)   NULL,
    [OS_NM]                  VARCHAR (150)   NULL,
    [APPL_URL]               NVARCHAR (255)  NULL,
    [NETBIOS_NM]             VARCHAR (150)   NULL,
    [MAC_ADR_NM]             VARCHAR (150)   NULL,
    [VULN_TECH_COMMT_TXT]    TEXT            NULL,
    [VULN_IMP_COMMT_TXT]     TEXT            NULL,
    [RECOM_COMMT_TXT]        TEXT            NULL,
    [ROOT_CAUS_COMMT_TXT]    TEXT            NULL,
    [APPL_FL_UPLOAD_LOG_KEY] INT             NULL,
    [CREAT_DT]               DATETIME        NOT NULL,
    [CREAT_USER_ID]          INT             NOT NULL,
    [UPDT_DT]                DATETIME        NULL,
    [UPDT_USER_ID]           INT             NULL,
    CONSTRAINT [PK_CLNT_VULN_INSTC] PRIMARY KEY CLUSTERED ([CLNT_VULN_INSTC_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[CLNT_VULN_SECUR_CTL]...';


GO
CREATE TABLE [dbo].[CLNT_VULN_SECUR_CTL] (
    [CLNT_VULN_INSTC_KEY] INT          NOT NULL,
    [REG_CMPLN_CD]        VARCHAR (20) NOT NULL,
    [REG_CMPLN_VER]       VARCHAR (20) NOT NULL,
    [SECUR_CTL_CD]        VARCHAR (20) NOT NULL,
    [CREAT_DT]            DATETIME     NULL,
    [CREAT_USER_ID]       INT          NULL,
    [UPDT_DT]             DATETIME     NULL,
    [UPDT_USER_ID]        INT          NULL,
    CONSTRAINT [PK65] PRIMARY KEY CLUSTERED ([CLNT_VULN_INSTC_KEY] ASC, [REG_CMPLN_CD] ASC, [REG_CMPLN_VER] ASC, [SECUR_CTL_CD] ASC)
);


GO
PRINT N'Creating [dbo].[CNTRY_CD]...';


GO
CREATE TABLE [dbo].[CNTRY_CD] (
    [CNTRY_CD]      VARCHAR (10)  NOT NULL,
    [CNTRY_NM]      VARCHAR (150) NOT NULL,
    [CREAT_DT]      DATETIME      NULL,
    [CREAT_USER_ID] INT           NULL,
    [UPDT_DT]       DATETIME      NULL,
    [UPDT_USER_ID]  INT           NULL,
    CONSTRAINT [PK134] PRIMARY KEY CLUSTERED ([CNTRY_CD] ASC)
);


GO
PRINT N'Creating [dbo].[CVE]...';


GO
CREATE TABLE [dbo].[CVE] (
    [CVE_ID]         VARCHAR (15)    NOT NULL,
    [CVE_DESC]       VARCHAR (4000)  NULL,
    [PUBL_DT]        DATETIME        NULL,
    [LST_MOD_DT]     DATETIME        NULL,
    [CWE_ID]         VARCHAR (50)    NULL,
    [BAS_SCOR]       DECIMAL (10, 2) NULL,
    [ACS_VCTR]       VARCHAR (100)   NULL,
    [ACS_CMPLX]      VARCHAR (100)   NULL,
    [AUTH]           VARCHAR (100)   NULL,
    [CONFDTY_IMP]    VARCHAR (100)   NULL,
    [INGTY_IMP]      VARCHAR (100)   NULL,
    [AVL_IMP]        VARCHAR (100)   NULL,
    [VCTR_TXT]       VARCHAR (50)    NULL,
    [IMP_SUB_SCOR]   DECIMAL (10, 2) NULL,
    [EXPLT_SUB_SCOR] DECIMAL (10, 2) NULL,
    [CREAT_DT]       DATETIME        NULL,
    [CREAT_USER_ID]  INT             NULL,
    [UPDT_DT]        DATETIME        NULL,
    [UPDT_USER_ID]   INT             NULL,
    CONSTRAINT [PK_CVE] PRIMARY KEY CLUSTERED ([CVE_ID] ASC)
);


GO
PRINT N'Creating [dbo].[CVE_SECUR_CTL_MAP]...';


GO
CREATE TABLE [dbo].[CVE_SECUR_CTL_MAP] (
    [CVE_ID]        VARCHAR (15) NOT NULL,
    [REG_CMPLN_CD]  VARCHAR (20) NOT NULL,
    [REG_CMPLN_VER] VARCHAR (20) NOT NULL,
    [SECUR_CTL_CD]  VARCHAR (20) NOT NULL,
    [CREAT_DT]      DATETIME     NULL,
    [CREAT_USER_ID] INT          NULL,
    [UPDT_DT]       DATETIME     NULL,
    [UPDT_USER_ID]  INT          NULL,
    CONSTRAINT [PK_CVE_SECUR_CTL_MAP] PRIMARY KEY CLUSTERED ([CVE_ID] ASC, [REG_CMPLN_CD] ASC, [REG_CMPLN_VER] ASC, [SECUR_CTL_CD] ASC)
);


GO
PRINT N'Creating [dbo].[CVSS_SCOR_MTRC]...';


GO
CREATE TABLE [dbo].[CVSS_SCOR_MTRC] (
    [CVSS_SCOR_MTRC_KEY] INT             IDENTITY (1, 1) NOT NULL,
    [CVSS_VER]           VARCHAR (20)    NULL,
    [MTRC_GRP_NM]        VARCHAR (100)   NULL,
    [MTRC_NM]            VARCHAR (100)   NULL,
    [MTRC_VCTR_CD]       VARCHAR (3)     NOT NULL,
    [MTRC_VAL_TXT]       VARCHAR (100)   NULL,
    [MTRC_VAL_VCTR_CD]   VARCHAR (3)     NOT NULL,
    [MTRC_VAL_SCOR]      DECIMAL (10, 3) NOT NULL,
    [VCTR_ORDR]          INT             NULL,
    [UPDT_USER_ID]       INT             NULL,
    [UPDT_DT]            DATETIME        NULL,
    [CREAT_USER_ID]      INT             NULL,
    [CREAT_DT]           DATETIME        NULL,
    CONSTRAINT [PK_CVSS_SCOR_MTRC] PRIMARY KEY CLUSTERED ([CVSS_SCOR_MTRC_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[ETL_AUD_LOG]...';


GO
CREATE TABLE [dbo].[ETL_AUD_LOG] (
    [ETL_AUD_LOG_KEY]   INT           IDENTITY (1, 1) NOT NULL,
    [JOB_NM]            VARCHAR (150) NOT NULL,
    [JOB_STRT_DT]       DATETIME      NOT NULL,
    [JOB_END_DT]        DATETIME      NULL,
    [JOB_STS]           VARCHAR (100) NOT NULL,
    [SRC_FL_NM]         VARCHAR (150) NULL,
    [SRC_FL_FLDR_PTH]   VARCHAR (500) NULL,
    [TGT_TBL_NM]        VARCHAR (50)  NULL,
    [SRC_ROW_CNT]       INT           NULL,
    [TGT_INSRT_ROW_CNT] INT           NULL,
    [TGT_UPDT_ROW_CNT]  INT           NULL,
    [TGT_REJ_ROW_CNT]   INT           NULL,
    CONSTRAINT [PK_ETL_AUD_LOG] PRIMARY KEY CLUSTERED ([ETL_AUD_LOG_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[ETL_ERR_LOG]...';


GO
CREATE TABLE [dbo].[ETL_ERR_LOG] (
    [ETL_ERR_LOG_KEY] INT            IDENTITY (1, 1) NOT NULL,
    [ETL_AUD_LOG_KEY] INT            NOT NULL,
    [ERR_LOG_DT]      DATETIME       NULL,
    [ERR_CD]          VARCHAR (150)  NULL,
    [ERR_MSG_TXT]     VARCHAR (1000) NULL,
    [ERR_REC_TXT]     VARCHAR (2000) NULL,
    CONSTRAINT [PK_ETL_ERR_LOG] PRIMARY KEY CLUSTERED ([ETL_ERR_LOG_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[MSTR_LKP]...';


GO
CREATE TABLE [dbo].[MSTR_LKP] (
    [MSTR_LKP_KEY]    INT            IDENTITY (1, 1) NOT NULL,
    [LKP_ENTY_TYP_NM] VARCHAR (500)  NOT NULL,
    [LKP_ENTY_NM]     VARCHAR (500)  NOT NULL,
    [LKP_ENTY_DESC]   VARCHAR (1000) NULL,
    [ACTV_IND]        INT            NOT NULL,
    [CREAT_DT]        DATETIME       NULL,
    [CREAT_USER_ID]   INT            NULL,
    [UPDT_DT]         DATETIME       NULL,
    [UPDT_USER_ID]    INT            NULL,
    CONSTRAINT [PK_MSTR_LKP] PRIMARY KEY CLUSTERED ([MSTR_LKP_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[NTF_MSG]...';


GO
CREATE TABLE [dbo].[NTF_MSG] (
    [NTF_MSG_KEY]   INT           IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]   INT           NOT NULL,
    [NTF_TYP_NM]    VARCHAR (255) NOT NULL,
    [MSG_SBJ_TXT]   VARCHAR (255) NULL,
    [MSG_CNTN_TXT]  TEXT          NULL,
    [CREAT_DT]      DATETIME      NULL,
    [CREAT_USER_ID] INT           NULL,
    [UPDT_DT]       DATETIME      NULL,
    [UPDT_USER_ID]  INT           NULL,
    CONSTRAINT [PK42] PRIMARY KEY CLUSTERED ([NTF_MSG_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[ORG]...';


GO
CREATE TABLE [dbo].[ORG] (
    [ORG_KEY]       INT           IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]   INT           NOT NULL,
    [PAR_ORG_KEY]   INT           NULL,
    [ORG_TYP_KEY]   INT           NOT NULL,
    [ORG_INDUS_KEY] INT           NULL,
    [ORG_NM]        VARCHAR (150) NOT NULL,
    [STR_ADR_1]     VARCHAR (255) NULL,
    [STR_ADR_2]     VARCHAR (255) NULL,
    [CTY_NM]        VARCHAR (255) NULL,
    [ST_NM]         VARCHAR (255) NULL,
    [CNTRY_NM]      VARCHAR (255) NULL,
    [PST_CD]        VARCHAR (20)  NULL,
    [ORG_DESC]      TEXT          NULL,
    [STS_COMMT_TXT] TEXT          NULL,
    [CREAT_DT]      DATETIME      NULL,
    [CREAT_USER_ID] INT           NULL,
    [UPDT_DT]       DATETIME      NULL,
    [UPDT_USER_ID]  INT           NULL,
    CONSTRAINT [PK_ORG] PRIMARY KEY CLUSTERED ([ORG_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[ORG_CNTC]...';


GO
CREATE TABLE [dbo].[ORG_CNTC] (
    [ORGPOCID]      INT           IDENTITY (1, 1) NOT NULL,
    [ORG_KEY]       INT           NOT NULL,
    [ORG_LOC_KEY]   INT           NULL,
    [ROW_STS_KEY]   INT           NOT NULL,
    [FST_NM]        VARCHAR (150) NULL,
    [MIDL_NM]       VARCHAR (150) NULL,
    [LST_NM]        VARCHAR (150) NULL,
    [DESG]          INT           NOT NULL,
    [STR_ADR_1]     VARCHAR (255) NULL,
    [STR_ADR_2]     VARCHAR (255) NULL,
    [CTY_NM]        VARCHAR (255) NULL,
    [ST_NM]         VARCHAR (255) NULL,
    [PST_CD]        VARCHAR (20)  NULL,
    [EMAIL]         VARCHAR (150) NULL,
    [CNTRY_NM]      VARCHAR (255) NULL,
    [CREAT_DT]      DATETIME      NULL,
    [CREAT_USER_ID] INT           NULL,
    [UPDT_DT]       DATETIME      NULL,
    [UPDT_USER_ID]  INT           NULL,
    [DEL_IND]       INT           NULL,
    CONSTRAINT [PK_ORGANIZATIONPOCDETAILS] PRIMARY KEY CLUSTERED ([ORGPOCID] ASC)
);


GO
PRINT N'Creating [dbo].[ORG_LOC]...';


GO
CREATE TABLE [dbo].[ORG_LOC] (
    [ORG_LOC_KEY]   INT             IDENTITY (1, 1) NOT NULL,
    [ORG_KEY]       INT             NOT NULL,
    [ROW_STS_KEY]   INT             NOT NULL,
    [ORG_LOC_NM]    NVARCHAR (1000) NULL,
    [STR_ADR_1]     VARCHAR (255)   NULL,
    [STR_ADR_2]     VARCHAR (255)   NULL,
    [CTY_NM]        VARCHAR (255)   NULL,
    [ST_NM]         VARCHAR (255)   NULL,
    [CNTRY_NM]      VARCHAR (255)   NULL,
    [CREAT_DT]      DATETIME        NULL,
    [CREAT_USER_ID] INT             NULL,
    [UPDT_DT]       DATETIME        NULL,
    [UPDT_USER_ID]  INT             NULL,
    [DEL_IND]       INT             NULL,
    CONSTRAINT [PK_ORGANIZATIONLOCATIONS] PRIMARY KEY CLUSTERED ([ORG_LOC_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[ORG_REL_ID]...';


GO
CREATE TABLE [dbo].[ORG_REL_ID] (
    [ORG_REL_ID_KEY] INT           IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]    INT           NOT NULL,
    [ORG_KEY]        INT           NOT NULL,
    [SRC_KEY]        INT           NOT NULL,
    [SRC_CLNT_ID]    VARCHAR (150) NULL,
    [CREAT_DT]       DATETIME      NULL,
    [CREAT_USER_ID]  INT           NULL,
    [UPDT_DT]        DATETIME      NULL,
    [UPDT_USER_ID]   INT           NULL,
    CONSTRAINT [PK_ORG_REL_ID] PRIMARY KEY CLUSTERED ([ORG_REL_ID_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[PERMSN]...';


GO
CREATE TABLE [dbo].[PERMSN] (
    [PERMSN_KEY]     INT            IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]    INT            NOT NULL,
    [PAR_PERMSN_KEY] INT            NULL,
    [PERMSN_TYP_KEY] INT            NOT NULL,
    [PERMSN_NM]      VARCHAR (100)  NOT NULL,
    [PERMSN_DESC]    VARCHAR (1000) NULL,
    [DSPL_TXT]       VARCHAR (100)  NULL,
    [CHLD_XST_IND]   INT            NOT NULL,
    [SEQ_ORDR]       INT            NOT NULL,
    [CREAT_DT]       DATETIME       NULL,
    [CREAT_USER_ID]  INT            NULL,
    [UPDT_DT]        DATETIME       NULL,
    [UPDT_USER_ID]   INT            NULL,
    CONSTRAINT [PK_PERMSN] PRIMARY KEY CLUSTERED ([PERMSN_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[PERMSN_GRP]...';


GO
CREATE TABLE [dbo].[PERMSN_GRP] (
    [PERMSN_GRP_KEY]  INT            IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]     INT            NOT NULL,
    [PERMSN_GRP_NM]   VARCHAR (100)  NOT NULL,
    [PERMSN_GRP_DESC] VARCHAR (1000) NULL,
    [STS_COMMT_TXT]   TEXT           NULL,
    [CREAT_DT]        DATETIME       NULL,
    [CREAT_USER_ID]   INT            NULL,
    [UPDT_DT]         DATETIME       NULL,
    [UPDT_USER_ID]    INT            NULL,
    CONSTRAINT [PK_PERMSN_GRP] PRIMARY KEY CLUSTERED ([PERMSN_GRP_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[PERMSN_GRP_ASSOC]...';


GO
CREATE TABLE [dbo].[PERMSN_GRP_ASSOC] (
    [PERMSN_GRP_ASSOC_KEY] INT      IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]          INT      NOT NULL,
    [PERMSN_GRP_KEY]       INT      NOT NULL,
    [PERMSN_KEY]           INT      NOT NULL,
    [MDUL_ID]              INT      NULL,
    [MNU_ID]               INT      NOT NULL,
    [SUB_MNU_ID]           INT      NOT NULL,
    [CREAT_DT]             DATETIME NULL,
    [CREAT_USER_ID]        INT      NULL,
    [UPDT_DT]              DATETIME NULL,
    [UPDT_USER_ID]         INT      NULL,
    CONSTRAINT [PK_PERMSN_GRP_ASSOC] PRIMARY KEY CLUSTERED ([PERMSN_GRP_ASSOC_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[REG_CMPLN]...';


GO
CREATE TABLE [dbo].[REG_CMPLN] (
    [REG_CMPLN_CD]      VARCHAR (20)   NOT NULL,
    [REG_CMPLN_VER]     VARCHAR (20)   NOT NULL,
    [REG_CMPLN_NM]      VARCHAR (200)  NULL,
    [REG_CMPLN_DESC]    VARCHAR (2000) NULL,
    [REG_CMPLN_PUBL_DT] DATE           NULL,
    [CREAT_DT]          DATETIME       NULL,
    [CREAT_USER_ID]     INT            NULL,
    [UPDT_DT]           DATETIME       NULL,
    [UPDT_USER_ID]      INT            NULL,
    CONSTRAINT [PK_REG_CMPLN] PRIMARY KEY CLUSTERED ([REG_CMPLN_CD] ASC, [REG_CMPLN_VER] ASC)
);


GO
PRINT N'Creating [dbo].[RISK_PRBL]...';


GO
CREATE TABLE [dbo].[RISK_PRBL] (
    [RISK_PRBL_CD]        VARCHAR (3)     NOT NULL,
    [RISK_PRBL_NM]        VARCHAR (150)   NOT NULL,
    [RISK_PRBL_ORDR_NBR]  INT             NOT NULL,
    [CVSS_EXPLT_SCOR_MIN] DECIMAL (10, 2) NULL,
    [CVSS_EXPLT_SCOR_MAX] DECIMAL (10, 2) NULL,
    [CREAT_DT]            DATETIME        NULL,
    [CREAT_USER_ID]       INT             NULL,
    [UPDT_DT]             DATETIME        NULL,
    [UPDT_USER_ID]        INT             NULL,
    CONSTRAINT [PK_RISK_PRBL] PRIMARY KEY CLUSTERED ([RISK_PRBL_CD] ASC)
);


GO
PRINT N'Creating [dbo].[RMDTN_CST_EFFRT]...';


GO
CREATE TABLE [dbo].[RMDTN_CST_EFFRT] (
    [RMDTN_CST_EFFRT_CD]       VARCHAR (3)   NOT NULL,
    [RMDTN_CST_EFFRT_NM]       VARCHAR (150) NOT NULL,
    [RMDTN_CST_EFFRT_ORDR_NBR] INT           NULL,
    [CREAT_DT]                 DATETIME      NULL,
    [CREAT_USER_ID]            INT           NULL,
    [UPDT_DT]                  DATETIME      NULL,
    [UPDT_USER_ID]             INT           NULL,
    CONSTRAINT [PK_RMDTN_CST_EFFRT] PRIMARY KEY CLUSTERED ([RMDTN_CST_EFFRT_CD] ASC)
);


GO
PRINT N'Creating [dbo].[ROOT_CAUS_ANLYS]...';


GO
CREATE TABLE [dbo].[ROOT_CAUS_ANLYS] (
    [ROOT_CAUS_ANLYS_CD]   VARCHAR (10)   NOT NULL,
    [ROOT_CAUS_ANLYS_NM]   VARCHAR (150)  NOT NULL,
    [ROOT_CAUS_ANLYS_DESC] VARCHAR (1000) NULL,
    [CREAT_DT]             DATETIME       NULL,
    [CREAT_USER_ID]        INT            NULL,
    [UPDT_DT]              DATETIME       NULL,
    [UPDT_USER_ID]         INT            NULL,
    CONSTRAINT [PK_ROOT_CAUS_ANLYS] PRIMARY KEY CLUSTERED ([ROOT_CAUS_ANLYS_CD] ASC)
);


GO
PRINT N'Creating [dbo].[SECUR_CTL]...';


GO
CREATE TABLE [dbo].[SECUR_CTL] (
    [REG_CMPLN_CD]       VARCHAR (20)   NOT NULL,
    [REG_CMPLN_VER]      VARCHAR (20)   NOT NULL,
    [SECUR_CTL_CD]       VARCHAR (20)   NOT NULL,
    [SECUR_CTL_FAM_CD]   VARCHAR (20)   NOT NULL,
    [SECUR_CTL_FAM_NM]   VARCHAR (200)  NULL,
    [SECUR_CTL_FAM_DESC] VARCHAR (2000) NULL,
    [SECUR_OBJ_CD]       VARCHAR (20)   NULL,
    [SECUR_OBJ_NM]       VARCHAR (200)  NULL,
    [SECUR_OBJ_DESC]     VARCHAR (2000) NULL,
    [SECUR_CTL_NM]       VARCHAR (200)  NULL,
    [SECUR_CTL_DESC]     VARCHAR (2000) NULL,
    [CTL_TYP_NM]         VARCHAR (150)  NULL,
    [TPC_TXT]            VARCHAR (2000) NULL,
    [CREAT_DT]           DATETIME       NULL,
    [CREAT_USER_ID]      INT            NULL,
    [UPDT_DT]            DATETIME       NULL,
    [UPDT_USER_ID]       INT            NULL,
    CONSTRAINT [PK_SECUR_CTL] PRIMARY KEY CLUSTERED ([REG_CMPLN_CD] ASC, [REG_CMPLN_VER] ASC, [SECUR_CTL_CD] ASC)
);


GO
PRINT N'Creating [dbo].[SECUR_CTL_MAP]...';


GO
CREATE TABLE [dbo].[SECUR_CTL_MAP] (
    [SECUR_CTL_MAP_KEY] INT          IDENTITY (1, 1) NOT NULL,
    [PRI_REG_CMPLN_CD]  VARCHAR (20) NOT NULL,
    [PRI_REG_CMPLN_VER] VARCHAR (20) NOT NULL,
    [PRI_SECUR_CTL_CD]  VARCHAR (20) NOT NULL,
    [SEC_REG_CMPLN_CD]  VARCHAR (20) NOT NULL,
    [SEC_REG_CMPLN_VER] VARCHAR (20) NOT NULL,
    [SEC_SECUR_CTL_CD]  VARCHAR (20) NOT NULL,
    [CREAT_DT]          DATETIME     NULL,
    [CREAT_USER_ID]     INT          NULL,
    [UPDT_DT]           DATETIME     NULL,
    [UPDT_USER_ID]      INT          NULL,
    CONSTRAINT [PK_SECUR_CTL_MAP] PRIMARY KEY CLUSTERED ([SECUR_CTL_MAP_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[SECUR_CTL_MAP].[AK1_SECUR_CTL_MAP]...';


GO
CREATE UNIQUE NONCLUSTERED INDEX [AK1_SECUR_CTL_MAP]
    ON [dbo].[SECUR_CTL_MAP]([PRI_REG_CMPLN_CD] ASC, [PRI_REG_CMPLN_VER] ASC, [PRI_SECUR_CTL_CD] ASC, [SEC_REG_CMPLN_CD] ASC, [SEC_REG_CMPLN_VER] ASC, [SEC_SECUR_CTL_CD] ASC);


GO
PRINT N'Creating [dbo].[SECUR_PKG]...';


GO
CREATE TABLE [dbo].[SECUR_PKG] (
    [SECUR_PKG_CD]   VARCHAR (10)   NOT NULL,
    [ROW_STS_KEY]    INT            NOT NULL,
    [SECUR_PKG_NM]   VARCHAR (150)  NOT NULL,
    [SECUR_PKG_DESC] VARCHAR (1000) NULL,
    [CREAT_DT]       DATETIME       NULL,
    [CREAT_USER_ID]  INT            NULL,
    [UPDT_DT]        DATETIME       NULL,
    [UPDT_USER_ID]   INT            NULL,
    CONSTRAINT [PK_SECUR_PKG] PRIMARY KEY CLUSTERED ([SECUR_PKG_CD] ASC)
);


GO
PRINT N'Creating [dbo].[SECUR_PKG_OFR]...';


GO
CREATE TABLE [dbo].[SECUR_PKG_OFR] (
    [SECUR_PKG_CD]  VARCHAR (10) NOT NULL,
    [SECUR_SRVC_CD] VARCHAR (10) NOT NULL,
    [ROW_STS_KEY]   INT          NOT NULL,
    [CREAT_DT]      DATETIME     NULL,
    [CREAT_USER_ID] INT          NULL,
    [UPDT_DT]       DATETIME     NULL,
    [UPDT_USER_ID]  INT          NULL,
    CONSTRAINT [PK_SECUR_PKG_OFR] PRIMARY KEY CLUSTERED ([SECUR_PKG_CD] ASC, [SECUR_SRVC_CD] ASC)
);


GO
PRINT N'Creating [dbo].[SECUR_SRVC]...';


GO
CREATE TABLE [dbo].[SECUR_SRVC] (
    [SECUR_SRVC_CD]   VARCHAR (10)   NOT NULL,
    [ROW_STS_KEY]     INT            NOT NULL,
    [SECUR_SRVC_NM]   VARCHAR (150)  NOT NULL,
    [SECUR_SRVC_DESC] VARCHAR (1000) NULL,
    [CREAT_DT]        DATETIME       NULL,
    [CREAT_USER_ID]   INT            NULL,
    [UPDT_DT]         DATETIME       NULL,
    [UPDT_USER_ID]    INT            NULL,
    CONSTRAINT [PK_SECUR_SRVC] PRIMARY KEY CLUSTERED ([SECUR_SRVC_CD] ASC)
);


GO
PRINT N'Creating [dbo].[ST_CD]...';


GO
CREATE TABLE [dbo].[ST_CD] (
    [ST_CD_KEY]     INT           IDENTITY (1, 1) NOT NULL,
    [ST_CD]         VARCHAR (10)  NOT NULL,
    [CNTRY_CD]      VARCHAR (10)  NULL,
    [ST_NM]         VARCHAR (150) NOT NULL,
    [CREAT_DT]      DATETIME      NULL,
    [CREAT_USER_ID] INT           NULL,
    [UPDT_DT]       DATETIME      NULL,
    [UPDT_USER_ID]  INT           NULL,
    CONSTRAINT [PK133] PRIMARY KEY CLUSTERED ([ST_CD_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[THREAT_CATGY]...';


GO
CREATE TABLE [dbo].[THREAT_CATGY] (
    [THREAT_CATGY_CD] VARCHAR (3)   NOT NULL,
    [THREAT_CATGY_NM] VARCHAR (150) NULL,
    [CREAT_DT]        DATETIME      NULL,
    [CREAT_USER_ID]   INT           NULL,
    [UPDT_DT]         DATETIME      NULL,
    [UPDT_USER_ID]    INT           NULL,
    CONSTRAINT [PK_THREAT_CATGY] PRIMARY KEY CLUSTERED ([THREAT_CATGY_CD] ASC)
);


GO
PRINT N'Creating [dbo].[USER_APPL_ROLE]...';


GO
CREATE TABLE [dbo].[USER_APPL_ROLE] (
    [USER_APPL_ROLE_KEY] INT      IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]        INT      NOT NULL,
    [APPL_ROLE_KEY]      INT      NOT NULL,
    [USER_ID]            INT      NOT NULL,
    [CREAT_DT]           DATETIME NULL,
    [CREAT_USER_ID]      INT      NULL,
    [UPDT_DT]            DATETIME NULL,
    [UPDT_USER_ID]       INT      NULL,
    CONSTRAINT [PK_USER_ENGMT_ROLE] PRIMARY KEY CLUSTERED ([USER_APPL_ROLE_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[USER_CLNT_SRVC_ASGN]...';


GO
CREATE TABLE [dbo].[USER_CLNT_SRVC_ASGN] (
    [USER_CLNT_SRVC_ASGN_KEY] INT          IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]             INT          NOT NULL,
    [USER_ID]                 INT          NOT NULL,
    [USER_STRT_DT]            DATETIME     NULL,
    [USER_END_DT]             DATETIME     NULL,
    [CREAT_DT]                DATETIME     NULL,
    [CREAT_USER_ID]           INT          NULL,
    [UPDT_DT]                 DATETIME     NULL,
    [UPDT_USER_ID]            INT          NULL,
    [SECUR_SRVC_CD]           VARCHAR (10) NOT NULL,
    [CLNT_ENGMT_CD]           VARCHAR (30) NOT NULL,
    CONSTRAINT [PK_USER_CLNT_SRVC_ASGN] PRIMARY KEY CLUSTERED ([USER_CLNT_SRVC_ASGN_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[USER_EMAIL_LOG]...';


GO
CREATE TABLE [dbo].[USER_EMAIL_LOG] (
    [USER_EMAIL_LOG]     INT            IDENTITY (1, 1) NOT NULL,
    [NTF_MSG_KEY]        INT            NULL,
    [USER_ID]            INT            NOT NULL,
    [FROM_EMAIL_ID]      VARCHAR (150)  NULL,
    [TO_EMAIL_ID]        TEXT           NULL,
    [CC_EMAIL_ID]        TEXT           NULL,
    [BCC_EMAIL_ID]       TEXT           NULL,
    [EMAIL_SND_DT]       DATETIME       NULL,
    [EMAIL_MSG_SBJ_TXT]  VARCHAR (255)  NULL,
    [EMAIL_MSG_CNTN_TXT] TEXT           NULL,
    [SND_SUC_IND]        INT            NULL,
    [RESND_CNT]          INT            NULL,
    [ERR_DESC]           VARCHAR (5000) NULL,
    CONSTRAINT [PK47] PRIMARY KEY CLUSTERED ([USER_EMAIL_LOG] ASC)
);


GO
PRINT N'Creating [dbo].[USER_EVNT_LOG]...';


GO
CREATE TABLE [dbo].[USER_EVNT_LOG] (
    [USER_EVNT_LOG_KEY]  INT            IDENTITY (1, 1) NOT NULL,
    [USER_ID]            INT            NOT NULL,
    [ACT_NM]             VARCHAR (100)  NULL,
    [MDUL_NM]            VARCHAR (100)  NULL,
    [EVNT_DT]            DATETIME       NULL,
    [EVNT_DESC]          VARCHAR (1000) NULL,
    [CLNT_ENGMT_CD]      VARCHAR (30)   NULL,
    [CLNT_SRVC_ENGMT_CD] VARCHAR (150)  NULL,
    [IPADR]              VARCHAR (20)   NULL,
    [SFTW_INFO_TXT]      VARCHAR (5000) NULL,
    [FILL_TXT]           TEXT           NULL,
    CONSTRAINT [PK48] PRIMARY KEY CLUSTERED ([USER_EVNT_LOG_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[USER_PRFL]...';


GO
CREATE TABLE [dbo].[USER_PRFL] (
    [USER_ID]         INT           IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]     INT           NOT NULL,
    [ORG_KEY]         INT           NOT NULL,
    [USER_TYP_KEY]    INT           NULL,
    [FST_NM]          VARCHAR (150) NOT NULL,
    [LST_NM]          VARCHAR (150) NOT NULL,
    [MIDL_NM]         VARCHAR (150) NULL,
    [JOB_TITL_NM]     VARCHAR (150) NULL,
    [EMAIL_ID]        VARCHAR (150) NOT NULL,
    [TEL_NBR]         VARCHAR (20)  NULL,
    [MAC_ADR_NM]      VARCHAR (50)  NULL,
    [USER_VERF_IND]   INT           NOT NULL,
    [LCK_IND]         INT           NOT NULL,
    [LOGIN_ATMPT_CNT] INT           NULL,
    [LST_LOGIN_DT]    DATETIME      NULL,
    [PSWD_RSET_DT]    DATETIME      NULL,
    [STS_COMMT_TXT]   TEXT          NULL,
    [CREAT_DT]        DATETIME      NULL,
    [CREAT_USER_ID]   INT           NULL,
    [UPDT_DT]         DATETIME      NULL,
    [UPDT_USER_ID]    INT           NULL,
    CONSTRAINT [PK_USER_PRFL] PRIMARY KEY CLUSTERED ([USER_ID] ASC)
);


GO
PRINT N'Creating [dbo].[USER_SECUR_DTL]...';


GO
CREATE TABLE [dbo].[USER_SECUR_DTL] (
    [USER_SECUR_DTL_KEY] INT            IDENTITY (1, 1) NOT NULL,
    [ROW_STS_KEY]        INT            NOT NULL,
    [USER_ID]            INT            NOT NULL,
    [SECUR_QUES_KEY]     INT            NOT NULL,
    [ANS_TXT]            VARCHAR (1000) NULL,
    [SEQ_ORDR_NBR]       INT            NOT NULL,
    [CREAT_DT]           DATETIME       NULL,
    [CREAT_USER_ID]      INT            NULL,
    [UPDT_DT]            DATETIME       NULL,
    [UPDT_USER_ID]       INT            NULL,
    CONSTRAINT [PK_USER_SECUR_DTL] PRIMARY KEY CLUSTERED ([USER_SECUR_DTL_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[USER_SESS_LOG]...';


GO
CREATE TABLE [dbo].[USER_SESS_LOG] (
    [USER_SESS_INFO_KEY] INT           IDENTITY (1, 1) NOT NULL,
    [USER_ID]            INT           NOT NULL,
    [EMAIL_ID]           VARCHAR (150) NULL,
    [SESS_ID]            VARCHAR (500) NULL,
    [LST_ACT_DT]         DATETIME      NULL,
    CONSTRAINT [PK40] PRIMARY KEY CLUSTERED ([USER_SESS_INFO_KEY] ASC)
);


GO
PRINT N'Creating [dbo].[VULN_IMP]...';


GO
CREATE TABLE [dbo].[VULN_IMP] (
    [VULN_IMP_CD]       VARCHAR (3)     NOT NULL,
    [VULN_IMP_NM]       VARCHAR (150)   NOT NULL,
    [VULN_IMP_ORDR_NBR] INT             NULL,
    [CVSS_IMP_SCOR_MIN] DECIMAL (10, 2) NULL,
    [CVSS_IMP_SCOR_MAX] DECIMAL (10, 2) NULL,
    [CREAT_DT]          DATETIME        NULL,
    [CREAT_USER_ID]     INT             NULL,
    [UPDT_DT]           DATETIME        NULL,
    [UPDT_USER_ID]      INT             NULL,
    CONSTRAINT [PK_VULN_IMP] PRIMARY KEY CLUSTERED ([VULN_IMP_CD] ASC)
);


GO
PRINT N'Creating [dbo].[VULN_INSTC_STS]...';


GO
CREATE TABLE [dbo].[VULN_INSTC_STS] (
    [VULN_INSTC_STS_CD] VARCHAR (3)   NOT NULL,
    [VULN_INSTC_STS_NM] VARCHAR (150) NULL,
    [CREAT_DT]          DATETIME      NULL,
    [CREAT_USER_ID]     INT           NULL,
    [UPDT_DT]           DATETIME      NULL,
    [UPDT_USER_ID]      INT           NULL,
    CONSTRAINT [PK_VULN_EVNT_STS] PRIMARY KEY CLUSTERED ([VULN_INSTC_STS_CD] ASC)
);


GO
PRINT N'Creating [dbo].[VULN_SEV]...';


GO
CREATE TABLE [dbo].[VULN_SEV] (
    [VULN_SEV_CD]       VARCHAR (3)     NOT NULL,
    [VULN_SEV_NM]       VARCHAR (150)   NOT NULL,
    [VULN_SEV_ORDR_NBR] INT             NULL,
    [CVSS_BAS_SCOR_MIN] DECIMAL (10, 2) NULL,
    [CVSS_BAS_SCOR_MAX] DECIMAL (10, 2) NULL,
    [CREAT_DT]          DATETIME        NULL,
    [CREAT_USER_ID]     INT             NULL,
    [UPDT_DT]           DATETIME        NULL,
    [UPDT_USER_ID]      INT             NULL,
    CONSTRAINT [PK_VULN_SEV] PRIMARY KEY CLUSTERED ([VULN_SEV_CD] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[MSTR_LKP]...';


GO
ALTER TABLE [dbo].[MSTR_LKP]
    ADD DEFAULT ((1)) FOR [ACTV_IND];


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN]...';


GO
ALTER TABLE [dbo].[PERMSN]
    ADD DEFAULT ((0)) FOR [CHLD_XST_IND];


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN]...';


GO
ALTER TABLE [dbo].[PERMSN]
    ADD DEFAULT ((0)) FOR [SEQ_ORDR];


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_SECUR_DTL]...';


GO
ALTER TABLE [dbo].[USER_SECUR_DTL]
    ADD DEFAULT ((0)) FOR [SEQ_ORDR_NBR];


GO
PRINT N'Creating unnamed constraint on [stg].[CISCO_PEN_TST_STG]...';


GO
ALTER TABLE [stg].[CISCO_PEN_TST_STG] WITH NOCHECK
    ADD FOREIGN KEY ([APPL_FL_UPLOAD_LOG_KEY]) REFERENCES [dbo].[APPL_FL_UPLOAD_LOG] ([APPL_FL_UPLOAD_LOG_KEY]);


GO
PRINT N'Creating unnamed constraint on [stg].[CISCO_SECUR_RISK_ASES_STG]...';


GO
ALTER TABLE [stg].[CISCO_SECUR_RISK_ASES_STG] WITH NOCHECK
    ADD FOREIGN KEY ([APPL_FL_UPLOAD_LOG_KEY]) REFERENCES [dbo].[APPL_FL_UPLOAD_LOG] ([APPL_FL_UPLOAD_LOG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ENGMT_CD]) REFERENCES [dbo].[CLNT_ENGMT] ([CLNT_ENGMT_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ENGMT_CD]) REFERENCES [dbo].[CLNT_ENGMT] ([CLNT_ENGMT_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([DOC_TYP_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([DOC_TYP_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([FL_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([FL_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([SRC_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([SRC_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([UPLOAD_USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([UPLOAD_USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ENGMT_CD], [SECUR_SRVC_CD]) REFERENCES [dbo].[CLNT_SECUR_SRVC_ENGMT] ([CLNT_ENGMT_CD], [SECUR_SRVC_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_FL_UPLOAD_LOG]...';


GO
ALTER TABLE [dbo].[APPL_FL_UPLOAD_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ENGMT_CD], [SECUR_SRVC_CD]) REFERENCES [dbo].[CLNT_SECUR_SRVC_ENGMT] ([CLNT_ENGMT_CD], [SECUR_SRVC_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_ROLE]...';


GO
ALTER TABLE [dbo].[APPL_ROLE] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_ROLE]...';


GO
ALTER TABLE [dbo].[APPL_ROLE] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_ROLE_PERMSN_GRP]...';


GO
ALTER TABLE [dbo].[APPL_ROLE_PERMSN_GRP] WITH NOCHECK
    ADD FOREIGN KEY ([APPL_ROLE_KEY]) REFERENCES [dbo].[APPL_ROLE] ([APPL_ROLE_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_ROLE_PERMSN_GRP]...';


GO
ALTER TABLE [dbo].[APPL_ROLE_PERMSN_GRP] WITH NOCHECK
    ADD FOREIGN KEY ([APPL_ROLE_KEY]) REFERENCES [dbo].[APPL_ROLE] ([APPL_ROLE_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_ROLE_PERMSN_GRP]...';


GO
ALTER TABLE [dbo].[APPL_ROLE_PERMSN_GRP] WITH NOCHECK
    ADD FOREIGN KEY ([PERMSN_GRP_KEY]) REFERENCES [dbo].[PERMSN_GRP] ([PERMSN_GRP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_ROLE_PERMSN_GRP]...';


GO
ALTER TABLE [dbo].[APPL_ROLE_PERMSN_GRP] WITH NOCHECK
    ADD FOREIGN KEY ([PERMSN_GRP_KEY]) REFERENCES [dbo].[PERMSN_GRP] ([PERMSN_GRP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_ROLE_PERMSN_GRP]...';


GO
ALTER TABLE [dbo].[APPL_ROLE_PERMSN_GRP] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[APPL_ROLE_PERMSN_GRP]...';


GO
ALTER TABLE [dbo].[APPL_ROLE_PERMSN_GRP] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CD_XREF]...';


GO
ALTER TABLE [dbo].[CD_XREF] WITH NOCHECK
    ADD FOREIGN KEY ([SRC_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CD_XREF]...';


GO
ALTER TABLE [dbo].[CD_XREF] WITH NOCHECK
    ADD FOREIGN KEY ([SRC_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([ENGMT_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([ENGMT_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([SECUR_PKG_CD]) REFERENCES [dbo].[SECUR_PKG] ([SECUR_PKG_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([SECUR_PKG_CD]) REFERENCES [dbo].[SECUR_PKG] ([SECUR_PKG_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_ENGMT_USER_ASGN]...';


GO
ALTER TABLE [dbo].[CLNT_ENGMT_USER_ASGN] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ENGMT_CD]) REFERENCES [dbo].[CLNT_ENGMT] ([CLNT_ENGMT_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_ENGMT_USER_ASGN]...';


GO
ALTER TABLE [dbo].[CLNT_ENGMT_USER_ASGN] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ENGMT_CD]) REFERENCES [dbo].[CLNT_ENGMT] ([CLNT_ENGMT_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_ENGMT_USER_ASGN]...';


GO
ALTER TABLE [dbo].[CLNT_ENGMT_USER_ASGN] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_ENGMT_USER_ASGN]...';


GO
ALTER TABLE [dbo].[CLNT_ENGMT_USER_ASGN] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_ENGMT_USER_ASGN]...';


GO
ALTER TABLE [dbo].[CLNT_ENGMT_USER_ASGN] WITH NOCHECK
    ADD FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_ENGMT_USER_ASGN]...';


GO
ALTER TABLE [dbo].[CLNT_ENGMT_USER_ASGN] WITH NOCHECK
    ADD FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_REL_ENGMT_ID]...';


GO
ALTER TABLE [dbo].[CLNT_REL_ENGMT_ID] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ENGMT_CD]) REFERENCES [dbo].[CLNT_ENGMT] ([CLNT_ENGMT_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_REL_ENGMT_ID]...';


GO
ALTER TABLE [dbo].[CLNT_REL_ENGMT_ID] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ENGMT_CD]) REFERENCES [dbo].[CLNT_ENGMT] ([CLNT_ENGMT_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_REL_ENGMT_ID]...';


GO
ALTER TABLE [dbo].[CLNT_REL_ENGMT_ID] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_REL_ENGMT_ID]...';


GO
ALTER TABLE [dbo].[CLNT_REL_ENGMT_ID] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_REL_ENGMT_ID]...';


GO
ALTER TABLE [dbo].[CLNT_REL_ENGMT_ID] WITH NOCHECK
    ADD FOREIGN KEY ([SRC_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_REL_ENGMT_ID]...';


GO
ALTER TABLE [dbo].[CLNT_REL_ENGMT_ID] WITH NOCHECK
    ADD FOREIGN KEY ([SRC_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_SECUR_SRVC_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_SECUR_SRVC_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ENGMT_CD]) REFERENCES [dbo].[CLNT_ENGMT] ([CLNT_ENGMT_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_SECUR_SRVC_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_SECUR_SRVC_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ENGMT_CD]) REFERENCES [dbo].[CLNT_ENGMT] ([CLNT_ENGMT_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_SECUR_SRVC_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_SECUR_SRVC_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_SECUR_SRVC_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_SECUR_SRVC_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_SECUR_SRVC_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_SECUR_SRVC_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([SECUR_SRVC_CD]) REFERENCES [dbo].[SECUR_SRVC] ([SECUR_SRVC_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_SECUR_SRVC_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_SECUR_SRVC_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([SECUR_SRVC_CD]) REFERENCES [dbo].[SECUR_SRVC] ([SECUR_SRVC_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_SECUR_SRVC_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_SECUR_SRVC_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([SRVC_ENGMT_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_SECUR_SRVC_ENGMT]...';


GO
ALTER TABLE [dbo].[CLNT_SECUR_SRVC_ENGMT] WITH NOCHECK
    ADD FOREIGN KEY ([SRVC_ENGMT_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([APPL_FL_UPLOAD_LOG_KEY]) REFERENCES [dbo].[APPL_FL_UPLOAD_LOG] ([APPL_FL_UPLOAD_LOG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([APPL_FL_UPLOAD_LOG_KEY]) REFERENCES [dbo].[APPL_FL_UPLOAD_LOG] ([APPL_FL_UPLOAD_LOG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([CVE_ID]) REFERENCES [dbo].[CVE] ([CVE_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([CVE_ID]) REFERENCES [dbo].[CVE] ([CVE_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([RISK_PRBL_CD]) REFERENCES [dbo].[RISK_PRBL] ([RISK_PRBL_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([RISK_PRBL_CD]) REFERENCES [dbo].[RISK_PRBL] ([RISK_PRBL_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([RMDTN_CST_EFFRT_CD]) REFERENCES [dbo].[RMDTN_CST_EFFRT] ([RMDTN_CST_EFFRT_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([RMDTN_CST_EFFRT_CD]) REFERENCES [dbo].[RMDTN_CST_EFFRT] ([RMDTN_CST_EFFRT_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([ROOT_CAUS_ANLYS_CD]) REFERENCES [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([ROOT_CAUS_ANLYS_CD]) REFERENCES [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([THREAT_CATGY_CD]) REFERENCES [dbo].[THREAT_CATGY] ([THREAT_CATGY_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([THREAT_CATGY_CD]) REFERENCES [dbo].[THREAT_CATGY] ([THREAT_CATGY_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([VULN_IMP_CD]) REFERENCES [dbo].[VULN_IMP] ([VULN_IMP_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([VULN_IMP_CD]) REFERENCES [dbo].[VULN_IMP] ([VULN_IMP_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([VULN_INSTC_STS_CD]) REFERENCES [dbo].[VULN_INSTC_STS] ([VULN_INSTC_STS_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([VULN_INSTC_STS_CD]) REFERENCES [dbo].[VULN_INSTC_STS] ([VULN_INSTC_STS_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([VULN_SEV_CD]) REFERENCES [dbo].[VULN_SEV] ([VULN_SEV_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([VULN_SEV_CD]) REFERENCES [dbo].[VULN_SEV] ([VULN_SEV_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([VULN_SRC_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([VULN_SRC_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ENGMT_CD], [SECUR_SRVC_CD]) REFERENCES [dbo].[CLNT_SECUR_SRVC_ENGMT] ([CLNT_ENGMT_CD], [SECUR_SRVC_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_INSTC]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_INSTC] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ENGMT_CD], [SECUR_SRVC_CD]) REFERENCES [dbo].[CLNT_SECUR_SRVC_ENGMT] ([CLNT_ENGMT_CD], [SECUR_SRVC_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_SECUR_CTL]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_SECUR_CTL] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_VULN_INSTC_KEY]) REFERENCES [dbo].[CLNT_VULN_INSTC] ([CLNT_VULN_INSTC_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_SECUR_CTL]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_SECUR_CTL] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_VULN_INSTC_KEY]) REFERENCES [dbo].[CLNT_VULN_INSTC] ([CLNT_VULN_INSTC_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_SECUR_CTL]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_SECUR_CTL] WITH NOCHECK
    ADD FOREIGN KEY ([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD]) REFERENCES [dbo].[SECUR_CTL] ([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CLNT_VULN_SECUR_CTL]...';


GO
ALTER TABLE [dbo].[CLNT_VULN_SECUR_CTL] WITH NOCHECK
    ADD FOREIGN KEY ([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD]) REFERENCES [dbo].[SECUR_CTL] ([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CVE_SECUR_CTL_MAP]...';


GO
ALTER TABLE [dbo].[CVE_SECUR_CTL_MAP] WITH NOCHECK
    ADD FOREIGN KEY ([CVE_ID]) REFERENCES [dbo].[CVE] ([CVE_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CVE_SECUR_CTL_MAP]...';


GO
ALTER TABLE [dbo].[CVE_SECUR_CTL_MAP] WITH NOCHECK
    ADD FOREIGN KEY ([CVE_ID]) REFERENCES [dbo].[CVE] ([CVE_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CVE_SECUR_CTL_MAP]...';


GO
ALTER TABLE [dbo].[CVE_SECUR_CTL_MAP] WITH NOCHECK
    ADD FOREIGN KEY ([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD]) REFERENCES [dbo].[SECUR_CTL] ([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[CVE_SECUR_CTL_MAP]...';


GO
ALTER TABLE [dbo].[CVE_SECUR_CTL_MAP] WITH NOCHECK
    ADD FOREIGN KEY ([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD]) REFERENCES [dbo].[SECUR_CTL] ([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ETL_ERR_LOG]...';


GO
ALTER TABLE [dbo].[ETL_ERR_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([ETL_AUD_LOG_KEY]) REFERENCES [dbo].[ETL_AUD_LOG] ([ETL_AUD_LOG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ETL_ERR_LOG]...';


GO
ALTER TABLE [dbo].[ETL_ERR_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([ETL_AUD_LOG_KEY]) REFERENCES [dbo].[ETL_AUD_LOG] ([ETL_AUD_LOG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[NTF_MSG]...';


GO
ALTER TABLE [dbo].[NTF_MSG] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[NTF_MSG]...';


GO
ALTER TABLE [dbo].[NTF_MSG] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG]...';


GO
ALTER TABLE [dbo].[ORG] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_INDUS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG]...';


GO
ALTER TABLE [dbo].[ORG] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_INDUS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG]...';


GO
ALTER TABLE [dbo].[ORG] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_TYP_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG]...';


GO
ALTER TABLE [dbo].[ORG] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_TYP_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG]...';


GO
ALTER TABLE [dbo].[ORG] WITH NOCHECK
    ADD FOREIGN KEY ([PAR_ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG]...';


GO
ALTER TABLE [dbo].[ORG] WITH NOCHECK
    ADD FOREIGN KEY ([PAR_ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG]...';


GO
ALTER TABLE [dbo].[ORG] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG]...';


GO
ALTER TABLE [dbo].[ORG] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_CNTC]...';


GO
ALTER TABLE [dbo].[ORG_CNTC] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_CNTC]...';


GO
ALTER TABLE [dbo].[ORG_CNTC] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_CNTC]...';


GO
ALTER TABLE [dbo].[ORG_CNTC] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_LOC_KEY]) REFERENCES [dbo].[ORG_LOC] ([ORG_LOC_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_CNTC]...';


GO
ALTER TABLE [dbo].[ORG_CNTC] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_LOC_KEY]) REFERENCES [dbo].[ORG_LOC] ([ORG_LOC_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_CNTC]...';


GO
ALTER TABLE [dbo].[ORG_CNTC] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_CNTC]...';


GO
ALTER TABLE [dbo].[ORG_CNTC] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_LOC]...';


GO
ALTER TABLE [dbo].[ORG_LOC] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_LOC]...';


GO
ALTER TABLE [dbo].[ORG_LOC] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_LOC]...';


GO
ALTER TABLE [dbo].[ORG_LOC] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_LOC]...';


GO
ALTER TABLE [dbo].[ORG_LOC] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_REL_ID]...';


GO
ALTER TABLE [dbo].[ORG_REL_ID] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_REL_ID]...';


GO
ALTER TABLE [dbo].[ORG_REL_ID] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_REL_ID]...';


GO
ALTER TABLE [dbo].[ORG_REL_ID] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_REL_ID]...';


GO
ALTER TABLE [dbo].[ORG_REL_ID] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_REL_ID]...';


GO
ALTER TABLE [dbo].[ORG_REL_ID] WITH NOCHECK
    ADD FOREIGN KEY ([SRC_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ORG_REL_ID]...';


GO
ALTER TABLE [dbo].[ORG_REL_ID] WITH NOCHECK
    ADD FOREIGN KEY ([SRC_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN]...';


GO
ALTER TABLE [dbo].[PERMSN] WITH NOCHECK
    ADD FOREIGN KEY ([PAR_PERMSN_KEY]) REFERENCES [dbo].[PERMSN] ([PERMSN_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN]...';


GO
ALTER TABLE [dbo].[PERMSN] WITH NOCHECK
    ADD FOREIGN KEY ([PAR_PERMSN_KEY]) REFERENCES [dbo].[PERMSN] ([PERMSN_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN]...';


GO
ALTER TABLE [dbo].[PERMSN] WITH NOCHECK
    ADD FOREIGN KEY ([PERMSN_TYP_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN]...';


GO
ALTER TABLE [dbo].[PERMSN] WITH NOCHECK
    ADD FOREIGN KEY ([PERMSN_TYP_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN]...';


GO
ALTER TABLE [dbo].[PERMSN] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN]...';


GO
ALTER TABLE [dbo].[PERMSN] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN_GRP]...';


GO
ALTER TABLE [dbo].[PERMSN_GRP] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN_GRP]...';


GO
ALTER TABLE [dbo].[PERMSN_GRP] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN_GRP_ASSOC]...';


GO
ALTER TABLE [dbo].[PERMSN_GRP_ASSOC] WITH NOCHECK
    ADD FOREIGN KEY ([PERMSN_GRP_KEY]) REFERENCES [dbo].[PERMSN_GRP] ([PERMSN_GRP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN_GRP_ASSOC]...';


GO
ALTER TABLE [dbo].[PERMSN_GRP_ASSOC] WITH NOCHECK
    ADD FOREIGN KEY ([PERMSN_GRP_KEY]) REFERENCES [dbo].[PERMSN_GRP] ([PERMSN_GRP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN_GRP_ASSOC]...';


GO
ALTER TABLE [dbo].[PERMSN_GRP_ASSOC] WITH NOCHECK
    ADD FOREIGN KEY ([PERMSN_KEY]) REFERENCES [dbo].[PERMSN] ([PERMSN_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN_GRP_ASSOC]...';


GO
ALTER TABLE [dbo].[PERMSN_GRP_ASSOC] WITH NOCHECK
    ADD FOREIGN KEY ([PERMSN_KEY]) REFERENCES [dbo].[PERMSN] ([PERMSN_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN_GRP_ASSOC]...';


GO
ALTER TABLE [dbo].[PERMSN_GRP_ASSOC] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[PERMSN_GRP_ASSOC]...';


GO
ALTER TABLE [dbo].[PERMSN_GRP_ASSOC] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_CTL]...';


GO
ALTER TABLE [dbo].[SECUR_CTL] WITH NOCHECK
    ADD FOREIGN KEY ([REG_CMPLN_CD], [REG_CMPLN_VER]) REFERENCES [dbo].[REG_CMPLN] ([REG_CMPLN_CD], [REG_CMPLN_VER]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_CTL]...';


GO
ALTER TABLE [dbo].[SECUR_CTL] WITH NOCHECK
    ADD FOREIGN KEY ([REG_CMPLN_CD], [REG_CMPLN_VER]) REFERENCES [dbo].[REG_CMPLN] ([REG_CMPLN_CD], [REG_CMPLN_VER]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_CTL_MAP]...';


GO
ALTER TABLE [dbo].[SECUR_CTL_MAP] WITH NOCHECK
    ADD FOREIGN KEY ([PRI_REG_CMPLN_CD], [PRI_REG_CMPLN_VER], [PRI_SECUR_CTL_CD]) REFERENCES [dbo].[SECUR_CTL] ([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_CTL_MAP]...';


GO
ALTER TABLE [dbo].[SECUR_CTL_MAP] WITH NOCHECK
    ADD FOREIGN KEY ([PRI_REG_CMPLN_CD], [PRI_REG_CMPLN_VER], [PRI_SECUR_CTL_CD]) REFERENCES [dbo].[SECUR_CTL] ([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_CTL_MAP]...';


GO
ALTER TABLE [dbo].[SECUR_CTL_MAP] WITH NOCHECK
    ADD FOREIGN KEY ([SEC_REG_CMPLN_CD], [SEC_REG_CMPLN_VER], [SEC_SECUR_CTL_CD]) REFERENCES [dbo].[SECUR_CTL] ([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_CTL_MAP]...';


GO
ALTER TABLE [dbo].[SECUR_CTL_MAP] WITH NOCHECK
    ADD FOREIGN KEY ([SEC_REG_CMPLN_CD], [SEC_REG_CMPLN_VER], [SEC_SECUR_CTL_CD]) REFERENCES [dbo].[SECUR_CTL] ([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_PKG]...';


GO
ALTER TABLE [dbo].[SECUR_PKG] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_PKG]...';


GO
ALTER TABLE [dbo].[SECUR_PKG] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_PKG_OFR]...';


GO
ALTER TABLE [dbo].[SECUR_PKG_OFR] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_PKG_OFR]...';


GO
ALTER TABLE [dbo].[SECUR_PKG_OFR] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_PKG_OFR]...';


GO
ALTER TABLE [dbo].[SECUR_PKG_OFR] WITH NOCHECK
    ADD FOREIGN KEY ([SECUR_PKG_CD]) REFERENCES [dbo].[SECUR_PKG] ([SECUR_PKG_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_PKG_OFR]...';


GO
ALTER TABLE [dbo].[SECUR_PKG_OFR] WITH NOCHECK
    ADD FOREIGN KEY ([SECUR_PKG_CD]) REFERENCES [dbo].[SECUR_PKG] ([SECUR_PKG_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_PKG_OFR]...';


GO
ALTER TABLE [dbo].[SECUR_PKG_OFR] WITH NOCHECK
    ADD FOREIGN KEY ([SECUR_SRVC_CD]) REFERENCES [dbo].[SECUR_SRVC] ([SECUR_SRVC_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_PKG_OFR]...';


GO
ALTER TABLE [dbo].[SECUR_PKG_OFR] WITH NOCHECK
    ADD FOREIGN KEY ([SECUR_SRVC_CD]) REFERENCES [dbo].[SECUR_SRVC] ([SECUR_SRVC_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_SRVC]...';


GO
ALTER TABLE [dbo].[SECUR_SRVC] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[SECUR_SRVC]...';


GO
ALTER TABLE [dbo].[SECUR_SRVC] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ST_CD]...';


GO
ALTER TABLE [dbo].[ST_CD] WITH NOCHECK
    ADD FOREIGN KEY ([CNTRY_CD]) REFERENCES [dbo].[CNTRY_CD] ([CNTRY_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[ST_CD]...';


GO
ALTER TABLE [dbo].[ST_CD] WITH NOCHECK
    ADD FOREIGN KEY ([CNTRY_CD]) REFERENCES [dbo].[CNTRY_CD] ([CNTRY_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_APPL_ROLE]...';


GO
ALTER TABLE [dbo].[USER_APPL_ROLE] WITH NOCHECK
    ADD FOREIGN KEY ([APPL_ROLE_KEY]) REFERENCES [dbo].[APPL_ROLE] ([APPL_ROLE_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_APPL_ROLE]...';


GO
ALTER TABLE [dbo].[USER_APPL_ROLE] WITH NOCHECK
    ADD FOREIGN KEY ([APPL_ROLE_KEY]) REFERENCES [dbo].[APPL_ROLE] ([APPL_ROLE_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_APPL_ROLE]...';


GO
ALTER TABLE [dbo].[USER_APPL_ROLE] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_APPL_ROLE]...';


GO
ALTER TABLE [dbo].[USER_APPL_ROLE] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_APPL_ROLE]...';


GO
ALTER TABLE [dbo].[USER_APPL_ROLE] WITH NOCHECK
    ADD FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_APPL_ROLE]...';


GO
ALTER TABLE [dbo].[USER_APPL_ROLE] WITH NOCHECK
    ADD FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_CLNT_SRVC_ASGN]...';


GO
ALTER TABLE [dbo].[USER_CLNT_SRVC_ASGN] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_CLNT_SRVC_ASGN]...';


GO
ALTER TABLE [dbo].[USER_CLNT_SRVC_ASGN] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_CLNT_SRVC_ASGN]...';


GO
ALTER TABLE [dbo].[USER_CLNT_SRVC_ASGN] WITH NOCHECK
    ADD FOREIGN KEY ([SECUR_SRVC_CD]) REFERENCES [dbo].[SECUR_SRVC] ([SECUR_SRVC_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_CLNT_SRVC_ASGN]...';


GO
ALTER TABLE [dbo].[USER_CLNT_SRVC_ASGN] WITH NOCHECK
    ADD FOREIGN KEY ([SECUR_SRVC_CD]) REFERENCES [dbo].[SECUR_SRVC] ([SECUR_SRVC_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_CLNT_SRVC_ASGN]...';


GO
ALTER TABLE [dbo].[USER_CLNT_SRVC_ASGN] WITH NOCHECK
    ADD FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_CLNT_SRVC_ASGN]...';


GO
ALTER TABLE [dbo].[USER_CLNT_SRVC_ASGN] WITH NOCHECK
    ADD FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_CLNT_SRVC_ASGN]...';


GO
ALTER TABLE [dbo].[USER_CLNT_SRVC_ASGN] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ENGMT_CD], [SECUR_SRVC_CD]) REFERENCES [dbo].[CLNT_SECUR_SRVC_ENGMT] ([CLNT_ENGMT_CD], [SECUR_SRVC_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_CLNT_SRVC_ASGN]...';


GO
ALTER TABLE [dbo].[USER_CLNT_SRVC_ASGN] WITH NOCHECK
    ADD FOREIGN KEY ([CLNT_ENGMT_CD], [SECUR_SRVC_CD]) REFERENCES [dbo].[CLNT_SECUR_SRVC_ENGMT] ([CLNT_ENGMT_CD], [SECUR_SRVC_CD]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_EMAIL_LOG]...';


GO
ALTER TABLE [dbo].[USER_EMAIL_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([NTF_MSG_KEY]) REFERENCES [dbo].[NTF_MSG] ([NTF_MSG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_EMAIL_LOG]...';


GO
ALTER TABLE [dbo].[USER_EMAIL_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([NTF_MSG_KEY]) REFERENCES [dbo].[NTF_MSG] ([NTF_MSG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_EMAIL_LOG]...';


GO
ALTER TABLE [dbo].[USER_EMAIL_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_EMAIL_LOG]...';


GO
ALTER TABLE [dbo].[USER_EMAIL_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_EVNT_LOG]...';


GO
ALTER TABLE [dbo].[USER_EVNT_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_EVNT_LOG]...';


GO
ALTER TABLE [dbo].[USER_EVNT_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_PRFL]...';


GO
ALTER TABLE [dbo].[USER_PRFL] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_PRFL]...';


GO
ALTER TABLE [dbo].[USER_PRFL] WITH NOCHECK
    ADD FOREIGN KEY ([ORG_KEY]) REFERENCES [dbo].[ORG] ([ORG_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_PRFL]...';


GO
ALTER TABLE [dbo].[USER_PRFL] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_PRFL]...';


GO
ALTER TABLE [dbo].[USER_PRFL] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_PRFL]...';


GO
ALTER TABLE [dbo].[USER_PRFL] WITH NOCHECK
    ADD FOREIGN KEY ([USER_TYP_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_PRFL]...';


GO
ALTER TABLE [dbo].[USER_PRFL] WITH NOCHECK
    ADD FOREIGN KEY ([USER_TYP_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_SECUR_DTL]...';


GO
ALTER TABLE [dbo].[USER_SECUR_DTL] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_SECUR_DTL]...';


GO
ALTER TABLE [dbo].[USER_SECUR_DTL] WITH NOCHECK
    ADD FOREIGN KEY ([ROW_STS_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_SECUR_DTL]...';


GO
ALTER TABLE [dbo].[USER_SECUR_DTL] WITH NOCHECK
    ADD FOREIGN KEY ([SECUR_QUES_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_SECUR_DTL]...';


GO
ALTER TABLE [dbo].[USER_SECUR_DTL] WITH NOCHECK
    ADD FOREIGN KEY ([SECUR_QUES_KEY]) REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_SECUR_DTL]...';


GO
ALTER TABLE [dbo].[USER_SECUR_DTL] WITH NOCHECK
    ADD FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_SECUR_DTL]...';


GO
ALTER TABLE [dbo].[USER_SECUR_DTL] WITH NOCHECK
    ADD FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_SESS_LOG]...';


GO
ALTER TABLE [dbo].[USER_SESS_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[USER_SESS_LOG]...';


GO
ALTER TABLE [dbo].[USER_SESS_LOG] WITH NOCHECK
    ADD FOREIGN KEY ([USER_ID]) REFERENCES [dbo].[USER_PRFL] ([USER_ID]);


GO
PRINT N'Creating [dbo].[fnGetMasterLkpID]...';


GO
CREATE FUNCTION [dbo].[fnGetMasterLkpID]
(	
	@EntityType	VARCHAR(100),
    @EntityName	VARCHAR(500)
)
RETURNS INTEGER
AS
BEGIN
    DECLARE @EntityID INTEGER
      
      SELECT @EntityID = MSTR_LKP_KEY FROM [MSTR_LKP] 
      WHERE	 LKP_ENTY_TYP_NM = @EntityType AND LKP_ENTY_NM  = @EntityName

    RETURN @EntityID
END
GO
PRINT N'Creating [dbo].[fnGetMasterLkpNameByID]...';


GO
CREATE FUNCTION [dbo].[fnGetMasterLkpNameByID]
(	
    @EntityID	INTEGER
)
RETURNS NVARCHAR(MAX)
AS
BEGIN
    DECLARE @EntityName NVARCHAR(500)
      
      SELECT @EntityName = LKP_ENTY_NM FROM [MSTR_LKP] 
      WHERE	 MSTR_LKP_KEY = @EntityID

    RETURN @EntityName
END
GO
PRINT N'Creating [dbo].[fnGetParentOrgNameID]...';


GO
CREATE FUNCTION [dbo].[fnGetParentOrgNameID]
(	
	@ParentKey INTEGER
)
RETURNS VARCHAR(150)
AS
BEGIN
    DECLARE @EntityID VARCHAR(150)
      
      SELECT @EntityID = ORG_NM FROM ORG 
      WHERE	 ORG_KEY = @ParentKey

    RETURN @EntityID
END
GO
PRINT N'Creating [dbo].[fnGetUserNameByID]...';


GO
CREATE FUNCTION [dbo].[fnGetUserNameByID]
(	
    @Userid	INTEGER
)
RETURNS NVARCHAR(MAX)
AS
BEGIN
    DECLARE @UserName NVARCHAR(500)
   
      SELECT @UserName = FST_NM+' '+LST_NM  FROM USER_PRFL
      WHERE	 USER_ID = @Userid

    RETURN @UserName
END
GO
PRINT N'Creating [dbo].[FnSplit]...';


GO
-- DROP FUNCTION   FnSplit
CREATE FUNCTION [dbo].[FnSplit]
(
	@String varchar(MAX), 
	@Delimiter char(1)
 )       
returns @temptable TABLE (items varchar(MAX))       
as       
begin      
    declare @idx int       
    declare @slice varchar(8000)       

    select @idx = 1       
        if len(@String)<1 or @String is null  return       

    while @idx!= 0       
    begin       
        set @idx = charindex(@Delimiter,@String)       
        if @idx!=0       
            set @slice = left(@String,@idx - 1)       
        else       
            set @slice = @String       

        if(len(@slice)>0)  
            insert into @temptable(Items) values(@slice)       

        set @String = right(@String,len(@String) - @idx)       
        if len(@String) = 0 break       
    end   
return 
end;
GO
PRINT N'Creating [dbo].[Check_AuthoritativeSourceName]...';


GO
CREATE PROCEDURE [dbo].[Check_AuthoritativeSourceName]
(
	@LKP_ENTY_NM VARCHAR(150)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT COUNT(LKP_ENTY_NM) [COUNT] FROM    MSTR_LKP 
WHERE   LKP_ENTY_TYP_NM= 'Authoritative Source'	
AND     LKP_ENTY_NM  =  @LKP_ENTY_NM 
AND     ACTV_IND = 1  
  


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[Check_FileExistbyEngservicecode]...';


GO
CREATE PROCEDURE [dbo].[Check_FileExistbyEngservicecode]
(
	@FL_NM			VARCHAR(150),
	@CLNT_ENGMT_CD	VARCHAR(30),
	@SECUR_SRVC_CD  VARCHAR(10)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT COUNT(FL_NM) [COUNT] FROM    APPL_FL_UPLOAD_LOG
WHERE   FL_NM			= @FL_NM
AND		CLNT_ENGMT_CD	= @CLNT_ENGMT_CD	
AND		SECUR_SRVC_CD   = @SECUR_SRVC_CD 
AND		ROW_STS_KEY		= 1 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[Check_OrgNameByName]...';


GO
CREATE PROCEDURE [dbo].[Check_OrgNameByName]
(
	@OrgName VARCHAR(150)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON



SELECT COUNT(ORG_NM) [COUNT] FROM    ORG
WHERE   ORG_NM	= @OrgName
AND ROW_STS_KEY <> 3



END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[Check_PERMSN_GRPName]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: Check_PERMSN_GRPName
	** Desc: This procedure check permission name exist into PERMSN_GRP table
	** Auth: Prasad varma
	** Date: 22/4/2016
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    00/00/1999      xxxxx          

	**************************************/
CREATE PROCEDURE [dbo].[Check_PERMSN_GRPName]
(
	@PERMSN_GRP_NM VARCHAR(100)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT COUNT(PERMSN_GRP_NM) FROM    PERMSN_GRP
WHERE   PERMSN_GRP_NM	= @PERMSN_GRP_NM
AND ROW_STS_KEY <> 3

SELECT @@ROWCOUNT RETVAL

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[Check_ROLEName]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: Check_ROLEName
	** Desc: This procedure check permission name exist into APPL_ROLE table
	** Auth: Prasad varma
	** Date: 22/4/2016
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    00/00/1999      xxxxx          

	**************************************/
CREATE PROCEDURE [dbo].[Check_ROLEName]
(
	@APPL_ROLE_NM         VARCHAR(100)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT COUNT(APPL_ROLE_NM) FROM    APPL_ROLE
WHERE   APPL_ROLE_NM	= @APPL_ROLE_NM
AND ROW_STS_KEY <> 3



END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[DEL_CLNTENGMTUSERASGN]...';


GO
CREATE PROCEDURE [dbo].[DEL_CLNTENGMTUSERASGN](
	   
	   @CLNT_ENGMT_CD	VARCHAR(30)
      
       )

       AS
       BEGIN
              BEGIN TRY

              SET NOCOUNT ON


			  DELETE FROM CLNT_ENGMT_USER_ASGN  
			  WHERE  CLNT_ENGMT_CD	=	@CLNT_ENGMT_CD 
			
              SELECT @@ROWCOUNT AS RETVAL

              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END
GO
PRINT N'Creating [dbo].[DEL_CLNTRELENGMTINDENTIFIER]...';


GO
CREATE PROCEDURE [dbo].[DEL_CLNTRELENGMTINDENTIFIER](
	   @CLNT_ENGMT_CD	VARCHAR(30)
	   
       
       )

       AS
       BEGIN
              BEGIN TRY

              SET NOCOUNT ON

					DELETE  FROM CLNT_REL_ENGMT_ID
					WHERE  CLNT_ENGMT_CD	=	@CLNT_ENGMT_CD 

                    SELECT @@ROWCOUNT AS RETVAL

              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END
GO
PRINT N'Creating [dbo].[DEL_CLNTSECURSRVCENGMT]...';


GO

CREATE PROCEDURE [dbo].[DEL_CLNTSECURSRVCENGMT](
	   
	   @CLNT_ENGMT_CD	VARCHAR(30),
	   @SECUR_SRVC_CD	VARCHAR(30),
	   @Flag			VARCHAR(1)
	  
       )

       AS
       BEGIN
	   DECLARE @LiCOUNT INTEGER = 0;
              BEGIN TRY
			  
              SET NOCOUNT ON

			IF  @Flag = 'I'
			BEGIN
					DELETE FROM USER_CLNT_SRVC_ASGN WHERE CLNT_ENGMT_CD = @CLNT_ENGMT_CD AND SECUR_SRVC_CD = @SECUR_SRVC_CD

					DELETE FROM CLNT_SECUR_SRVC_ENGMT WHERE CLNT_ENGMT_CD = @CLNT_ENGMT_CD AND SECUR_SRVC_CD = @SECUR_SRVC_CD 

                    SELECT @@ROWCOUNT AS RETVAL
			END

			IF  @Flag = 'P'
			BEGIN
					DELETE A FROM USER_CLNT_SRVC_ASGN A
					JOIN	USER_PRFL				  B
					ON		A.USER_ID	=	B.USER_ID
					 WHERE A.CLNT_ENGMT_CD = @CLNT_ENGMT_CD 
					 AND SECUR_SRVC_CD = @SECUR_SRVC_CD
					 AND B.USER_TYP_KEY	= 18
					 

			

                    SELECT @@ROWCOUNT AS RETVAL
			END
              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END

/****** Object:  StoredProcedure [dbo].[Get_ClntEngmtUserAsgnByID]    Script Date: 5/25/2016 11:03:58 AM ******/
SET ANSI_NULLS ON
GO
PRINT N'Creating [dbo].[DEL_PartnerAnlistByEngCode]...';


GO

CREATE PROCEDURE [dbo].[DEL_PartnerAnlistByEngCode]
(   
	   @CLNT_ENGMT_CD	VARCHAR(30),
	   @Userlist		VARCHAR(100)
	
	  
       )

	   
       AS
       BEGIN
	   DECLARE @LiCOUNT INTEGER = 0;
              BEGIN TRY
			  
              SET NOCOUNT ON

			  

					DELETE A FROM USER_CLNT_SRVC_ASGN A
					JOIN	USER_PRFL				  B
					ON		A.CREAT_USER_ID	=	B.USER_ID
					 WHERE A.CLNT_ENGMT_CD = @CLNT_ENGMT_CD
					 AND   A.USER_ID NOT IN (SELECT items FROM dbo.FnSplit(@Userlist,','))
					 AND B.USER_TYP_KEY	= 18
				
				 SELECT @@ROWCOUNT AS RETVAL
		
		
              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END
GO
PRINT N'Creating [dbo].[DEL_UploadfilebyID]...';


GO


CREATE PROCEDURE [dbo].[DEL_UploadfilebyID](
	   
	   @APPL_FL_UPLOAD_LOG_KEY	INTEGER
      
       )

       AS
       BEGIN
              BEGIN TRY

              SET NOCOUNT ON


			  DELETE FROM APPL_FL_UPLOAD_LOG  
			  WHERE  APPL_FL_UPLOAD_LOG_KEY	=	@APPL_FL_UPLOAD_LOG_KEY 
			
              SELECT @@ROWCOUNT AS RETVAL

              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END
GO
PRINT N'Creating [dbo].[Get_ClntEngmtByID]...';


GO
CREATE PROCEDURE [dbo].[Get_ClntEngmtByID]
(
      @CLNT_ENGMT_CD	VARCHAR(30)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON


SELECT      A.CLNT_ENGMT_CD, A.CLNT_ORG_KEY, A.SECUR_PKG_CD, B.SECUR_PKG_NM, dbo.fnGetParentOrgNameID(A.CLNT_ORG_KEY) ClientName,A.ENGMT_STS_KEY,
			 dbo.fnGetMasterLkpNameByID(A.ROW_STS_KEY) ROW_STS_KEY, CLNT_ENGMT_CD, A.CLNT_ENGMT_NM,  
            A.AGR_DT, A.ENGMT_STRT_DT, A.ENGMT_EST_END_DT, A.CLNT_ENGMT_DESC, A.ENGMT_COMMT, A.CREAT_DT, A.CREAT_USER_ID, A.UPDT_DT, A.UPDT_USER_ID,
			dbo.fnGetParentOrgNameID(C.PAR_ORG_KEY) [Parent Client Name],dbo.fnGetMasterLkpNameByID(C.ORG_TYP_KEY) OrgType

FROM    	CLNT_ENGMT			 A
JOIN    	SECUR_PKG			 B
ON			A.SECUR_PKG_CD	   = B.SECUR_PKG_CD
JOIN        ORG                  C
ON          A.CLNT_ORG_KEY    =  C.ORG_KEY
WHERE       CLNT_ENGMT_CD     = @CLNT_ENGMT_CD


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[Get_ClntEngmtUserAsgnByID]...';


GO
CREATE PROCEDURE [dbo].[Get_ClntEngmtUserAsgnByID]
(
       @CLNT_ENGMT_CD	VARCHAR(30)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

	SELECT      DISTINCT A.CLNT_ENGMT_USER_ASGN_KEY, A.ROW_STS_KEY, A.CLNT_ENGMT_CD, A.USER_ID,
				A.CREAT_DT, A.CREAT_USER_ID,A.SECUR_SRVC_LIST_CD,B.USER_TYP_KEY,dbo.fnGetMasterLkpNameByID(B.USER_TYP_KEY) [User Type],
				[dbo].[fnGetUserNameByID](A.USER_ID) [User Name],B.ORG_KEY, ORG_NM 


	FROM    CLNT_ENGMT_USER_ASGN    A
	JOIN	USER_PRFL				B
	ON		A.USER_ID		  =		B.USER_ID
	JOIN	USER_APPL_ROLE			E
	ON		B.USER_ID		  =     E.USER_ID
	JOIN    APPL_ROLE				C
	ON		C.APPL_ROLE_KEY	  =     E.APPL_ROLE_KEY
	JOIN	ORG						D
	ON      B.ORG_KEY		  =     D.ORG_KEY
	WHERE   CLNT_ENGMT_CD    =		@CLNT_ENGMT_CD


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[Get_ClntRelEngmtIndenByID]...';


GO
CREATE PROCEDURE [dbo].[Get_ClntRelEngmtIndenByID]
(
      @CLNT_ENGMT_CD	VARCHAR(30)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON



	SELECT      CLNT_REL_ENGMT_ID_KEY, CLNT_ENGMT_CD,SRC_KEY,[dbo].[fnGetMasterLkpNameByID](SRC_KEY) ServiceName, 
				SRC_REL_ENGMT_ID, CREAT_DT, CREAT_USER_ID, 
				UPDT_DT, UPDT_USER_ID,ROW_STS_KEY

	FROM		CLNT_REL_ENGMT_ID
	WHERE		CLNT_ENGMT_CD                    =  @CLNT_ENGMT_CD


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[Get_ClntSecurSrvcEngmtByID]...';


GO
CREATE PROCEDURE [dbo].[Get_ClntSecurSrvcEngmtByID]
(
      @CLNT_ENGMT_CD	VARCHAR(30)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

	SELECT      CLNT_ENGMT_CD, A.SECUR_SRVC_CD, SRVC_ENGMT_STS_KEY, B.SECUR_SRVC_NM, A.ROW_STS_KEY, 
				SRVC_EST_STRT_DT, SRVC_EST_END_DT, A.CREAT_DT, A.CREAT_USER_ID, A.UPDT_DT, A.UPDT_USER_ID


	FROM    	CLNT_SECUR_SRVC_ENGMT	 A
	JOIN    	SECUR_SRVC				 B
	ON			A.SECUR_SRVC_CD	      =  B.SECUR_SRVC_CD
	WHERE   	CLNT_ENGMT_CD         =  @CLNT_ENGMT_CD


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[Get_EngageServiceByServiceID]...';


GO
CREATE PROCEDURE [dbo].[Get_EngageServiceByServiceID]
(
	@CLNT_ENGMT_CD	VARCHAR(30),
	@SECUR_SRVC_CD	VARCHAR(10),
	@USER_ID		INTEGER
	
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON


SELECT A.CLNT_ENGMT_CD,A.CLNT_ENGMT_NM,A.CLNT_ORG_KEY,B.ORG_NM,C.SECUR_PKG_CD,C.SECUR_PKG_NM,E.SECUR_SRVC_CD,E.SECUR_SRVC_NM,
	   D.SRVC_EST_STRT_DT,D.SRVC_EST_END_DT,A.AGR_DT,D.FL_LCK_IND
FROM   dbo.CLNT_ENGMT		A
JOIN   dbo.ORG				B
ON	   A.CLNT_ORG_KEY	 =  B.ORG_KEY
JOIN   dbo.SECUR_PKG		C
ON	   A.SECUR_PKG_CD	 =  C.SECUR_PKG_CD
JOIN   dbo.CLNT_SECUR_SRVC_ENGMT D
ON	   A.CLNT_ENGMT_CD	 =  D.CLNT_ENGMT_CD
JOIN   dbo.SECUR_SRVC		E
ON	   D.SECUR_SRVC_CD	 =  E.SECUR_SRVC_CD
WHERE  A.CLNT_ENGMT_CD	 =  @CLNT_ENGMT_CD
AND	   E.SECUR_SRVC_CD	 =  @SECUR_SRVC_CD


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[Get_ETLUploadedFiles]...';


GO

CREATE PROCEDURE [dbo].[Get_ETLUploadedFiles]
(
      @CLNT_ENGMT_CD	VARCHAR(30),
      @SECUR_SRVC_CD	VARCHAR(10),
      @UPLOAD_USER_ID	INTEGER
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON


SELECT      A.ORG_KEY,ORG_NM,CLNT_ENGMT_CD,SECUR_SRVC_CD,
			A.SRC_KEY,[dbo].[fnGetMasterLkpNameByID](A.SRC_KEY)SourceName,
			A.FL_STS_KEY,[dbo].[fnGetMasterLkpNameByID](A.FL_STS_KEY) FileStatus,
			A.UPLOAD_USER_ID,[dbo].[fnGetUserNameByID](A.UPLOAD_USER_ID) UploadedUser,
			FL_NM,FL_FLDR_PTH,FL_STS_COMMT,FL_UPLOAD_DT

FROM    ETL_FL_UPLOAD_LOG		A
JOIN	ORG						B
ON      A.ORG_KEY		  =     B.ORG_KEY
WHERE   CLNT_ENGMT_CD     =		@CLNT_ENGMT_CD
AND		A.SECUR_SRVC_CD	  =		CASE WHEN ISNULL(@SECUR_SRVC_CD,0) = 0 THEN A.SECUR_SRVC_CD ELSE @SECUR_SRVC_CD END
AND		A.UPLOAD_USER_ID  =		CASE WHEN ISNULL(@UPLOAD_USER_ID,0) = 0 THEN A.UPLOAD_USER_ID ELSE @UPLOAD_USER_ID END



END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[Get_OrgDetailsByID]...';


GO
CREATE PROCEDURE [dbo].[Get_OrgDetailsByID]  
(  
 @OrgID INTEGER  
)  
AS  
BEGIN  
BEGIN TRY  
SET NOCOUNT ON  
  
SELECT  A.ORG_KEY,A.ROW_STS_KEY,[dbo].[fnGetMasterLkpNameByID](A.ROW_STS_KEY) OrgStatus,  
  ISNULL(A.PAR_ORG_KEY,0) PAR_ORG_KEY,A.ORG_TYP_KEY,[dbo].[fnGetMasterLkpNameByID](A.ORG_TYP_KEY) [Org Type Name],B.LKP_ENTY_NM,A.ORG_INDUS_KEY,[dbo].[fnGetMasterLkpNameByID](A.ORG_INDUS_KEY) OrgIndustry,A.ORG_NM,A.STR_ADR_1,A.STR_ADR_2,A.CTY_NM,A.ST_NM,CNTRY_NM,  
  A.PST_CD,A.ORG_DESC,A.STS_COMMT_TXT ,ISNULL([dbo].[fnGetParentOrgNameID](A.PAR_ORG_KEY),'') PAR_ORG_NM
FROM    ORG      A  
JOIN MSTR_LKP    B  
ON  A.ORG_TYP_KEY = B.MSTR_LKP_KEY  
WHERE   A.ORG_KEY   = CASE WHEN @OrgID = 0 THEN A.ORG_KEY ELSE @OrgID END 
AND A.ORG_KEY <>1 
ORDER BY CASE WHEN ISNULL(A.UPDT_DT,'')='' THEN A.CREAT_DT ELSE A.UPDT_DT END DESC  
  
  
END TRY  
  
BEGIN CATCH  
  
    DECLARE @ErrorNumber INT = ERROR_NUMBER();  
    DECLARE @ErrorLine INT = ERROR_LINE();  
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
    DECLARE @ErrorState INT = ERROR_STATE();  
  
    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
  END CATCH  
-- COMMIT TRANSACTION  
END
GO
PRINT N'Creating [dbo].[Get_OrgRelDetailsByID]...';


GO
--DROP PROCEDURE Get_OrgRelDetailsByID  
CREATE PROCEDURE [dbo].[Get_OrgRelDetailsByID]  
(  
 @OrgID INTEGER  
)  
AS  
BEGIN  
BEGIN TRY  
SET NOCOUNT ON  
  
SELECT  A.ORG_KEY,A.ROW_STS_KEY,CASE WHEN A.ROW_STS_KEY=1 THEN 'Active' WHEN A.ROW_STS_KEY=2 THEN 'Inactive' END OrgStatus,  
  A.PAR_ORG_KEY,A.ORG_TYP_KEY,A.ORG_INDUS_KEY,A.ORG_NM,A.STR_ADR_1,A.STR_ADR_2,A.CTY_NM,A.ST_NM,CNTRY_NM,  
  A.PST_CD,A.ORG_DESC,C.ORG_REL_ID_KEY,C.SRC_KEY,B.LKP_ENTY_NM SourceName,C.SRC_CLNT_ID  
FROM    ORG      A  
JOIN ORG_REL_ID    C  
ON  A.ORG_KEY  = C.ORG_KEY  
JOIN MSTR_LKP    B  
ON  C.SRC_KEY    = B.MSTR_LKP_KEY  
WHERE   A.ORG_KEY  = @OrgID  
  
  
END TRY  
  
BEGIN CATCH  
  
    DECLARE @ErrorNumber INT = ERROR_NUMBER();  
    DECLARE @ErrorLine INT = ERROR_LINE();  
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
    DECLARE @ErrorState INT = ERROR_STATE();  
  
    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
  END CATCH  
-- COMMIT TRANSACTION  
END
GO
PRINT N'Creating [dbo].[Get_UploadedFiles]...';


GO

CREATE PROCEDURE [dbo].[Get_UploadedFiles]
(
      @CLNT_ENGMT_CD	VARCHAR(30),
      @SECUR_SRVC_CD	VARCHAR(10),
      @UPLOAD_USER_ID	INTEGER,
	  @Flag				VARCHAR(2)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

IF @Flag = 'EL'
BEGIN
SELECT      A.ORG_KEY,ORG_NM,CLNT_ENGMT_CD,A.SECUR_SRVC_CD,
			A.SRC_KEY,[dbo].[fnGetMasterLkpNameByID](A.SRC_KEY)SourceName,
			A.DOC_TYP_KEY,[dbo].[fnGetMasterLkpNameByID](A.DOC_TYP_KEY) DocumentType,
			A.UPLOAD_USER_ID,[dbo].[fnGetUserNameByID](A.UPLOAD_USER_ID) UploadedUser,
			FL_NM,FL_FLDR_PTH,FL_COMMT,FL_UPLOAD_DT,A.APPL_FL_UPLOAD_LOG_KEY,A.FL_STS_KEY,A.ETL_PROC_END_DT

FROM    APPL_FL_UPLOAD_LOG		A
JOIN	ORG						B
ON      A.ORG_KEY		  =     B.ORG_KEY
JOIN	MSTR_LKP				C
ON		C.MSTR_LKP_KEY    =		A.ROW_STS_KEY
WHERE   CLNT_ENGMT_CD     =		@CLNT_ENGMT_CD
AND		A.SECUR_SRVC_CD	  =		@SECUR_SRVC_CD
--AND		A.UPLOAD_USER_ID  =		@UPLOAD_USER_ID
AND		C.LKP_ENTY_NM	  =		'Active'
ORDER BY A.FL_UPLOAD_DT DESC
END

IF @Flag = 'EA'
BEGIN

SELECT      A.ORG_KEY,ORG_NM,CLNT_ENGMT_CD,SECUR_SRVC_CD,
			A.SRC_KEY,[dbo].[fnGetMasterLkpNameByID](A.SRC_KEY)SourceName,
			A.DOC_TYP_KEY,[dbo].[fnGetMasterLkpNameByID](A.DOC_TYP_KEY) DocumentType,
			A.UPLOAD_USER_ID,[dbo].[fnGetUserNameByID](A.UPLOAD_USER_ID) UploadedUser,
			FL_NM,FL_FLDR_PTH,FL_COMMT,FL_UPLOAD_DT,A.APPL_FL_UPLOAD_LOG_KEY,A.FL_STS_KEY,A.ETL_PROC_END_DT

FROM    APPL_FL_UPLOAD_LOG		A
JOIN	ORG						B
ON      A.ORG_KEY		  =     B.ORG_KEY
JOIN	MSTR_LKP				C
ON		C.MSTR_LKP_KEY    =		A.ROW_STS_KEY
WHERE   CLNT_ENGMT_CD     =		@CLNT_ENGMT_CD
AND		A.SECUR_SRVC_CD	  =		@SECUR_SRVC_CD
--AND		A.UPLOAD_USER_ID  =		@UPLOAD_USER_ID
AND		C.LKP_ENTY_NM	  =		'Active'
ORDER BY A.FL_UPLOAD_DT DESC

--SELECT      A.ORG_KEY,ORG_NM,CLNT_ENGMT_CD,SECUR_SRVC_CD,
--			A.SRC_KEY,[dbo].[fnGetMasterLkpNameByID](A.SRC_KEY)SourceName,
--			A.DOC_TYP_KEY,[dbo].[fnGetMasterLkpNameByID](A.DOC_TYP_KEY) DocumentType,
--			A.UPLOAD_USER_ID,[dbo].[fnGetUserNameByID](A.UPLOAD_USER_ID) UploadedUser,
--			FL_NM,FL_FLDR_PTH,FL_COMMT,FL_UPLOAD_DT,A.APPL_FL_UPLOAD_LOG_KEY,A.FL_STS_KEY,A.ETL_PROC_END_DT

--FROM    APPL_FL_UPLOAD_LOG		A
--JOIN	ORG						B
--ON      A.ORG_KEY		  =     B.ORG_KEY
--JOIN	MSTR_LKP				C
--ON		C.MSTR_LKP_KEY    =		A.ROW_STS_KEY
--WHERE   CLNT_ENGMT_CD     =		@CLNT_ENGMT_CD
--AND		A.SECUR_SRVC_CD	  =		@SECUR_SRVC_CD
--AND		A.UPLOAD_USER_ID  =		@UPLOAD_USER_ID
--AND		C.LKP_ENTY_NM	  =		'Active'
--ORDER BY A.FL_UPLOAD_DT DESC
END

IF @Flag = 'PL'
BEGIN
SELECT     DISTINCT A.ORG_KEY,ORG_NM,A.CLNT_ENGMT_CD,A.SECUR_SRVC_CD,
			A.SRC_KEY,[dbo].[fnGetMasterLkpNameByID](A.SRC_KEY)SourceName,
			A.DOC_TYP_KEY,[dbo].[fnGetMasterLkpNameByID](A.DOC_TYP_KEY) DocumentType,
			A.UPLOAD_USER_ID,[dbo].[fnGetUserNameByID](A.UPLOAD_USER_ID) UploadedUser,
			FL_NM,FL_FLDR_PTH,FL_COMMT,FL_UPLOAD_DT,A.APPL_FL_UPLOAD_LOG_KEY,A.FL_STS_KEY,A.ETL_PROC_END_DT

FROM    APPL_FL_UPLOAD_LOG		A
JOIN	ORG						B
ON      A.ORG_KEY		  =     B.ORG_KEY
JOIN	MSTR_LKP				C
ON		C.MSTR_LKP_KEY    =		A.ROW_STS_KEY
JOIN	CLNT_ENGMT_USER_ASGN	D
ON		A.CLNT_ENGMT_CD	  =     D.CLNT_ENGMT_CD
JOIN	USER_PRFL				F
ON		a.UPLOAD_USER_ID		 =		F.USER_ID
CROSS APPLY dbo.FnSplit(D.SECUR_SRVC_LIST_CD,',') AS K
JOIN	USER_CLNT_SRVC_ASGN		E
ON		A.SECUR_SRVC_CD			=	K.items
WHERE   A.CLNT_ENGMT_CD     =	@CLNT_ENGMT_CD
AND		A.SECUR_SRVC_CD	  =		@SECUR_SRVC_CD
AND		F.USER_TYP_KEY		=	18
AND		A.SECUR_SRVC_CD	  =     K.items	
AND		C.LKP_ENTY_NM	  =		'Active'
ORDER BY A.FL_UPLOAD_DT DESC
END

IF @Flag = 'PU'
BEGIN

SELECT     DISTINCT A.ORG_KEY,ORG_NM,A.CLNT_ENGMT_CD,A.SECUR_SRVC_CD,
			A.SRC_KEY,[dbo].[fnGetMasterLkpNameByID](A.SRC_KEY)SourceName,
			A.DOC_TYP_KEY,[dbo].[fnGetMasterLkpNameByID](A.DOC_TYP_KEY) DocumentType,
			A.UPLOAD_USER_ID,[dbo].[fnGetUserNameByID](A.UPLOAD_USER_ID) UploadedUser,
			FL_NM,FL_FLDR_PTH,FL_COMMT,FL_UPLOAD_DT,A.APPL_FL_UPLOAD_LOG_KEY,A.FL_STS_KEY,A.ETL_PROC_END_DT

FROM    APPL_FL_UPLOAD_LOG		A
JOIN	ORG						B
ON      A.ORG_KEY		  =     B.ORG_KEY
JOIN	MSTR_LKP				C
ON		C.MSTR_LKP_KEY    =		A.ROW_STS_KEY
JOIN	CLNT_ENGMT_USER_ASGN	D
ON		A.CLNT_ENGMT_CD	  =     D.CLNT_ENGMT_CD
JOIN	USER_PRFL				F
ON		a.UPLOAD_USER_ID		 =		F.USER_ID
CROSS APPLY dbo.FnSplit(D.SECUR_SRVC_LIST_CD,',') AS K
JOIN	USER_CLNT_SRVC_ASGN		E
ON		A.SECUR_SRVC_CD			=	K.items
WHERE   A.CLNT_ENGMT_CD     =	@CLNT_ENGMT_CD
AND		A.SECUR_SRVC_CD	  =		@SECUR_SRVC_CD
AND		F.USER_TYP_KEY		=	18
AND		A.SECUR_SRVC_CD	  =     K.items	
AND		C.LKP_ENTY_NM	  =		'Active'
ORDER BY A.FL_UPLOAD_DT DESC

END

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[GetAppRoleDetailsByID]...';


GO
CREATE PROCEDURE [dbo].[GetAppRoleDetailsByID]  
(  
       @APPLROLEKEY  INTEGER
)  
AS  
BEGIN  
BEGIN TRY  
SET NOCOUNT ON  


SELECT APPL_ROLE_KEY, ROW_STS_KEY, APPL_ROLE_NM, APPL_ROLE_DESC

FROM   APPL_ROLE
WHERE  APPL_ROLE_KEY = @APPLROLEKEY

 
END TRY  
  
BEGIN CATCH  
  
  
    DECLARE @ErrorNumber INT = ERROR_NUMBER();  
    DECLARE @ErrorLine INT = ERROR_LINE();  
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
    DECLARE @ErrorState INT = ERROR_STATE();  
  
    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
  END CATCH  
-- COMMIT TRANSACTION  
END
GO
PRINT N'Creating [dbo].[GetEmailIDbyUserID]...';


GO
CREATE PROCEDURE [dbo].[GetEmailIDbyUserID]
(
       @USER_ID      INTEGER               
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT EMAIL_ID,FST_NM [First Name],MIDL_NM [Middle Name],LST_NM [Last Name] 
FROM   USER_PRFL
WHERE   USER_ID = @USER_ID




END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[GetEmailNotificationByType]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: GetEmailNotificationByType
	** Desc: This procedure is USED TO FETCH EMAIL NOTIFICATION DETAils by  notification type.
	** Auth: Prasad varma
	** Date: 13/4/2016
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    00/00/1999      xxxxx          
	*******************************/
CREATE PROCEDURE [dbo].[GetEmailNotificationByType](
@NTF_TYP_NM  varchar(255)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	A.NTF_MSG_KEY,A.MSG_SBJ_TXT,A.MSG_CNTN_TXT
FROM	NTF_MSG		  A
WHERE	A.NTF_TYP_NM = @NTF_TYP_NM AND A.ROW_STS_KEY	= 1

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[GetEngagementCount]...';


GO
CREATE PROCEDURE [dbo].[GetEngagementCount]  
(  
 @CLNT_ORG_KEY           INTEGER,  
 @SECUR_PKG_CD           VARCHAR(10), 
 @AGR_DT                 DATETIME 
)  
AS  
BEGIN  
BEGIN TRY  
SET NOCOUNT ON  


SELECT COUNT(1) [COUNT] FROM   CLNT_ENGMT
WHERE   SECUR_PKG_CD = @SECUR_PKG_CD
AND     REPLACE(CONVERT(VARCHAR(10),AGR_DT,112),'-','') = @AGR_DT 


END TRY  
  
BEGIN CATCH  
  
  
    DECLARE @ErrorNumber INT = ERROR_NUMBER();  
    DECLARE @ErrorLine INT = ERROR_LINE();  
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
    DECLARE @ErrorState INT = ERROR_STATE();  
  
    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
  END CATCH  
-- COMMIT TRANSACTION  
END

-- Upload procedure
GO
PRINT N'Creating [dbo].[GetEngagementduedatehaspassed]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: GetEngagementduedatehaspassed
	** Desc: This procedure is Mail sent to Engagement Lead when Engagement due date  has passed.
	** Auth: Prasad varma
	** Date: 19/05/2016 
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    25/05/2016      xxxxx          
	*******************************/
CREATE PROCEDURE [dbo].[GetEngagementduedatehaspassed]
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	DISTINCT A.CLNT_ENGMT_CD,D.USER_TYP_KEY,(D.FST_NM + ' ' + D.LST_NM) [Engagement Lead],D.EMAIL_ID [Engagement Lead email],
		D.USER_ID [Engagement userid],[dbo].[fnGetMasterLkpNameByID] (D.USER_TYP_KEY) [User Type]

FROM	CLNT_ENGMT					A
JOIN	CLNT_ENGMT_USER_ASGN		B
ON		B.CLNT_ENGMT_CD				=	A.CLNT_ENGMT_CD	
JOIN	USER_PRFL					D
ON		D.USER_ID					=   B.USER_ID
WHERE  DATEDIFF(DAY,CONVERT(VARCHAR(10),A.ENGMT_EST_END_DT,101),CONVERT(VARCHAR(10),GETDATE(),101)) = 1

SELECT	DISTINCT A.CLNT_ENGMT_CD,D.USER_TYP_KEY,(D.FST_NM + ' ' + D.LST_NM) [Analyst Name],D.EMAIL_ID [Analyst email],
		D.USER_ID [Analyst userid],[dbo].[fnGetMasterLkpNameByID] (D.USER_TYP_KEY) [User Type]

FROM	CLNT_ENGMT					A
JOIN	USER_CLNT_SRVC_ASGN			B
ON		A.CLNT_ENGMT_CD				=	B.CLNT_ENGMT_CD	
JOIN	USER_PRFL					D
ON		D.USER_ID					=   B.USER_ID
WHERE  DATEDIFF(DAY,CONVERT(VARCHAR(10),A.ENGMT_EST_END_DT,101),CONVERT(VARCHAR(10),GETDATE(),101)) = 1
END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[GetEngagementduedateisapproachingEmail]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: GetEngagementduedateisapproachingEmail
	** Desc: This procedure is USED TO FEATCH ENGAGEMENT ASSIGN SERVICE PASTDATE USERS LIST.
	** Auth: Prasad varma
	** Date: 19/05/2016 
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    19/05/2016      xxxxx          
	*******************************/ 

CREATE PROCEDURE [dbo].[GetEngagementduedateisapproachingEmail]
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	DISTINCT B.CLNT_ENGMT_CD,B.CLNT_ENGMT_NM,B.ENGMT_EST_END_DT,(C.FST_NM+' '+C.LST_NM) [Engagement Lead],C.EMAIL_ID[Engagement Lead Email],
		(D.FST_NM+' '+D.LST_NM) [Analyst],D.EMAIL_ID[AnalystEmail],[dbo].[fnGetMasterLkpNameByID] (C.USER_TYP_KEY) [User Type]
FROM	CLNT_ENGMT_USER_ASGN		A
JOIN	CLNT_ENGMT					B
ON		B.CLNT_ENGMT_CD = A.CLNT_ENGMT_CD
JOIN	CLNT_ENGMT_USER_ASGN		E
ON		A.CLNT_ENGMT_CD		=	E.CLNT_ENGMT_CD	
JOIN	USER_PRFL					C
ON		C.USER_ID		= A.USER_ID
JOIN	USER_PRFL					D
ON		D.USER_ID		= A.USER_ID
WHERE  DATEDIFF(DAY,CONVERT(VARCHAR(10),GETDATE(),101),CONVERT(VARCHAR(10),B.ENGMT_EST_END_DT,101)) = 15


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[GetEngagementServiceduedatehaspassedEmials]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: GetEngagementServiceduedatehaspassedEmials
	** Desc: This procedure is Mail sent to assigned Analyst/Partner when Engagement Service  due date has passed.
	** Auth: Prasad varma
	** Date: 19/05/2016 
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    19/05/2016      xxxxx          
	*******************************/
CREATE PROCEDURE [dbo].[GetEngagementServiceduedatehaspassedEmials]
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	DISTINCT A.CLNT_ENGMT_CD,A.SECUR_SRVC_CD,C.SECUR_SRVC_NM,B.USER_TYP_KEY,
		(b.FST_NM + ' ' + b.LST_NM) [Analyst],A.SRVC_EST_STRT_DT,A.SRVC_EST_END_DT,B.EMAIL_ID [Analyst Email],
		(F.FST_NM + ' ' + F.LST_NM) [Lead Name]
		

FROM	CLNT_SECUR_SRVC_ENGMT   A
JOIN	SECUR_SRVC				C
ON		A.SECUR_SRVC_CD	= C.SECUR_SRVC_CD	
JOIN	dbo.CLNT_ENGMT_USER_ASGN	E
ON		A.CLNT_ENGMT_CD = E.CLNT_ENGMT_CD 
JOIN	USER_PRFL				F
ON		E.USER_ID		=	    F.USER_ID
JOIN	USER_CLNT_SRVC_ASGN		D
ON		A.SECUR_SRVC_CD	=		D.SECUR_SRVC_CD
AND		A.CLNT_ENGMT_CD		=   D.CLNT_ENGMT_CD
JOIN	USER_PRFL				B
ON		D.USER_ID		=	    B.USER_ID
WHERE  DATEDIFF(DAY,CONVERT(VARCHAR(10),A.SRVC_EST_END_DT,101),CONVERT(VARCHAR(10),GETDATE(),101)) = 1
END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END



-- Engagement procedure
GO
PRINT N'Creating [dbo].[GetEngDuedateapprochingEmailDeails]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: GetEngserveicePastDuedateEmailDeails
	** Desc: This procedure is USED TO FEATCH ENGAGEMENT ASSIGN SERVICE PASTDATE USERS LIST.
	** Auth: Prasad varma
	** Date: 19/05/2016 
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    19/05/2016      xxxxx          
	*******************************/
CREATE PROCEDURE [dbo].[GetEngDuedateapprochingEmailDeails]
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	B.CLNT_ENGMT_CD,B.CLNT_ENGMT_NM,B.ENGMT_EST_END_DT,C.USER_ID,(C.FST_NM+' '+C.LST_NM) UserName,C.EMAIL_ID
FROM	CLNT_ENGMT_USER_ASGN		A
JOIN	CLNT_ENGMT					B
ON		B.CLNT_ENGMT_CD = A.CLNT_ENGMT_CD
JOIN	USER_PRFL					C
ON		C.USER_ID		= A.USER_ID
WHERE   CONVERT(VARCHAR(10),B.ENGMT_EST_END_DT,101) < DATEADD(DAY, -15,CONVERT(VARCHAR(10),GETDATE(),101))

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[GetEngmtUploadWorkList]...';


GO

CREATE PROCEDURE [dbo].[GetEngmtUploadWorkList]
(
	@PiUserID			INTEGER,
	@OrgName			VARCHAR(150),
	@CLNT_ENGMT_CD		VARCHAR(30),	
	@CLNT_ENGMT_NM		VARCHAR(150),
	@SECUR_SRVC_NM		VARCHAR(150),
	@STRT_DT			VARCHAR(10),
	@END_DT				VARCHAR(10),
	@PiUserType			INTEGER,
	@PvcFlag			VARCHAR(1)
)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON

IF @PvcFlag = 'A' -- Analyst
BEGIN
	 SELECT DISTINCT H.ORG_NM [Client NAME],B.CLNT_ORG_KEY, A.CLNT_ENGMT_CD,B.CLNT_ENGMT_NM,D.SECUR_SRVC_NM,D.SECUR_SRVC_CD,
			A.FL_LCK_IND,G.USER_STRT_DT [Start Date],G.USER_END_DT [End Date],G.USER_ID,G.UPDT_DT UpdatedDate,
			CASE WHEN ISNULL(J.CLNT_ENGMT_CD,'')='' THEN 0 ELSE 1 END FileCount,A.CREAT_DT
	FROM	CLNT_SECUR_SRVC_ENGMT		A
	JOIN	CLNT_ENGMT					B
	ON		A.CLNT_ENGMT_CD			=	B.CLNT_ENGMT_CD
	JOIN	SECUR_SRVC					D
	ON		D.SECUR_SRVC_CD			=	A.SECUR_SRVC_CD
	JOIN	USER_CLNT_SRVC_ASGN			G
	ON		B.CLNT_ENGMT_CD			=	G.CLNT_ENGMT_CD
	AND		D.SECUR_SRVC_CD			=   G.SECUR_SRVC_CD
	JOIN	ORG							H
	ON		H.ORG_KEY				=	B.CLNT_ORG_KEY 
	LEFT JOIN APPL_FL_UPLOAD_LOG		J
	ON		B.CLNT_ENGMT_CD			=	J.CLNT_ENGMT_CD
	AND		D.SECUR_SRVC_CD			=	J.SECUR_SRVC_CD  
	WHERE	G.USER_ID				=   @PiUserID 
	AND		ISNULL(H.ORG_NM,'') LIKE CASE WHEN @OrgName = '' THEN	ISNULL(H.ORG_NM,'') ELSE '%' + @OrgName + '%' END
	AND		ISNULL(A.CLNT_ENGMT_CD,'') LIKE CASE WHEN @CLNT_ENGMT_CD = '' THEN	A.CLNT_ENGMT_CD ELSE '%' + @CLNT_ENGMT_CD +'%' END	
	AND		ISNULL(B.CLNT_ENGMT_NM,'') LIKE CASE WHEN @CLNT_ENGMT_NM = '' THEN	B.CLNT_ENGMT_NM ELSE '%' + @CLNT_ENGMT_NM + '%'   END	
	AND		ISNULL(D.SECUR_SRVC_NM,'') LIKE CASE WHEN @SECUR_SRVC_NM = '' THEN	D.SECUR_SRVC_NM ELSE '%' + @SECUR_SRVC_NM + '%' END
	AND		CONVERT(VARCHAR(20),G.USER_STRT_DT,101)	 = CASE WHEN @STRT_DT  = '' THEN CONVERT(VARCHAR(20),G.USER_STRT_DT,101)  ELSE @STRT_DT END
	AND		CONVERT(VARCHAR(20),G.USER_END_DT,101)	 = CASE WHEN @END_DT  = '' THEN CONVERT(VARCHAR(20),G.USER_END_DT,101)  ELSE @END_DT END
	ORDER BY G.UPDT_DT,A.CREAT_DT DESC
				 
END

IF @PvcFlag = 'E' -- Engmt Lead
BEGIN
	SELECT  DISTINCT H.ORG_NM [Client NAME],B.CLNT_ORG_KEY, A.CLNT_ENGMT_CD,B.CLNT_ENGMT_NM,D.SECUR_SRVC_NM,D.SECUR_SRVC_CD,
			A.FL_LCK_IND,A.SRVC_EST_STRT_DT [Start Date],A.SRVC_EST_END_DT [End Date],G.USER_ID,A.UPDT_DT UpdatedDate,
			CASE WHEN ISNULL(J.CLNT_ENGMT_CD,'')='' THEN 0 ELSE 1 END FileCount,A.CREAT_DT
	FROM	CLNT_SECUR_SRVC_ENGMT		A
	JOIN	CLNT_ENGMT					B
	ON		A.CLNT_ENGMT_CD			=	B.CLNT_ENGMT_CD
	JOIN	SECUR_SRVC					D
	ON		D.SECUR_SRVC_CD			=	A.SECUR_SRVC_CD
	JOIN	CLNT_ENGMT_USER_ASGN		G
	ON		B.CLNT_ENGMT_CD			=	G.CLNT_ENGMT_CD
	JOIN	ORG							H
	ON		H.ORG_KEY				=	B.CLNT_ORG_KEY
	LEFT JOIN APPL_FL_UPLOAD_LOG		J
	ON		B.CLNT_ENGMT_CD			=	J.CLNT_ENGMT_CD
	AND		D.SECUR_SRVC_CD			=	J.SECUR_SRVC_CD  
	WHERE	G.USER_ID				=		CASE WHEN @PiUserID =0		  THEN G.USER_ID ELSE @PiUserID END
	AND		ISNULL(H.ORG_NM,'')		   LIKE CASE WHEN @OrgName = ''		  THEN	ISNULL(H.ORG_NM,'') ELSE '%' + @OrgName +'%' END
	AND		ISNULL(A.CLNT_ENGMT_CD,'') LIKE CASE WHEN @CLNT_ENGMT_CD = '' THEN	A.CLNT_ENGMT_CD ELSE '%' + @CLNT_ENGMT_CD +'%' END	
	AND		ISNULL(B.CLNT_ENGMT_NM,'') LIKE CASE WHEN @CLNT_ENGMT_NM = '' THEN	B.CLNT_ENGMT_NM ELSE '%' + @CLNT_ENGMT_NM + '%' END	
	AND		ISNULL(D.SECUR_SRVC_NM,'') LIKE CASE WHEN @SECUR_SRVC_NM = '' THEN	D.SECUR_SRVC_NM ELSE '%' + @SECUR_SRVC_NM + '%' END
	AND		CONVERT(VARCHAR(20),A.SRVC_EST_STRT_DT,101)	 = CASE WHEN @STRT_DT  = '' THEN CONVERT(VARCHAR(20),A.SRVC_EST_STRT_DT,101)  ELSE @STRT_DT END
	AND		CONVERT(VARCHAR(20),A.SRVC_EST_END_DT,101)	 = CASE WHEN @END_DT  = ''  THEN CONVERT(VARCHAR(20),A.SRVC_EST_END_DT,101)  ELSE @END_DT END
	ORDER BY A.CREAT_DT DESC
				 
END

IF @PvcFlag = 'P' -- Partner Lead
BEGIN

	SELECT  DISTINCT H.ORG_NM [Client NAME],B.CLNT_ORG_KEY, A.CLNT_ENGMT_CD,B.CLNT_ENGMT_NM,D.SECUR_SRVC_NM,D.SECUR_SRVC_CD,
			A.FL_LCK_IND,A.SRVC_EST_STRT_DT [Start Date],A.SRVC_EST_END_DT [End Date],G.USER_ID,A.UPDT_DT UpdatedDate,
			CASE WHEN ISNULL(J.CLNT_ENGMT_CD,'')='' THEN 0 ELSE 1 END FileCount,A.CREAT_DT
	FROM	CLNT_SECUR_SRVC_ENGMT		A
	JOIN	CLNT_ENGMT					B
	ON		A.CLNT_ENGMT_CD			=	B.CLNT_ENGMT_CD
	JOIN	SECUR_SRVC					D
	ON		D.SECUR_SRVC_CD			=	A.SECUR_SRVC_CD
	JOIN	CLNT_ENGMT_USER_ASGN		G
	ON		B.CLNT_ENGMT_CD			=	G.CLNT_ENGMT_CD
	JOIN	ORG							H
	ON		H.ORG_KEY				=	B.CLNT_ORG_KEY
	CROSS APPLY dbo.FnSplit(G.SECUR_SRVC_LIST_CD,',') AS K
	LEFT JOIN APPL_FL_UPLOAD_LOG		J
	ON		B.CLNT_ENGMT_CD			=	J.CLNT_ENGMT_CD
	AND		D.SECUR_SRVC_CD			=	J.SECUR_SRVC_CD  
	WHERE	G.USER_ID				=	@PiUserID
	AND		D.SECUR_SRVC_CD			=   K.items
	AND		ISNULL(H.ORG_NM,'')		   LIKE CASE WHEN @OrgName = ''		  THEN	ISNULL(H.ORG_NM,'') ELSE '%' + @OrgName +'%' END
	AND		ISNULL(A.CLNT_ENGMT_CD,'') LIKE CASE WHEN @CLNT_ENGMT_CD = '' THEN	A.CLNT_ENGMT_CD ELSE '%' + @CLNT_ENGMT_CD +'%' END	
	AND		ISNULL(B.CLNT_ENGMT_NM,'') LIKE CASE WHEN @CLNT_ENGMT_NM = '' THEN	B.CLNT_ENGMT_NM ELSE '%' + @CLNT_ENGMT_NM + '%' END	
	AND		ISNULL(D.SECUR_SRVC_NM,'') LIKE CASE WHEN @SECUR_SRVC_NM = '' THEN	D.SECUR_SRVC_NM ELSE '%' + @SECUR_SRVC_NM + '%' END
	AND		CONVERT(VARCHAR(20),A.SRVC_EST_STRT_DT,101)	 = CASE WHEN @STRT_DT  = '' THEN CONVERT(VARCHAR(20),A.SRVC_EST_STRT_DT,101)  ELSE @STRT_DT END
	AND		CONVERT(VARCHAR(20),A.SRVC_EST_END_DT,101)	 = CASE WHEN @END_DT  = ''  THEN CONVERT(VARCHAR(20),A.SRVC_EST_END_DT,101)  ELSE @END_DT END
	ORDER BY A.CREAT_DT DESC
				 
END

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[GetEngserveicePastDuedateEmailDeails]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: GetEngserveicePastDuedateEmailDeails
	** Desc: This procedure is USED TO FEATCH ENGAGEMENT ASSIGN SERVICE PASTDATE USERS LIST.
	** Auth: Prasad varma
	** Date: 19/05/2016 
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    19/05/2016      xxxxx          
	*******************************/
CREATE PROCEDURE [dbo].[GetEngserveicePastDuedateEmailDeails]
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	A.USER_CLNT_SRVC_ASGN_KEY,A.USER_ID,(B.FST_NM+' '+B.LST_NM) UserName,B.EMAIL_ID,C.SECUR_SRVC_NM,A.SECUR_SRVC_CD,
		A.CLNT_ENGMT_CD
FROM	USER_CLNT_SRVC_ASGN		A
JOIN	USER_PRFL				B
ON		A.USER_ID		=	B.USER_ID
JOIN	SECUR_SRVC				C
ON		A.SECUR_SRVC_CD	= C.SECUR_SRVC_CD	 
WHERE	CONVERT(VARCHAR(10),A.USER_END_DT,101) < CONVERT(VARCHAR(10),GETDATE(),101)
END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[GetEntityIDByName]...';


GO
CREATE PROCEDURE [dbo].[GetEntityIDByName]
(
	@EntityType		VARCHAR(30),
	@EntityName     VARCHAR(30)


		
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	MSTR_LKP_KEY	
FROM	MSTR_LKP
WHERE	LKP_ENTY_TYP_NM = @EntityType
AND		LKP_ENTY_NM		= @EntityName	



END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[GetLeadDeatilsByEngandSerID]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: GetLeadDeatilsByEngandSerID
	** Desc: This procedure is Engagement Lead details.
	** Auth: Prasad varma
	** Date: 19/05/2016 
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    25/05/2016      xxxxx          
	*******************************/
CREATE PROCEDURE [dbo].[GetLeadDeatilsByEngandSerID]
@CLNT_ENGMT_CD	VARCHAR(30)

AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	C.USER_ID [Engagment LeadID],(C.FST_NM + ' ' + C.LST_NM) [Engagement Lead Name],dbo.fnGetMasterLkpNameByID(C.USER_TYP_KEY) UserType,C.EMAIL_ID [Engagement Lead email]
		
FROM	CLNT_ENGMT_USER_ASGN		A
JOIN	USER_PRFL					C
ON		C.USER_ID		=	    A.USER_ID	
WHERE	A.CLNT_ENGMT_CD	=	@CLNT_ENGMT_CD


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[GetLockallservicemail]...';


GO
/******************************
       ** File: IRMaaSAdmin.SQL   
       ** Name: GetLockallservicemail
       ** Desc: This procedure is The file for all services of engagement Uplodaed and services locked.
       ** Auth: Prasad varma
       ** Date: 27/05/2016 
       **************************
       ** Change History
       **************************
       ** PR   Date          Author                  Description     
       ** --   --------        -------                ------------------------------------
       ** 1    xx/xx/xxxx      xxxxx          
       *******************************/
CREATE PROCEDURE [dbo].[GetLockallservicemail]
@CLNT_ENGMT_CD       VARCHAR(30)

AS
BEGIN
BEGIN TRY 
SET NOCOUNT ON

DECLARE @SRVCOUNT INTEGER = 0
DECLARE @LOCKCOUNT INTEGER = 0


SELECT @SRVCOUNT =COUNT(CLNT_ENGMT_CD) FROM [dbo].[CLNT_SECUR_SRVC_ENGMT] WHERE CLNT_ENGMT_CD=@CLNT_ENGMT_CD

SELECT @LOCKCOUNT =COUNT(FL_LCK_IND) FROM CLNT_SECUR_SRVC_ENGMT WHERE CLNT_ENGMT_CD=@CLNT_ENGMT_CD AND FL_LCK_IND=1

IF @SRVCOUNT = @LOCKCOUNT
BEGIN

SELECT 1 AS RETVAL



END

IF @SRVCOUNT <> @LOCKCOUNT
BEGIN

SELECT 0 AS RETVAL



END
END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[GetUserDetailsByID]...';


GO
CREATE PROCEDURE [dbo].[GetUserDetailsByID]  
(  
       @UserID  INTEGER 
)  
AS  
BEGIN  
BEGIN TRY  
SET NOCOUNT ON  

  
SELECT A.[USER_ID] ID,USER_TYP_KEY,dbo.fnGetMasterLkpNameByID(USER_TYP_KEY) [User Type],B.ORG_NM [Organization Name],
	   A.ORG_KEY,FST_NM [First Name],MIDL_NM [Middle Name],LST_NM [Last Name],JOB_TITL_NM [Job Title],EMAIL_ID [EMAIL ID],
	   TEL_NBR [Phone Number],dbo.fnGetMasterLkpNameByID(A.ROW_STS_KEY)[Status], A.STS_COMMT_TXT,A.ROW_STS_KEY	
	     
FROM   USER_PRFL			 A
JOIN   ORG					 B
ON	   A.ORG_KEY		   = B.ORG_KEY
WHERE  A.[USER_ID]         = @UserID 
ORDER BY CASE WHEN ISNULL(A.UPDT_DT,'')='' THEN A.CREAT_DT ELSE A.UPDT_DT END DESC  
END TRY  
  
BEGIN CATCH  
  
  
    DECLARE @ErrorNumber INT = ERROR_NUMBER();  
    DECLARE @ErrorLine INT = ERROR_LINE();  
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
    DECLARE @ErrorState INT = ERROR_STATE();  
  
    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
  END CATCH  
-- COMMIT TRANSACTION  
END
GO
PRINT N'Creating [dbo].[GetUserDetailsByName]...';


GO
--DROP PROCEDURE GetUserDetailsByName
CREATE PROCEDURE [dbo].[GetUserDetailsByName]
(
       @UserID  VARCHAR(150)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT A.USER_ID,A.ORG_KEY,A.USER_TYP_KEY,[dbo].[fnGetMasterLkpNameByID](A.USER_TYP_KEY) USER_TYPE,
	   A.ROW_STS_KEY,A.FST_NM,A.LST_NM,A.MIDL_NM,A.JOB_TITL_NM,A.EMAIL_ID,A.TEL_NBR,A.LCK_IND,
	   A.LOGIN_ATMPT_CNT,A.LST_LOGIN_DT,A.PSWD_RSET_DT,A.CREAT_DT,A.USER_VERF_IND,MAC_ADR_NM,
	   B.ROW_STS_KEY ORG_STS_KEY,B.ORG_NM 
FROM   USER_PRFL	  A
JOIN    ORG           B
ON      A.ORG_KEY   = B.ORG_KEY 
WHERE  A.EMAIL_ID                   = @UserID
END TRY

BEGIN CATCH


    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[GetUserPermissionsByName]...';


GO
CREATE PROCEDURE [dbo].[GetUserPermissionsByName]
(
       @UserKey  INTEGER
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

      SELECT A.PERMSN_KEY,A.PERMSN_NM,A.PERMSN_DESC,A.DSPL_TXT,C.CHLD_XST_IND,A.SEQ_ORDR,
             D.PERMSN_KEY ModuleID,D.PERMSN_NM ModuleName,C.PERMSN_KEY MenuID,C.PERMSN_NM MenuName,
             B.PERMSN_KEY SubmenuID,B.PERMSN_NM SubmenuName
      FROM   PERMSN                 A
      JOIN   PERMSN_GRP_ASSOC       E
      ON     A.PERMSN_KEY         = E.PERMSN_KEY
      JOIN   PERMSN                 B
      ON     E.SUB_MNU_ID         = B.PERMSN_KEY
      AND     B.PERMSN_TYP_KEY     = 6
      JOIN   PERMSN                 C
      ON     E.MNU_ID             = C.PERMSN_KEY
      AND    C.PERMSN_TYP_KEY     = 5
      JOIN   PERMSN                 D
      ON     E.MDUL_ID            = D.PERMSN_KEY
      AND    D.PERMSN_TYP_KEY     = 4
      JOIN   APPL_ROLE_PERMSN_GRP   F
      ON     E.PERMSN_GRP_KEY     = F.PERMSN_GRP_KEY
      AND     F.ROW_STS_KEY               = 1
      JOIN   USER_APPL_ROLE         G
      ON     F.APPL_ROLE_KEY      = G.APPL_ROLE_KEY
      AND     G.ROW_STS_KEY               = 1
         JOIN   APPL_ROLE                       H
      ON     H.APPL_ROLE_KEY      = G.APPL_ROLE_KEY
      AND     G.ROW_STS_KEY               = 1
         AND  H.ROW_STS_KEY               = 1
         JOIN PERMSN_GRP                       I
         ON   E.PERMSN_GRP_KEY      = I.PERMSN_GRP_KEY
         AND  I.ROW_STS_KEY               = 1
      WHERE  A.ROW_STS_KEY        = 1
         AND  E.ROW_STS_KEY               = 1
      AND    G.USER_ID            = @UserKey
      ORDER BY  C.PERMSN_KEY,B.PERMSN_KEY,A.SEQ_ORDR

END TRY

BEGIN CATCH
    IF @@TRANCOUNT > 0
    ROLLBACK TRANSACTION;

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[GetUserRolenamesByID]...';


GO
CREATE PROCEDURE [dbo].[GetUserRolenamesByID]  
(  
       @UserID  INTEGER
)  
AS  
BEGIN  
BEGIN TRY  
SET NOCOUNT ON  


SELECT D.APPL_ROLE_KEY,D.[APPL_ROLE_NM]
FROM   USER_APPL_ROLE	     C
JOIN   [APPL_ROLE]			 D
ON	   C.APPL_ROLE_KEY     = D.APPL_ROLE_KEY
WHERE  C.[USER_ID]	       = @UserID
  
  
END TRY  
  
BEGIN CATCH  
  
  
    DECLARE @ErrorNumber INT = ERROR_NUMBER();  
    DECLARE @ErrorLine INT = ERROR_LINE();  
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
    DECLARE @ErrorState INT = ERROR_STATE();  
  
    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
  END CATCH  
-- COMMIT TRANSACTION  
END
GO
PRINT N'Creating [dbo].[GetUserSecurityDetailsByName]...';


GO
--DROP PROCEDURE GetUserSecurityDetailsByName
CREATE PROCEDURE [dbo].[GetUserSecurityDetailsByName]
(
       @UserID  INTEGER
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT USER_SECUR_DTL_KEY,[dbo].[fnGetMasterLkpNameByID](SECUR_QUES_KEY) SECUR_QUES,
	   SECUR_QUES_KEY,ANS_TXT,SEQ_ORDR_NBR
FROM   USER_SECUR_DTL
WHERE  USER_ID                           = @UserID

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[GetUserSessLogByID]...';


GO
/******************************
       ** File: IRMaaSAdmin.SQL   
       ** Name: GetUserSessLogByID
       ** Desc: This procedure fetch data from USER_SESS_LOG table
       ** Auth: Prasad varma
       ** Date: 22/4/2016
       **************************
       ** Change History
       **************************
       ** PR   Date          Author                  Description     
       ** --   --------        -------                ------------------------------------
       ** 1    00/00/1999      xxxxx          
       *******************************/


CREATE PROCEDURE [dbo].[GetUserSessLogByID]  
(  
       @EMAIL_ID  VARCHAR(150) 
)  
AS  
BEGIN  
BEGIN TRY  
SET NOCOUNT ON  

  
	SELECT USER_SESS_INFO_KEY,USER_ID,EMAIL_ID,SESS_ID,LST_ACT_DT          
	FROM   dbo.USER_SESS_LOG
	WHERE  EMAIL_ID = @EMAIL_ID  


END TRY  
  
BEGIN CATCH  
  
  
    DECLARE @ErrorNumber INT = ERROR_NUMBER();  
    DECLARE @ErrorLine INT = ERROR_LINE();  
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
    DECLARE @ErrorState INT = ERROR_STATE();  
  
    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
  END CATCH  
-- COMMIT TRANSACTION  
END
GO
PRINT N'Creating [dbo].[INS_APPL_FL_UPLOAD_LOG]...';


GO

  
 CREATE PROCEDURE [dbo].[INS_APPL_FL_UPLOAD_LOG](      
 @ROW_STS_KEY            INTEGER,  
 @ORG_KEY				 INTEGER,
 @CLNT_ENGMT_CD          VARCHAR(30),  
 @SECUR_SRVC_CD          VARCHAR(10),
 @SRC_KEY				 INTEGER,  
 @DOC_TYP_KEY            INTEGER,
 @UPLOAD_USER_ID         INTEGER,
 @FL_NM					 VARCHAR(150),
 @FL_FLDR_PTH			 VARCHAR(500),  
 @FL_COMMT				 VARCHAR(1000),
 @FL_STS_KEY			 INTEGER
 
   
 )  
 AS  
 BEGIN  
  BEGIN TRY  
  
  SET NOCOUNT ON  
  
      
   INSERT APPL_FL_UPLOAD_LOG(ROW_STS_KEY,ORG_KEY,CLNT_ENGMT_CD,SECUR_SRVC_CD,
   SRC_KEY,DOC_TYP_KEY,UPLOAD_USER_ID,FL_NM,FL_FLDR_PTH,FL_COMMT,FL_UPLOAD_DT,FL_STS_KEY) VALUES  
   (@ROW_STS_KEY,@ORG_KEY,@CLNT_ENGMT_CD,@SECUR_SRVC_CD,
   @SRC_KEY,@DOC_TYP_KEY,@UPLOAD_USER_ID,@FL_NM,@FL_FLDR_PTH,@FL_COMMT,GETDATE(),@FL_STS_KEY)  
  
    SELECT  SCOPE_IDENTITY() AS RETVAL 
  
  END TRY  
  
  BEGIN CATCH  
  
  
   DECLARE @ErrorNumber INT = ERROR_NUMBER();  
   DECLARE @ErrorLine INT = ERROR_LINE();  
   DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
   DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
   DECLARE @ErrorState INT = ERROR_STATE();  
  
   PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
   PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
   RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
    END CATCH  
    
 END
GO
PRINT N'Creating [dbo].[INS_APPL_ROLE]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: INS_APPL_ROLE
	** Desc: This procedure insert data into APPL_ROLE table
	** Auth: Prasad varma
	** Date: 13/4/2016
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    00/00/1999      xxxxx          
	*******************************/

	CREATE PROCEDURE [dbo].[INS_APPL_ROLE](
	@ROW_STS_KEY          INTEGER,
	@APPL_ROLE_NM         VARCHAR(100),
	@APPL_ROLE_DESC       VARCHAR(1000),
	@CREAT_USER_ID        INTEGER,
	@STS_COMMT_TXT		   TEXT  


	)
	AS
	BEGIN
		BEGIN TRY

		SET NOCOUNT ON

			INSERT APPL_ROLE(ROW_STS_KEY,APPL_ROLE_NM, APPL_ROLE_DESC, CREAT_DT,CREAT_USER_ID, UPDT_DT, UPDT_USER_ID,STS_COMMT_TXT ) VALUES
			(@ROW_STS_KEY,@APPL_ROLE_NM,@APPL_ROLE_DESC,GETDATE() ,@CREAT_USER_ID,GETDATE() ,@CREAT_USER_ID,@STS_COMMT_TXT)

			SELECT SCOPE_IDENTITY() AS RETVAL

		END TRY

		BEGIN CATCH
			

			DECLARE @ErrorNumber INT = ERROR_NUMBER();
			DECLARE @ErrorLine INT = ERROR_LINE();
			DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
			DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
			DECLARE @ErrorState INT = ERROR_STATE();

			PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
			PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

			RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
		  END CATCH
		
	END;
GO
PRINT N'Creating [dbo].[INS_APPL_ROLE_PERMSN_GRP]...';


GO
CREATE PROCEDURE [dbo].[INS_APPL_ROLE_PERMSN_GRP](
	
	@APPL_ROLE_KEY				INTEGER,
	@PERMSN_GRP_KEY				INTEGER,
	@ROW_STS_KEY				INTEGER,
	@CREAT_USER_ID				INTEGER,
	@FLAG						CHAR(1)
	

	)
	AS
	BEGIN
	BEGIN TRY
	SET NOCOUNT ON
		    
		    IF @FLAG = 'I'
            BEGIN

			INSERT APPL_ROLE_PERMSN_GRP(APPL_ROLE_KEY,PERMSN_GRP_KEY,ROW_STS_KEY,CREAT_USER_ID,CREAT_DT) VALUES
			(@APPL_ROLE_KEY,@PERMSN_GRP_KEY,@ROW_STS_KEY,@CREAT_USER_ID,GETDATE())
			
			SELECT SCOPE_IDENTITY() AS RETVAL
			
			END
            
            IF @FLAG = 'D'
            
            BEGIN 
			
			DELETE FROM APPL_ROLE_PERMSN_GRP WHERE APPL_ROLE_KEY = @APPL_ROLE_KEY
			
			SELECT @@ROWCOUNT RETVAL
                  
            END

		END TRY

		BEGIN CATCH
			

			DECLARE @ErrorNumber INT = ERROR_NUMBER();
			DECLARE @ErrorLine INT = ERROR_LINE();
			DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
			DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
			DECLARE @ErrorState INT = ERROR_STATE();

			PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
			PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

			RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);

		  END CATCH
		
	END
GO
PRINT N'Creating [dbo].[INS_CLNT_ENGMT]...';


GO
/******************************  
 ** File: IRMaaSAdmin.SQL     
 ** Name: INS_CLNT_ENGMT  
 ** Desc: This procedure insert data into CLNT_ENGMT table  
 ** Auth: Prasad varma  
 ** Date: 27/4/2016  
 **************************  
 ** Change History  
 **************************  
 -- ALTER SECUR_PKG_KEY integer name and data type changed
   as SECUR_PKG_CD varchar(10)

** PR   Date         Author                  Description   
 ** --   --------        -------                ------------------------------------  
 ** 1    00/00/1999      xxxxx            
 *******************************/  
  
 CREATE PROCEDURE [dbo].[INS_CLNT_ENGMT](      
 @CLNT_ORG_KEY           INTEGER,  
 @SECUR_PKG_CD           VARCHAR(10),  
 @ENGMT_STS_KEY          INTEGER,  
 @ROW_STS_KEY            INTEGER,  
 @CLNT_ENGMT_CD          VARCHAR(30),  
 @CLNT_ENGMT_NM          VARCHAR(150),  
 @AGR_DT                 DATETIME,  
 @ENGMT_STRT_DT          DATETIME,     
 @ENGMT_EST_END_DT       DATETIME,    
 @CLNT_ENGMT_DESC        VARCHAR(1000), 
 @ENGMT_COMMT              TEXT,
 @CREAT_USER_ID          INTEGER
   
 )  
 AS  
 BEGIN  
  BEGIN TRY  
  
  SET NOCOUNT ON  
  
    
  
   INSERT CLNT_ENGMT(CLNT_ORG_KEY,SECUR_PKG_CD,ENGMT_STS_KEY,ROW_STS_KEY,CLNT_ENGMT_CD,CLNT_ENGMT_NM,AGR_DT,
   ENGMT_STRT_DT,ENGMT_EST_END_DT,CLNT_ENGMT_DESC,ENGMT_COMMT,CREAT_DT,CREAT_USER_ID) VALUES  
   (@CLNT_ORG_KEY,@SECUR_PKG_CD,@ENGMT_STS_KEY,@ROW_STS_KEY,@CLNT_ENGMT_CD,@CLNT_ENGMT_NM,@AGR_DT,
   @ENGMT_STRT_DT,@ENGMT_EST_END_DT,@CLNT_ENGMT_DESC,@ENGMT_COMMT,GETDATE(),@CREAT_USER_ID)  
  
    SELECT @@ROWCOUNT AS RETVAL 
  
  END TRY  
  
  BEGIN CATCH  
  
  
   DECLARE @ErrorNumber INT = ERROR_NUMBER();  
   DECLARE @ErrorLine INT = ERROR_LINE();  
   DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
   DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
   DECLARE @ErrorState INT = ERROR_STATE();  
  
   PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
   PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
   RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
    END CATCH  
    
 END
GO
PRINT N'Creating [dbo].[INS_CLNT_ENGMT_USER_ASGN]...';


GO
/******************************
       ** File: IRMaaSAdmin.SQL   
       ** Name: INS_CLNT_ENGMT_USER_ASGN
       ** Desc: This procedure insert data into CLNT_ENGMT_USER_ASGN table
       ** Auth: Prasad varma
       ** Date: 20/4/2016
       **************************
       ** Change History
       **************************
       ** PR   Date          Author                  Description     
       ** --   --------        -------                ------------------------------------
       ** 1    00/00/1999      xxxxx          

       **************************************/

       CREATE PROCEDURE [dbo].[INS_CLNT_ENGMT_USER_ASGN](
       @ROW_STS_KEY           INTEGER,
       @CLNT_ENGMT_CD         VARCHAR(30),
       @USER_ID               INTEGER,
	   @SRV_LST_CD			  VARCHAR(150), 
       @CREAT_USER_ID         INTEGER
       
       )

       AS
       BEGIN
              BEGIN TRY

              SET NOCOUNT ON

                  INSERT CLNT_ENGMT_USER_ASGN(ROW_STS_KEY,CLNT_ENGMT_CD ,USER_ID,SECUR_SRVC_LIST_CD,CREAT_DT,CREAT_USER_ID) VALUES
                     (@ROW_STS_KEY,@CLNT_ENGMT_CD,@USER_ID,@SRV_LST_CD,GETDATE(),@CREAT_USER_ID)

                      SELECT @@ROWCOUNT AS RETVAL 

              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END
GO
PRINT N'Creating [dbo].[INS_CLNT_REL_ENGMT_INDENTIFIER]...';


GO
/******************************  
 ** File: IRMaaSAdmin.SQL     
 ** Name: INS_CLNT_REL_ENGMT_INDENTIFIER  
 ** Desc: This procedure insert data into CLNT_REL_ENGMT_INDENTIFIER table  \ source system insert
 ** Auth: Prasad varma  
 ** Date: 27/4/2016  
 **************************  
 ** Change History  
 **************************  
 ** PR   Date         Author                  Description   
 ** --   --------        -------                ------------------------------------  
 ** 1    00/00/1999      xxxxx            
 *******************************/  
  
 CREATE PROCEDURE [dbo].[INS_CLNT_REL_ENGMT_INDENTIFIER](  
 @CLNT_ENGMT_CD         VARCHAR(30),  
 @SRC_KEY                INTEGER,  
 @SRC_REL_ENGMT_ID       VARCHAR(150),  
 @CREAT_USER_ID          INTEGER
   
 )  
 AS  
 BEGIN  
  BEGIN TRY  
  
  SET NOCOUNT ON  
  
    
  
   INSERT CLNT_REL_ENGMT_ID(CLNT_ENGMT_CD,ROW_STS_KEY,SRC_KEY,SRC_REL_ENGMT_ID,CREAT_DT, CREAT_USER_ID) VALUES  
   (@CLNT_ENGMT_CD,1,@SRC_KEY,@SRC_REL_ENGMT_ID,GETDATE(),@CREAT_USER_ID)  
  
    SELECT @@ROWCOUNT AS RETVAL  
  
  END TRY  
  
  BEGIN CATCH  
  
  
   DECLARE @ErrorNumber INT = ERROR_NUMBER();  
   DECLARE @ErrorLine INT = ERROR_LINE();  
   DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
   DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
   DECLARE @ErrorState INT = ERROR_STATE();  
  
   PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
   PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
   RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
    END CATCH  
    
 END
GO
PRINT N'Creating [dbo].[INS_CLNT_SECUR_SRVC_ENGMT]...';


GO
/******************************  
 ** File: IRMaaSAdmin.SQL     
 ** Name: INS_CLNT_SECUR_SRVC_ENGMT  
 ** Desc: This procedure insert data into CLNT_SECUR_SRVC_ENGMT table  
 ** Auth: Prasad varma  
 ** Date: 27/4/2016  
 **************************  
 ** Change History  
 **************************  
 ** PR   Date         Author                  Description   
 ** --   --------        -------                ------------------------------------  
 ** 1    00/00/1999      xxxxx            
 *******************************/  
  
 CREATE PROCEDURE [dbo].[INS_CLNT_SECUR_SRVC_ENGMT](  
 @CLNT_ENGMT_CD         VARCHAR(30),  
 @SECUR_SRVC_CD         VARCHAR(10), 
 @SRVC_ENGMT_STS_KEY    INTEGER,  
 @ROW_STS_KEY           INTEGER,   
 @SRVC_EST_STRT_DT      DATETIME,
 @SRVC_EST_END_DT       DATETIME,
 @FL_LCK_IND			INTEGER,
 @CREAT_USER_ID         INTEGER
   
 )  
 AS  
 BEGIN  
  BEGIN TRY  
  
  SET NOCOUNT ON  
  
    
  
   INSERT CLNT_SECUR_SRVC_ENGMT(CLNT_ENGMT_CD,SECUR_SRVC_CD,SRVC_ENGMT_STS_KEY,ROW_STS_KEY,
    SRVC_EST_STRT_DT,SRVC_EST_END_DT,CREAT_DT,FL_LCK_IND,CREAT_USER_ID) VALUES  
   (@CLNT_ENGMT_CD,@SECUR_SRVC_CD,@SRVC_ENGMT_STS_KEY,@ROW_STS_KEY,
    @SRVC_EST_STRT_DT,@SRVC_EST_END_DT,GETDATE(),@FL_LCK_IND,@CREAT_USER_ID ) 
  
    SELECT @@ROWCOUNT AS RETVAL  
  
  END TRY  
  
  BEGIN CATCH  
  
  
   DECLARE @ErrorNumber INT = ERROR_NUMBER();  
   DECLARE @ErrorLine INT = ERROR_LINE();  
   DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
   DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
   DECLARE @ErrorState INT = ERROR_STATE();  
  
   PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
   PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
   RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
    END CATCH  
    
 END
GO
PRINT N'Creating [dbo].[INS_EngagementAssignUsers]...';


GO
/******************************  
 ** File: IRMaaSAdmin.SQL     
 ** Name: INS_EngagementAssignUsers  
 ** Desc: This procedure insert data into CLNT_ENGMT_USER_ASGN table  
 ** Auth: Prasad varma  
 ** Date: 27/4/2016  
 **************************  
 ** Change History  
 **************************  
 ** PR   Date         Author                  Description   
 ** --   --------        -------                ------------------------------------  
 ** 1    00/00/1999      xxxxx            
 *******************************/  
  
 CREATE PROCEDURE [dbo].[INS_EngagementAssignUsers](  
 @CLNT_ENGMT_CD          VARCHAR(30),  
 @USER_ID                INTEGER,  
 @APPL_ROLE_KEY          INTEGER,  
 @CREAT_USER_ID          INTEGER
   
 )  
 AS  
 BEGIN  
  BEGIN TRY  
  
  SET NOCOUNT ON  
  
    
  
   INSERT CLNT_ENGMT_USER_ASGN(CLNT_ENGMT_CD,USER_ID,CREAT_DT,CREAT_USER_ID) VALUES  
   (@CLNT_ENGMT_CD,@USER_ID,GETDATE(),@CREAT_USER_ID)  
  
    SELECT @@ROWCOUNT AS RETVAL 
  
  END TRY  
  
  BEGIN CATCH  
  
  
   DECLARE @ErrorNumber INT = ERROR_NUMBER();  
   DECLARE @ErrorLine INT = ERROR_LINE();  
   DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
   DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
   DECLARE @ErrorState INT = ERROR_STATE();  
  
   PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
   PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
   RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
    END CATCH  
    
 END
GO
PRINT N'Creating [dbo].[INS_ETL_FL_UPLOAD_LOG]...';


GO

  
 CREATE PROCEDURE [dbo].[INS_ETL_FL_UPLOAD_LOG](      
 @ORG_KEY				 INTEGER,
 @CLNT_ENGMT_CD          VARCHAR(30),  
 @SECUR_SRVC_CD          VARCHAR(10),
 @SRC_KEY				 INTEGER,  
 @FL_STS_KEY             INTEGER,
 @UPLOAD_USER_ID         INTEGER,
 @FL_NM					 VARCHAR(150),
 @FL_FLDR_PTH			 VARCHAR(500),  
 @FL_STS_COMMT			 VARCHAR(1000) 
 
   
 )  
 AS  
 BEGIN  
  BEGIN TRY  
  
  SET NOCOUNT ON  
  
      
   INSERT ETL_FL_UPLOAD_LOG(ORG_KEY,CLNT_ENGMT_CD,SECUR_SRVC_CD,
   SRC_KEY,FL_STS_KEY,UPLOAD_USER_ID,FL_NM,FL_FLDR_PTH,FL_STS_COMMT,FL_UPLOAD_DT) VALUES  
   (@ORG_KEY,@CLNT_ENGMT_CD,@SECUR_SRVC_CD,
   @SRC_KEY,@FL_STS_KEY,@UPLOAD_USER_ID,@FL_NM,@FL_FLDR_PTH,@FL_STS_COMMT,GETDATE())  
  
    SELECT @@ROWCOUNT AS RETVAL 
  
  END TRY  
  
  BEGIN CATCH  
  
  
   DECLARE @ErrorNumber INT = ERROR_NUMBER();  
   DECLARE @ErrorLine INT = ERROR_LINE();  
   DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
   DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
   DECLARE @ErrorState INT = ERROR_STATE();  
  
   PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
   PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
   RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
    END CATCH  
    
 END
GO
PRINT N'Creating [dbo].[INS_MSTR_LKP]...';


GO
/******************************
       ** File: IRMaaSAdmin.SQL   
       ** Name: INS_MSTR_LKP
       ** Desc: This procedure insert data into MSTR_LKP table
       ** Auth: Prasad varma
       ** Date: 19/4/2016
       **************************
       ** Change History
       **************************
       ** PR   Date          Author                  Description     
       ** --   --------        -------                ------------------------------------
       ** 1    00/00/1999      xxxxx          
       *******************************/

CREATE PROCEDURE [dbo].[INS_MSTR_LKP]
(
       @LKP_ENTY_TYP_NM     VARCHAR(500),
       @LKP_ENTY_NM         VARCHAR(500),
       @LKP_ENTY_DESC             VARCHAR(100),
       @CREAT_USER_ID             INTEGER


       )
       AS
       BEGIN
              BEGIN TRY

              SET NOCOUNT ON

              

                     INSERT MSTR_LKP(LKP_ENTY_TYP_NM,LKP_ENTY_NM,LKP_ENTY_DESC,CREAT_DT,CREAT_USER_ID) VALUES
                     (@LKP_ENTY_TYP_NM,@LKP_ENTY_NM,@LKP_ENTY_DESC,GETDATE(),@CREAT_USER_ID)

                     SELECT SCOPE_IDENTITY() AS RETVAL

              END TRY

              BEGIN CATCH


                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END;
GO
PRINT N'Creating [dbo].[INS_ORG]...';


GO
/******************************  
 ** File: IRMaaSAdmin.SQL     
 ** Name: INS_ORG  
 ** Desc: This procedure insert data into ORG table  
 ** Auth: Prasad varma  
 ** Date: 13/4/2016  
 **************************  
 ** Change History  
 **************************  
 ** PR   Date         Author                  Description   
 ** --   --------        -------                ------------------------------------  
 ** 1    00/00/1999      xxxxx            
 *******************************/  
  
 CREATE PROCEDURE [dbo].[INS_ORG](  
 @PAR_ORG_KEY          INTEGER,  
 @ORG_TYP_KEY          INTEGER,  
 @ORG_INDUS_KEY        INTEGER,  
 @ROW_STS_KEY          INTEGER,  
 @ORG_NM               VARCHAR(150),  
 @STR_ADR_1            VARCHAR(255),  
 @STR_ADR_2            VARCHAR(255),  
 @CTY_NM               VARCHAR(255),  
 @ST_NM                VARCHAR(255),  
 @CNTRY_NM             VARCHAR(255),  
 @PST_CD               VARCHAR(20),  
 @ORG_DESC_TXT         VARCHAR(1000),  
 @CREAT_USER_ID        INTEGER ,
 @STS_COMMT_TXT		   TEXT       
  
  
 )  
 AS  
 BEGIN  
  BEGIN TRY  
  
  SET NOCOUNT ON  
  
    
  
   INSERT ORG(PAR_ORG_KEY, ORG_TYP_KEY, ORG_INDUS_KEY, ROW_STS_KEY, ORG_NM , STR_ADR_1, STR_ADR_2,CTY_NM ,ST_NM, CNTRY_NM ,  
   PST_CD,ORG_DESC, CREAT_DT,CREAT_USER_ID,STS_COMMT_TXT) VALUES  
   (CASE WHEN @PAR_ORG_KEY=0 THEN NULL ELSE @PAR_ORG_KEY END, @ORG_TYP_KEY,@ORG_INDUS_KEY,@ROW_STS_KEY,@ORG_NM,@STR_ADR_1,@STR_ADR_2,@CTY_NM,@ST_NM,@CNTRY_NM,@PST_CD,@ORG_DESC_TXT,  
   GETDATE(),@CREAT_USER_ID,@STS_COMMT_TXT)  
  
   SELECT SCOPE_IDENTITY() AS RETVAL  
  
  END TRY  
  
  BEGIN CATCH  
  
  
   DECLARE @ErrorNumber INT = ERROR_NUMBER();  
   DECLARE @ErrorLine INT = ERROR_LINE();  
   DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
   DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
   DECLARE @ErrorState INT = ERROR_STATE();  
  
   PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
   PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
   RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
    END CATCH  
    
 END
GO
PRINT N'Creating [dbo].[INS_ORG_RELID]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: INS_ORG_RELID
	** Desc: This procedure insert data into ORG_REL_ID table
	** Auth: Prasad varma
	** Date: 13/4/2016
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    00/00/1999      xxxxx          

	**************************************/

	CREATE PROCEDURE [dbo].[INS_ORG_RELID](
	@FLAG			  CHAR(1),
	@ORG_KEY          INTEGER,
	@SRC_KEY          INTEGER,
	@SRC_CLNT_ID      VARCHAR(150),
	@CREAT_USER_ID    INTEGER  

	)
	AS
	BEGIN
		BEGIN TRY

		SET NOCOUNT ON

			IF @FLAG = 'I'
		BEGIN
			INSERT ORG_REL_ID(ORG_KEY,SRC_KEY,SRC_CLNT_ID,CREAT_DT,CREAT_USER_ID,ROW_STS_KEY ) VALUES
			(@ORG_KEY,@SRC_KEY,@SRC_CLNT_ID,GETDATE(),@CREAT_USER_ID,1)

			SELECT SCOPE_IDENTITY() AS RETVAL
		END
		
		IF @FLAG = 'D'
		BEGIN 
		 
			DELETE FROM ORG_REL_ID WHERE ORG_KEY = @ORG_KEY

			SELECT @@ROWCOUNT AS RETVAL
			
		END
				

		END TRY

		BEGIN CATCH
			
			DECLARE @ErrorNumber INT = ERROR_NUMBER();
			DECLARE @ErrorLine INT = ERROR_LINE();
			DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
			DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
			DECLARE @ErrorState INT = ERROR_STATE();

			PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
			PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

			RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
		  END CATCH
		
	END;
GO
PRINT N'Creating [dbo].[INS_PERMSN]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: INS_PERMSN
	** Desc: This procedure insert data into PERMSN table
	** Auth: Prasad varma
	** Date: 13/4/2016
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    00/00/1999      xxxxx          

	**************************************/

	CREATE PROCEDURE [dbo].[INS_PERMSN](
	@PAR_PERMSN_KEY          INTEGER,
	@PERMSN_TYP_KEY          INTEGER,
	@ROW_STS_KEY             INTEGER,
	@PERMSN_NM               VARCHAR(100),
	@PERMSN_DESC             VARCHAR(1000),
	@DSPL_TXT                VARCHAR(100),
	@CHLD_XST_IND            INTEGER,
	@SEQ_ORDR                INTEGER,
	@CREAT_USER_ID           INTEGER  

	)
	AS
	BEGIN
	    BEGIN TRY

		SET NOCOUNT ON

		
			INSERT PERMSN(PAR_PERMSN_KEY,PERMSN_TYP_KEY,ROW_STS_KEY,PERMSN_NM,PERMSN_DESC,DSPL_TXT,CHLD_XST_IND,
			SEQ_ORDR,CREAT_DT,CREAT_USER_ID) VALUES
			(@PAR_PERMSN_KEY,@PERMSN_TYP_KEY,@ROW_STS_KEY,@PERMSN_NM,@PERMSN_DESC,@DSPL_TXT,@CHLD_XST_IND,
			@SEQ_ORDR,GETDATE(),@CREAT_USER_ID)

			SELECT SCOPE_IDENTITY() AS RETVAL

		END TRY

		BEGIN CATCH
			
			DECLARE @ErrorNumber INT = ERROR_NUMBER();
			DECLARE @ErrorLine INT = ERROR_LINE();
			DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
			DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
			DECLARE @ErrorState INT = ERROR_STATE();

			PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
			PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

			RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
	   END CATCH
	   
	END;
GO
PRINT N'Creating [dbo].[INS_PERMSN_GRP]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: INS_PERMSN_GRP
	** Desc: This procedure insert data into PERMSN_GRP table
	** Auth: Prasad varma
	** Date: 13/4/2016
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    00/00/1999      xxxxx          

	**************************************/

	CREATE PROCEDURE [dbo].[INS_PERMSN_GRP](
	@ROW_STS_KEY          INTEGER,
	@PERMSN_GRP_NM        VARCHAR(100),
	@PERMSN_GRP_DESC      VARCHAR(1000),
	@CREAT_USER_ID        INTEGER,
	@STS_COMMT_TXT		  TEXT 

	)
	AS
	BEGIN
		BEGIN TRY

		SET NOCOUNT ON

		
			INSERT PERMSN_GRP(ROW_STS_KEY,PERMSN_GRP_NM,PERMSN_GRP_DESC,CREAT_DT,CREAT_USER_ID,STS_COMMT_TXT) VALUES
			(@ROW_STS_KEY,@PERMSN_GRP_NM,@PERMSN_GRP_DESC,GETDATE(),@CREAT_USER_ID,@STS_COMMT_TXT)

			SELECT SCOPE_IDENTITY() AS RETVAL

		END TRY

		BEGIN CATCH
			
			DECLARE @ErrorNumber INT = ERROR_NUMBER();
			DECLARE @ErrorLine INT = ERROR_LINE();
			DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
			DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
			DECLARE @ErrorState INT = ERROR_STATE();

			PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
			PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

			RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
		  END CATCH
		
	END;
GO
PRINT N'Creating [dbo].[INS_PERMSN_GRP_ASSOC]...';


GO
CREATE PROCEDURE [dbo].[INS_PERMSN_GRP_ASSOC](
	
	@PERMSN_GRP_KEY       INTEGER,
	@ROW_STS_KEY          INTEGER,
	@PERMSN_KEY           INTEGER,
	@MDUL_ID              INTEGER,
	@MNU_ID               INTEGER,
	@SUB_MNU_ID           INTEGER,
	@CREAT_USER_ID        INTEGER,  
	@FLAG				  CHAR(1)
	)
	AS
	BEGIN
		BEGIN TRY

		SET NOCOUNT ON

			 IF @FLAG = 'I'
            BEGIN

		
			INSERT PERMSN_GRP_ASSOC(PERMSN_GRP_KEY,ROW_STS_KEY,PERMSN_KEY,MDUL_ID,MNU_ID,SUB_MNU_ID,CREAT_DT,CREAT_USER_ID) VALUES
			(@PERMSN_GRP_KEY,@ROW_STS_KEY,@PERMSN_KEY,@MDUL_ID,@MNU_ID,@SUB_MNU_ID,GETDATE(),@CREAT_USER_ID)

			SELECT SCOPE_IDENTITY() AS RETVAL
			END
			
			
			IF @FLAG = 'D'
            
            BEGIN 
			
			DELETE FROM PERMSN_GRP_ASSOC WHERE PERMSN_GRP_KEY = @PERMSN_GRP_KEY
            SELECT @@ROWCOUNT AS RETVAL     
            END
			
		END TRY

		BEGIN CATCH
			
			DECLARE @ErrorNumber INT = ERROR_NUMBER();
			DECLARE @ErrorLine INT = ERROR_LINE();
			DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
			DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
			DECLARE @ErrorState INT = ERROR_STATE();

			PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
			PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

			RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
		  END CATCH
		
	END;
GO
PRINT N'Creating [dbo].[INS_USER_APPL_ROLE]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: INS_USER_APPL_ROLE
	** Desc: This procedure insert data into USER_APPL_ROLE table
	** Auth: Prasad varma
	** Date: 13/4/2016
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    00/00/1999      xxxxx          

	**************************************/

	CREATE PROCEDURE [dbo].[INS_USER_APPL_ROLE](
	@FLAG				  CHAR(1),
	@ROW_STS_KEY          INTEGER,
	@APPL_ROLE_KEY        INTEGER,
	@USER_ID              INTEGER,
	@CREAT_USER_ID        INTEGER  

	)
	AS
	BEGIN
		BEGIN TRY

		SET NOCOUNT ON

		IF @FLAG = 'I'
		BEGIN
			INSERT USER_APPL_ROLE(ROW_STS_KEY,APPL_ROLE_KEY,USER_ID,CREAT_DT,CREAT_USER_ID) VALUES
			(@ROW_STS_KEY,@APPL_ROLE_KEY,@USER_ID,GETDATE(),@CREAT_USER_ID)

			SELECT SCOPE_IDENTITY() AS RETVAL
		END
		
		IF @FLAG = 'D'
		BEGIN 
		 
			DELETE FROM USER_APPL_ROLE WHERE USER_ID = @USER_ID

			SELECT @@ROWCOUNT AS RETVAL
			
		END

		END TRY

		BEGIN CATCH
			
			DECLARE @ErrorNumber INT = ERROR_NUMBER();
			DECLARE @ErrorLine INT = ERROR_LINE();
			DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
			DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
			DECLARE @ErrorState INT = ERROR_STATE();

			PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
			PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

			RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
		  END CATCH
		
	END
GO
PRINT N'Creating [dbo].[INS_USER_CLNT_SRVC_ASGN]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: INS_CLNT_SECUR_SRVC_ENGMTR
	** Desc: This procedure insert data into CLNT_SECUR_SRVC_ENGMTR table
	** Auth: Prasad varma
	** Date: 20/4/2016
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    00/00/1999      xxxxx          

	**************************************/
	

	CREATE PROCEDURE [dbo].[INS_USER_CLNT_SRVC_ASGN](
	@ROW_STS_KEY				 INTEGER,
	@USER_ID					 INTEGER,
	@USER_STRT_DT				 DATETIME,
	@USER_END_DT				 DATETIME,
	@CREAT_USER_ID				 INTEGER,
	@SECUR_SRVC_CD				 VARCHAR(10),
	@CLNT_ENGMT_CD				 VARCHAR(30)
	
	)

	AS
	BEGIN
		BEGIN TRY

		SET NOCOUNT ON

		    INSERT USER_CLNT_SRVC_ASGN(ROW_STS_KEY	,USER_ID,USER_STRT_DT,USER_END_DT,CREAT_DT,CREAT_USER_ID,SECUR_SRVC_CD,CLNT_ENGMT_CD) VALUES
			(@ROW_STS_KEY,@USER_ID,@USER_STRT_DT,@USER_END_DT,GETDATE(),@CREAT_USER_ID,@SECUR_SRVC_CD,@CLNT_ENGMT_CD)

			 SELECT @@ROWCOUNT AS RETVAL 

		END TRY

		BEGIN CATCH
			
			DECLARE @ErrorNumber INT = ERROR_NUMBER();
			DECLARE @ErrorLine INT = ERROR_LINE();
			DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
			DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
			DECLARE @ErrorState INT = ERROR_STATE();

			PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
			PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

			RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
		  END CATCH
		
	END;
GO
PRINT N'Creating [dbo].[INS_USER_EMAIL_LOG]...';


GO
CREATE PROCEDURE [dbo].[INS_USER_EMAIL_LOG]
(
	@NTF_MSG_KEY		INTEGER,
	@USER_ID			INTEGER,
	@FROM_EMAIL_ID		VARCHAR(150),
	@TO_EMAIL_ID		TEXT,
	@CC_EMAIL_ID		TEXT,
	@BCC_EMAIL_ID		TEXT,
	@EMAIL_SND_DT		DATETIME,
	@EMAIL_MSG_SBJ_TXT	VARCHAR(255),
	@EMAIL_MSG_CNTN_TXT	TEXT,
	@SND_SUC_IND		INTEGER,
	@RESND_CNT			INTEGER,
	@ERR_DESC			VARCHAR(5000)
	
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

INSERT USER_EMAIL_LOG(NTF_MSG_KEY ,USER_ID,FROM_EMAIL_ID,TO_EMAIL_ID,CC_EMAIL_ID,BCC_EMAIL_ID,EMAIL_SND_DT,EMAIL_MSG_SBJ_TXT,EMAIL_MSG_CNTN_TXT,SND_SUC_IND,RESND_CNT,ERR_DESC) VALUES
(@NTF_MSG_KEY,@USER_ID,@FROM_EMAIL_ID,@TO_EMAIL_ID,@CC_EMAIL_ID,@BCC_EMAIL_ID,@EMAIL_SND_DT,@EMAIL_MSG_SBJ_TXT,@EMAIL_MSG_CNTN_TXT,@SND_SUC_IND,@RESND_CNT,@ERR_DESC)


SELECT SCOPE_IDENTITY() AS RETVAL

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[INS_USER_EVNT_LOG]...';


GO
/******************************
       ** File: IRMaaSAdmin.SQL   
       ** Name: INS_USER_EVNT_LOG
       ** Desc: This procedure INSERT  into USER_EVNT_LOG table
       ** Auth: Prasad varma
       ** Date: 22/4/2016
       **************************
       ** Change History
       **************************
       ** PR   Date          Author                  Description     
       ** --   --------        -------                ------------------------------------
       ** 1    00/00/1999      xxxxx          
       *******************************/
CREATE PROCEDURE [dbo].[INS_USER_EVNT_LOG]
(
	@USER_ID	        INTEGER,
	@ACT_NM  	        VARCHAR(100),
	@MDUL_NM	        VARCHAR(100),
	@EVNT_DT            DATETIME,
	@EVNT_DESC			VARCHAR(1000),
	@CLNT_ENGMT_CD		VARCHAR(30),
	@CLNT_SRVC_ENGMT_CD VARCHAR(150),
	@IPADR			    VARCHAR(20),
	@SFTW_INFO_TXT      VARCHAR(150),
	@FILL_TXT           TEXT
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

INSERT USER_EVNT_LOG(USER_ID,ACT_NM ,MDUL_NM,EVNT_DT ,EVNT_DESC,CLNT_ENGMT_CD,CLNT_SRVC_ENGMT_CD,IPADR,SFTW_INFO_TXT,FILL_TXT) VALUES
(@USER_ID,@ACT_NM ,@MDUL_NM,@EVNT_DT ,@EVNT_DESC,@CLNT_ENGMT_CD,@CLNT_SRVC_ENGMT_CD,@IPADR,@SFTW_INFO_TXT,@FILL_TXT)



SELECT SCOPE_IDENTITY() AS RETVAL

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[INS_USER_PRFL]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: INS_USER_PRFL
	** Desc: This procedure insert data into USER_PRFL table
	** Auth: Prasad varma
	** Date: 13/4/2016
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    00/00/1999      xxxxx          

	**************************************/

	CREATE PROCEDURE [dbo].[INS_USER_PRFL](
	@ORG_KEY            INTEGER,
	@USER_TYP_KEY       INTEGER,
	@ROW_STS_KEY        INTEGER, 
	@FST_NM             VARCHAR(150), 
	@LST_NM             VARCHAR(150), 
	@MIDL_NM            VARCHAR(150), 
	@JOB_TITL_NM        VARCHAR(150), 
	@EMAIL              VARCHAR(150), 
	@TEL_NBR            VARCHAR(20),
	@USER_VERF_IND		INTEGER, -- DEFAULT 0
	@LCK_IND            INTEGER, -- DEFAULT 0
	@LOGIN_ATMPT_CNT    INTEGER,
	@CREAT_USER_ID      INTEGER,
	@MAC_ADR_NM			VARCHAR(50),
	@STS_COMMT_TXT		TEXT 
	)

	AS
	BEGIN
		BEGIN TRY

		SET NOCOUNT ON

		    INSERT USER_PRFL(ORG_KEY,USER_TYP_KEY,ROW_STS_KEY,FST_NM,LST_NM,MIDL_NM,JOB_TITL_NM,EMAIL_ID,TEL_NBR,USER_VERF_IND,LCK_IND,LOGIN_ATMPT_CNT,
			CREAT_DT,CREAT_USER_ID,MAC_ADR_NM,STS_COMMT_TXT) VALUES
			(@ORG_KEY,@USER_TYP_KEY,@ROW_STS_KEY,@FST_NM,@LST_NM,@MIDL_NM,@JOB_TITL_NM,@EMAIL,@TEL_NBR,@USER_VERF_IND,@LCK_IND,@LOGIN_ATMPT_CNT,
			GETDATE(),@CREAT_USER_ID,@MAC_ADR_NM,@STS_COMMT_TXT)

			SELECT SCOPE_IDENTITY() AS RETVAL

		END TRY

		BEGIN CATCH
			
			DECLARE @ErrorNumber INT = ERROR_NUMBER();
			DECLARE @ErrorLine INT = ERROR_LINE();
			DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
			DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
			DECLARE @ErrorState INT = ERROR_STATE();

			PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
			PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

			RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
		  END CATCH
		
	END;
GO
PRINT N'Creating [dbo].[INS_USER_SECUR_DTL]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: INS_USER_SECUR_DTL
	** Desc: This procedure insert data into USER_SECUR_DTL table
	** Auth: Prasad varma
	** Date: 13/4/2016
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    00/00/1999      xxxxx          

	**************************************/

	CREATE PROCEDURE [dbo].[INS_USER_SECUR_DTL](
	@ROW_STS_KEY        INTEGER,
	@USER_ID			INTEGER,
	@SECUR_QUES_KEY     INTEGER,
	@ANS_TXT            VARCHAR(1000),
	@SEQ_ORDR_NBR       INTEGER,
	@CREAT_USER_ID      INTEGER
	)

	AS
	BEGIN
		BEGIN TRY

		SET NOCOUNT ON

			INSERT USER_SECUR_DTL(ROW_STS_KEY,USER_ID,SECUR_QUES_KEY,ANS_TXT,SEQ_ORDR_NBR,CREAT_DT,CREAT_USER_ID) VALUES
			(@ROW_STS_KEY,@USER_ID,@SECUR_QUES_KEY,@ANS_TXT,@SEQ_ORDR_NBR,GETDATE(),@CREAT_USER_ID)

			SELECT SCOPE_IDENTITY() AS RETVAL

		END TRY

		BEGIN CATCH
			IF @@TRANCOUNT > 0
			
			DECLARE @ErrorNumber INT = ERROR_NUMBER();
			DECLARE @ErrorLine INT = ERROR_LINE();
			DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
			DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
			DECLARE @ErrorState INT = ERROR_STATE();

			PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
			PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

			RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
		  END CATCH
		
	END;
GO
PRINT N'Creating [dbo].[INS_USER_SESS_LOG]...';


GO
CREATE PROCEDURE [dbo].[INS_USER_SESS_LOG]
(
	@USER_ID	INTEGER,
	@EMAIL_ID	VARCHAR(150),
	@SESS_ID	VARCHAR(500),
	@LST_ACT_DT DATETIME
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

INSERT USER_SESS_LOG(USER_ID,EMAIL_ID,SESS_ID,LST_ACT_DT) VALUES
(@USER_ID,@EMAIL_ID,@SESS_ID,@LST_ACT_DT)


SELECT SCOPE_IDENTITY() AS RETVAL

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[LIST_AppRole]...';


GO
CREATE PROCEDURE [dbo].[LIST_AppRole]
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	A.APPL_ROLE_KEY,A.ROW_STS_KEY,dbo.fnGetMasterLkpNameByID(A.ROW_STS_KEY) ROWSTATUS,A.APPL_ROLE_NM,A.APPL_ROLE_DESC,A.CREAT_DT,A.CREAT_USER_ID, 
		A.UPDT_DT,A.UPDT_USER_ID,(B.FST_NM+ ' ' +B.LST_NM) USERNAME,A.STS_COMMT_TXT
FROM	APPL_ROLE		  A
JOIN	USER_PRFL		  B
ON		A.CREAT_USER_ID	= B.USER_ID
WHERE	A.ROW_STS_KEY  <> 3
ORDER BY CASE WHEN ISNULL(A.UPDT_DT,'')='' THEN A.CREAT_DT ELSE A.UPDT_DT END DESC  

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[LIST_AppRoleByRoleID]...';


GO
/******************************
       ** File: IRMaaSAdmin.SQL   
       ** Name: LIST_AppRoleByRoleID
       ** Desc: This procedure GET data into APPL_ROLE table
       ** Auth: Prasad varma
       ** Date: 22/4/2016
       **************************
       ** Change History
       **************************
       ** PR   Date          Author                  Description     
       ** --   --------        -------                ------------------------------------
       ** 1    00/00/1999      xxxxx          
       *******************************/
CREATE PROCEDURE [dbo].[LIST_AppRoleByRoleID]
(
@APPL_ROLE_KEY  INTEGER
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

	SELECT	ROW_STS_KEY,APPL_ROLE_NM,APPL_ROLE_DESC,STS_COMMT_TXT 	
	FROM	APPL_ROLE		
	WHERE	APPL_ROLE_KEY = @APPL_ROLE_KEY 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[LIST_Country]...';


GO
--DROP PROCEDURE LIST_Country
CREATE PROCEDURE [dbo].[LIST_Country]
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT 	CNTRY_CD,CNTRY_NM
FROM   [CNTRY_CD]

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[LIST_EngagementdatauploadbyUserid]...';


GO

CREATE PROCEDURE [dbo].[LIST_EngagementdatauploadbyUserid]
(
       @UserID       INTEGER       
)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON


       SELECT dbo.fnGetParentOrgNameID(B.CLNT_ORG_KEY) [Client NAME],B.CLNT_ORG_KEY, A.CLNT_ENGMT_CD,B.CLNT_ENGMT_NM,D.SECUR_SRVC_NM,D.SECUR_SRVC_CD,
       A.FL_LCK_IND,G.USER_STRT_DT,G.USER_END_DT,G.USER_ID
       FROM   CLNT_SECUR_SRVC_ENGMT   A
       JOIN   CLNT_ENGMT                        B
       ON            A.CLNT_ENGMT_CD                   =      B.CLNT_ENGMT_CD
       JOIN   SECUR_SRVC                        D
       ON            D.SECUR_SRVC_CD                   =      A.SECUR_SRVC_CD
       JOIN   USER_CLNT_SRVC_ASGN        G
       ON            B.CLNT_ENGMT_CD                   =      G.CLNT_ENGMT_CD
       WHERE  G.USER_ID                         =   @UserID  


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[LIST_ManageEngagements]...';


GO
/******************************  
 ** File: IRMaaSAdmin.SQL     
 ** Name: LIST_ManageEngagements  
 ** Desc: This procedure get data from CLNT_ENGMT,ORG tables
** Auth: Prasad varma  
 ** Date: 3/5/2016  
 **************************  
 ** Change History  
 **************************  


** PR   Date         Author                  Description   
 ** --   --------        -------                ------------------------------------  
 ** 1    00/00/1999      xxxxx            
 *******************************/  

CREATE PROCEDURE [dbo].[LIST_ManageEngagements]
(
	  @UserID	 INTEGER,
	  @Flag		 VARCHAR(1)
)

      AS
      BEGIN
            BEGIN TRY

            SET NOCOUNT ON

			IF	@Flag = 'C'
			BEGIN
                  SELECT            A.CLNT_ENGMT_CD,A.CLNT_ENGMT_CD [Engagement Code],B.PAR_ORG_KEY,
									dbo.fnGetParentOrgNameID(B.PAR_ORG_KEY) [Parent Client Name],B.ORG_NM [Client Name],
                                    A.AGR_DT [Agreement Date],A.ENGMT_STRT_DT [Estimated Start Date],
                                    A.ENGMT_EST_END_DT [Estimated End Date],A.ENGMT_COMMT [Status],'' [Action],
									A.CREAT_DT,A.UPDT_DT
                  FROM              CLNT_ENGMT					  A
                  JOIN              ORG                           B
                  ON                A.CLNT_ORG_KEY    =   B.ORG_KEY
                  WHERE            	A.ROW_STS_KEY <> 3
                  ORDER BY    CASE WHEN ISNULL(A.UPDT_DT,'') = '' THEN A.CREAT_DT ELSE A.UPDT_DT END DESC
			END

			IF	@Flag = 'L'
			BEGIN
                  SELECT            A.CLNT_ENGMT_CD,A.CLNT_ENGMT_CD [Engagement Code],B.PAR_ORG_KEY,
									dbo.fnGetParentOrgNameID(B.PAR_ORG_KEY) [Parent Client Name],B.ORG_NM [Client Name],
                                    A.AGR_DT [Agreement Date],A.ENGMT_STRT_DT [Estimated Start Date],
                                    A.ENGMT_EST_END_DT [Estimated End Date],A.ENGMT_COMMT [Status],'' [Action],
									A.CREAT_DT,A.UPDT_DT
                  FROM              CLNT_ENGMT					  A
                  JOIN              ORG                           B
                  ON                A.CLNT_ORG_KEY    =   B.ORG_KEY
				  JOIN				CLNT_ENGMT_USER_ASGN		  C
				  ON				A.CLNT_ENGMT_CD	 =	  C.CLNT_ENGMT_CD
                  WHERE				 C.USER_ID         =   @UserID

				  AND				A.ROW_STS_KEY <> 3
                  ORDER BY    CASE WHEN ISNULL(A.UPDT_DT,'') = '' THEN A.CREAT_DT ELSE A.UPDT_DT END DESC
			END

            END TRY

            BEGIN CATCH
                  

                  DECLARE @ErrorNumber INT = ERROR_NUMBER();
                  DECLARE @ErrorLine INT = ERROR_LINE();
                  DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                  DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                  DECLARE @ErrorState INT = ERROR_STATE();

                  PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                  PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                  RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
              END CATCH
            
      END
GO
PRINT N'Creating [dbo].[LIST_MasterLookupByEntityType]...';


GO
--DROP PROCEDURE ListMasterlookByEntityType
CREATE PROCEDURE [dbo].[LIST_MasterLookupByEntityType]
(

@EntityType VARCHAR(200)

)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT MSTR_LKP_KEY,LKP_ENTY_TYP_NM , LKP_ENTY_NM , LKP_ENTY_DESC 
FROM   MSTR_LKP
WHERE  LKP_ENTY_TYP_NM =   @EntityType
ORDER BY LKP_ENTY_NM ASC

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[LIST_OrglistByUserType]...';


GO
/******************************
	** File: IRMaaSAdmin.SQL   
	** Name: LIST_OrglistByUserType
	** Desc: This procedure fetch  data into ORG table
	** Auth: Prasad varma
	** Date: 22/4/2016
	**************************
	** Change History
	**************************
	** PR   Date	        Author                  Description	
	** --   --------        -------                ------------------------------------
	** 1    00/00/1999      xxxxx          

	**************************************/

CREATE PROCEDURE [dbo].[LIST_OrglistByUserType]
(
      @UserType INT
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON
DECLARE @PiOrgType INTEGER = 0
	SELECT @PiOrgType = CASE WHEN @UserType = 16 THEN 8
							 WHEN @UserType = 17 THEN 9
							 WHEN @UserType = 18 THEN 10 END 
							 
      SELECT  ORG_KEY,ORG_NM
      FROM    ORG
      WHERE   ORG_TYP_KEY   = @PiOrgType
	  AND     ROW_STS_KEY    = 1

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[LIST_PermissionGroups]...';


GO
--DROP PROCEDURE LISTPERMSNGRP
CREATE PROCEDURE [dbo].[LIST_PermissionGroups]
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	A.PERMSN_GRP_KEY,A.ROW_STS_KEY,dbo.fnGetMasterLkpNameByID(A.ROW_STS_KEY) ROWSTATUS, A.PERMSN_GRP_NM,A.PERMSN_GRP_DESC,CONVERT(VARCHAR(10),A.UPDT_DT,101)UpdateDate,
		A.UPDT_USER_ID,dbo.fnGetUserNameByID(A.UPDT_USER_ID) USERNAME,CONVERT(VARCHAR(10),B.CREAT_DT,101)CreatedDate,B.CREAT_USER_ID,A.STS_COMMT_TXT
FROM	PERMSN_GRP		  A
JOIN	USER_PRFL		  B
ON		A.CREAT_USER_ID = B.USER_ID
WHERE	A.ROW_STS_KEY	<> 3
ORDER BY CASE WHEN ISNULL(A.UPDT_DT,'')='' THEN A.CREAT_DT ELSE A.UPDT_DT END DESC 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[LIST_PermissionGroupsByPermGropID]...';


GO
/******************************
       ** File: IRMaaSAdmin.SQL   
       ** Name: LIST_PermissionGroupsByPermGropID
       ** Desc: This procedure Fetch data into PERMSN_GRP table
       ** Auth: Prasad varma
       ** Date: 22/4/2016
       **************************
       ** Change History
       **************************
       ** PR   Date          Author                  Description     
       ** --   --------        -------                ------------------------------------
       ** 1    02/05/2016      xxxxx          
       *******************************/
CREATE PROCEDURE [dbo].[LIST_PermissionGroupsByPermGropID]
(
@PERMSN_GRP_KEY		INTEGER
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	PERMSN_GRP_KEY,ROW_STS_KEY,PERMSN_GRP_NM,PERMSN_GRP_DESC,STS_COMMT_TXT,dbo.fnGetMasterLkpNameByID(ROW_STS_KEY) ROWSTATUS	
FROM	PERMSN_GRP		
WHERE   PERMSN_GRP_KEY = @PERMSN_GRP_KEY  


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[LIST_PermissionGroupsByRole]...';


GO
--DROP PROCEDURE LIST_PermissionGroupsByRole
CREATE PROCEDURE [dbo].[LIST_PermissionGroupsByRole]
(
	@RoleID VARCHAR(500)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	DISTINCT A.PERMSN_GRP_KEY,A.ROW_STS_KEY,A.PERMSN_GRP_NM,A.PERMSN_GRP_DESC 
FROM	PERMSN_GRP				A 
JOIN	APPL_ROLE_PERMSN_GRP	B
ON		A.PERMSN_GRP_KEY	  = B.PERMSN_GRP_KEY
JOIN	FnSplit(@RoleID,',')	C
ON		B.APPL_ROLE_KEY		  = C.Items
WHERE	B.ROW_STS_KEY		  <> 3
AND		A.ROW_STS_KEY		  <> 3

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[LIST_PermissionGroupsByUserID]...';


GO
--DROP PROCEDURE LIST_PermissionGroupsByUserID
CREATE PROCEDURE [dbo].[LIST_PermissionGroupsByUserID]
(
	@USERID INTEGER
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	DISTINCT A.PERMSN_GRP_KEY,A.ROW_STS_KEY,A.PERMSN_GRP_NM,A.PERMSN_GRP_DESC 
FROM	PERMSN_GRP				A 
JOIN	APPL_ROLE_PERMSN_GRP	B
ON		A.PERMSN_GRP_KEY	  = B.PERMSN_GRP_KEY
JOIN	USER_APPL_ROLE			C
ON		B.APPL_ROLE_KEY		  = C.APPL_ROLE_KEY
WHERE	B.ROW_STS_KEY		  = 1
AND		A.ROW_STS_KEY		  = 1
AND		A.ROW_STS_KEY		  = 1
AND		C.USER_ID			  = @USERID

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[LIST_Permissions]...';


GO
--DROP PROCEDURE LISTPERMSN
CREATE PROCEDURE [dbo].[LIST_Permissions]
(
	@GroupID INTEGER
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

IF @GroupID = 0 
BEGIN

SELECT		  A.PERMSN_KEY,A.PERMSN_NM,A.PERMSN_DESC,A.DSPL_TXT,D.PERMSN_KEY ModuleID,D.PERMSN_NM ModuleName,
              C.PERMSN_KEY MenuID,C.PERMSN_NM MenuName,B.PERMSN_KEY SubmenuID,B.PERMSN_NM SubmenuName,
              A.CHLD_XST_IND,A.SEQ_ORDR,A.UPDT_DT 
FROM		  PERMSN                 A
JOIN		  PERMSN                 B
ON            A.PAR_PERMSN_KEY     = B.PERMSN_KEY
AND           B.PERMSN_TYP_KEY     = 6
JOIN		  PERMSN                 C
ON            B.PAR_PERMSN_KEY     = C.PERMSN_KEY
AND           C.PERMSN_TYP_KEY     = 5
JOIN		  PERMSN                 D
ON            C.PAR_PERMSN_KEY     = D.PERMSN_KEY
AND           D.PERMSN_TYP_KEY     = 4
WHERE		  A.ROW_STS_KEY        = 1
ORDER BY   A.PERMSN_KEY ASC   


END 

IF @GroupID > 0 
BEGIN

SELECT		  A.PERMSN_KEY,A.PERMSN_NM,A.PERMSN_DESC,A.DSPL_TXT,D.PERMSN_KEY ModuleID,D.PERMSN_NM ModuleName,
              C.PERMSN_KEY MenuID,C.PERMSN_NM MenuName,B.PERMSN_KEY SubmenuID,B.PERMSN_NM SubmenuName,
              A.CHLD_XST_IND,A.SEQ_ORDR,A.UPDT_DT
FROM		  PERMSN                 A
JOIN		  PERMSN                 B
ON            A.PAR_PERMSN_KEY     = B.PERMSN_KEY
AND           B.PERMSN_TYP_KEY     = 6
JOIN		  PERMSN                 C
ON            B.PAR_PERMSN_KEY     = C.PERMSN_KEY
AND           C.PERMSN_TYP_KEY     = 5
JOIN		  PERMSN                 D
ON            C.PAR_PERMSN_KEY     = D.PERMSN_KEY
AND           D.PERMSN_TYP_KEY     = 4
JOIN		  PERMSN_GRP_ASSOC		 E
ON			  A.PERMSN_KEY		   = E.PERMSN_KEY
WHERE		  A.ROW_STS_KEY        = 1
AND			  E.PERMSN_GRP_KEY	   = @GroupID
ORDER BY   A.PERMSN_NM ASC 

END 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[LIST_Roles]...';


GO
CREATE PROCEDURE [dbo].[LIST_Roles]
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT      DISTINCT A.APPL_ROLE_KEY,A.APPL_ROLE_NM,A.APPL_ROLE_DESC
FROM  APPL_ROLE                       A
JOIN  APPL_ROLE_PERMSN_GRP      B
ON          A.APPL_ROLE_KEY               = B.APPL_ROLE_KEY
WHERE A.ROW_STS_KEY                 = 1
AND         B.ROW_STS_KEY                 = 1
ORDER BY A.APPL_ROLE_NM
END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[LIST_SecurPkg]...';


GO
CREATE PROCEDURE [dbo].[LIST_SecurPkg]

AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	SECUR_PKG_CD,SECUR_PKG_NM,SECUR_PKG_DESC,CREAT_DT,CREAT_USER_ID,UPDT_DT,
		UPDT_USER_ID,ROW_STS_KEY
FROM	SECUR_PKG
WHERE	ROW_STS_KEY = 1
END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[LIST_SecurServices]...';


GO
CREATE PROCEDURE [dbo].[LIST_SecurServices]
(
	@SECUR_SRVC_CD  VARCHAR(10)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	SECUR_SRVC_CD,SECUR_SRVC_NM,SECUR_SRVC_DESC,CREAT_DT,CREAT_USER_ID,
		UPDT_DT,UPDT_USER_ID,ROW_STS_KEY
FROM	[SECUR_SRVC]
WHERE   SECUR_SRVC_CD  =  @SECUR_SRVC_CD

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[LIST_SecurSrvcOfr]...';


GO
CREATE PROCEDURE [dbo].[LIST_SecurSrvcOfr]
(
	@SECUR_PKG_CD  VARCHAR(10)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT	SECUR_PKG_CD,SECUR_SRVC_CD,CREAT_DT,CREAT_USER_ID,UPDT_DT,UPDT_USER_ID,ROW_STS_KEY
FROM	SECUR_PKG_OFR
WHERE   SECUR_PKG_CD  =  @SECUR_PKG_CD

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[LIST_ServicesByPkgkey]...';


GO
CREATE PROCEDURE [dbo].[LIST_ServicesByPkgkey]
(
	@SECUR_PKG_CD  VARCHAR(10)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

SELECT		DISTINCT B.SECUR_SRVC_CD,C.SECUR_SRVC_NM,C.SECUR_SRVC_DESC,A.SECUR_PKG_NM,A.SECUR_PKG_DESC--,D.SRVC_EST_STRT_DT,D.SRVC_EST_END_DT
FROM		SECUR_PKG				A
JOIN		SECUR_PKG_OFR			B
ON			A.SECUR_PKG_CD			=  B.SECUR_PKG_CD
JOIN		SECUR_SRVC				C
ON			B.SECUR_SRVC_CD		=  C.SECUR_SRVC_CD
--LEFT JOIN   CLNT_SECUR_SRVC_ENGMT   D
--ON			C.SECUR_SRVC_KEY		=  D.SECUR_SRVC_KEY
WHERE		A.SECUR_PKG_CD			=  @SECUR_PKG_CD


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[LIST_StateByCountry]...';


GO
--DROP PROCEDURE LIST_StateByCountry
CREATE PROCEDURE [dbo].[LIST_StateByCountry]
(
	@CountryName VARCHAR(150)
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON


SELECT A.ST_CD,A.CNTRY_CD,A.ST_NM
FROM   ST_CD A
JOIN   CNTRY_CD B
ON     A.CNTRY_CD = B.CNTRY_CD
WHERE  B.CNTRY_NM  = @CountryName

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[List_UserByOrgIDandUserType]...';


GO
CREATE PROCEDURE [dbo].[List_UserByOrgIDandUserType]
(
      @OrgID			INT,
	  @USER_TYP_KEY     VARCHAR(20),
	  @FLAG		        VARCHAR(1)

)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

	IF @FLAG = 'L'
	BEGIN

      SELECT  DISTINCT A.USER_ID,(FST_NM+' '+LST_NM) [User Name] 
      FROM    USER_PRFL           A
      JOIN    ORG                 B
      ON      A.ORG_KEY			=  B.ORG_KEY
	  JOIN    USER_APPL_ROLE	  C
	  ON      A.USER_ID			=  C.USER_ID
	  JOIN	  APPL_ROLE           D
	  ON      C.APPL_ROLE_KEY   =  D.APPL_ROLE_KEY
	  JOIN	  APPL_ROLE_PERMSN_GRP E
	  ON      C.APPL_ROLE_KEY    =  E.APPL_ROLE_KEY
	  JOIN	  PERMSN_GRP_ASSOC		F
	  ON	  E.PERMSN_GRP_KEY	=  F.PERMSN_GRP_KEY
	  JOIN	  PERMSN					G
	  ON	  F.PERMSN_KEY		= G.PERMSN_KEY
      WHERE   A.ORG_KEY			=  CASE WHEN @OrgID = 0 THEN A.ORG_KEY ELSE @OrgID END
	  AND     A.USER_TYP_KEY	=  CASE WHEN @USER_TYP_KEY = 'Internal' THEN 16 WHEN @USER_TYP_KEY = 'Client' THEN 17 WHEN @USER_TYP_KEY = 'Partner' THEN 18 END
	  AND     A.ROW_STS_KEY		=  1
	  AND     B.ROW_STS_KEY		=  1
	  AND     A.LCK_IND			=  0
	  AND	 G.PERMSN_NM	= 'Add User to Service'
	  -- Add Document upload

      ORDER BY A.USER_ID DESC 
	  END


	  IF @FLAG = 'A'
	BEGIN

      SELECT  DISTINCT A.USER_ID,(FST_NM+' '+LST_NM) [User Name] 
      FROM    USER_PRFL           A
      JOIN    ORG                 B
      ON      A.ORG_KEY			=  B.ORG_KEY
	  JOIN    USER_APPL_ROLE	  C
	  ON      A.USER_ID			=  C.USER_ID
	  JOIN	  APPL_ROLE           D
	  ON      C.APPL_ROLE_KEY   =  D.APPL_ROLE_KEY
	  JOIN	  APPL_ROLE_PERMSN_GRP E
	  ON      C.APPL_ROLE_KEY    =  E.APPL_ROLE_KEY
	  JOIN	  PERMSN_GRP_ASSOC		F
	  ON	  E.PERMSN_GRP_KEY	=  F.PERMSN_GRP_KEY
	  JOIN	  PERMSN					G
	  ON	  F.PERMSN_KEY		= G.PERMSN_KEY
      WHERE   A.ORG_KEY			=  CASE WHEN @OrgID = 0 THEN A.ORG_KEY ELSE @OrgID END
	  AND     A.USER_TYP_KEY	=  CASE WHEN @USER_TYP_KEY = 'Internal' THEN 16 WHEN @USER_TYP_KEY = 'Client' THEN 17 WHEN @USER_TYP_KEY = 'Partner' THEN 18 END
	  AND     A.ROW_STS_KEY		=  1
	  AND     B.ROW_STS_KEY		=  1
	  AND     A.LCK_IND			=  0
	  AND	 G.PERMSN_NM	= 'Add Document upload'
	  

      ORDER BY A.USER_ID DESC 
	  END


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[LIST_UserClntSrvcAssn]...';


GO
CREATE PROCEDURE [dbo].[LIST_UserClntSrvcAssn]
(
	@USERTYPEID 	INTEGER,
	@CLNT_ENGMT_CD  VARCHAR(30),
	@USER_ID		INTEGER,
	@USER_TYP_KEY	INTEGER,
	@USERNAME		VARCHAR(300),
	@USER_STRT_DT	VARCHAR(10),
	@USER_END_DT	VARCHAR(10)


		
)
AS
BEGIN

DECLARE @LISERVICE VARCHAR(100) = ''
BEGIN TRY
SET NOCOUNT ON   

IF @USERTYPEID = 16
BEGIN
SELECT		C.CLNT_ENGMT_CD,A.SECUR_SRVC_CD,A.SECUR_SRVC_NM,B.SRVC_EST_STRT_DT ,B.SRVC_EST_END_DT,
			[dbo].[fnGetMasterLkpNameByID](Z.USER_TYP_KEY) UserType,Z.ORG_TYP_KEY,Z.ORG_NM,Z.ORG_KEY,
			ISNULL(Z.USER_CLNT_SRVC_ASGN_KEY,0)USER_CLNT_SRVC_ASGN_KEY,ISNULL(Z.FST_NM,'') USERNAME,
			ISNULL(Z.USER_ID,0) USER_ID,ISNULL(Z.ROW_STS_KEY,0) ROW_STS_KEY,
			Z.USER_STRT_DT,Z.USER_END_DT,Z.USER_TYP_KEY
FROM		SECUR_SRVC				  A
JOIN		CLNT_SECUR_SRVC_ENGMT	  B
ON			A.SECUR_SRVC_CD			= B.SECUR_SRVC_CD
JOIN		CLNT_ENGMT				  C
ON			B.CLNT_ENGMT_CD			= C.CLNT_ENGMT_CD
JOIN		CLNT_ENGMT_USER_ASGN	  F
ON			C.CLNT_ENGMT_CD			= F.CLNT_ENGMT_CD
LEFT JOIN	
(
SELECT      E.CLNT_ENGMT_CD,E.SECUR_SRVC_CD,G.USER_TYP_KEY,E.USER_STRT_DT,E.USER_END_DT,E.USER_CLNT_SRVC_ASGN_KEY,
			ISNULL(G.FST_NM+' '+G.LST_NM,'') FST_NM,D.ORG_NM,D.ORG_KEY,D.ORG_TYP_KEY,G.USER_ID,E.ROW_STS_KEY
FROM		USER_CLNT_SRVC_ASGN		  E
JOIN		USER_PRFL				  G
ON			E.USER_ID				= G.USER_ID
JOIN		ORG						  D
ON			G.ORG_KEY				= D.ORG_KEY
AND			CONVERT(VARCHAR(20),E.USER_STRT_DT,101)  = CASE WHEN @USER_STRT_DT = '' THEN CONVERT(VARCHAR(20),E.USER_STRT_DT,101) ELSE @USER_STRT_DT END
AND			CONVERT(VARCHAR(20),E.USER_END_DT,101)	 = CASE WHEN @USER_END_DT  = '' THEN CONVERT(VARCHAR(20),E.USER_END_DT,101)  ELSE @USER_END_DT END
AND         G.USER_TYP_KEY			= CASE WHEN @USER_TYP_KEY = 0 THEN G.USER_TYP_KEY ELSE @USER_TYP_KEY END
AND			ISNULL(G.FST_NM+' '+G.LST_NM,'')  LIKE CASE WHEN ISNULL(@USERNAME,'') = '' THEN ISNULL(G.FST_NM+' '+G.LST_NM,'') ELSE '%' + @USERNAME + '%' END)Z
ON			C.CLNT_ENGMT_CD = Z.CLNT_ENGMT_CD
AND			A.SECUR_SRVC_CD	= Z.SECUR_SRVC_CD
WHERE		C.CLNT_ENGMT_CD			= @CLNT_ENGMT_CD
AND			F.USER_ID				= @USER_ID

END

IF @USERTYPEID = 18
BEGIN

SELECT		@LISERVICE = SECUR_SRVC_LIST_CD 
FROM		dbo.CLNT_ENGMT_USER_ASGN  A
JOIN		dbo.USER_PRFL			  B 
ON			A.USER_ID				= B.USER_ID
WHERE		CLNT_ENGMT_CD			= @CLNT_ENGMT_CD 
AND			B.USER_TYP_KEY			= 18
AND			A.USER_ID				= @USER_ID

SELECT		C.CLNT_ENGMT_CD,A.SECUR_SRVC_CD,A.SECUR_SRVC_NM,B.SRVC_EST_STRT_DT ,B.SRVC_EST_END_DT,
			[dbo].[fnGetMasterLkpNameByID](Z.USER_TYP_KEY) UserType,Z.ORG_TYP_KEY,Z.ORG_NM,Z.ORG_KEY,
			ISNULL(Z.USER_CLNT_SRVC_ASGN_KEY,0)USER_CLNT_SRVC_ASGN_KEY,ISNULL(Z.FST_NM,'') USERNAME,
			ISNULL(Z.USER_ID,0) USER_ID,ISNULL(Z.ROW_STS_KEY,0) ROW_STS_KEY,
			Z.USER_STRT_DT,Z.USER_END_DT,Z.USER_TYP_KEY
FROM		SECUR_SRVC				  A
JOIN		CLNT_SECUR_SRVC_ENGMT	  B
ON			A.SECUR_SRVC_CD			= B.SECUR_SRVC_CD
JOIN		CLNT_ENGMT				  C
ON			B.CLNT_ENGMT_CD			= C.CLNT_ENGMT_CD
JOIN		CLNT_ENGMT_USER_ASGN	  F
ON			C.CLNT_ENGMT_CD			= F.CLNT_ENGMT_CD
JOIN	    dbo.FnSplit(@LISERVICE,',')		  H
ON		    A.SECUR_SRVC_CD			= H.items
LEFT JOIN	
(
SELECT      E.CLNT_ENGMT_CD,E.SECUR_SRVC_CD,G.USER_TYP_KEY,E.USER_STRT_DT,E.USER_END_DT,E.USER_CLNT_SRVC_ASGN_KEY,
			ISNULL(G.FST_NM+' '+G.LST_NM,'') FST_NM,D.ORG_NM,D.ORG_KEY,D.ORG_TYP_KEY,G.USER_ID,E.ROW_STS_KEY
FROM		USER_CLNT_SRVC_ASGN		  E
JOIN		USER_PRFL				  G
ON			E.USER_ID				= G.USER_ID
AND			G.USER_TYP_KEY			= 18
JOIN		ORG						  D
ON			G.ORG_KEY				= D.ORG_KEY
AND			CONVERT(VARCHAR(20),E.USER_STRT_DT,101)  = CASE WHEN @USER_STRT_DT = '' THEN CONVERT(VARCHAR(20),E.USER_STRT_DT,101) ELSE @USER_STRT_DT END
AND			CONVERT(VARCHAR(20),E.USER_END_DT,101)	 = CASE WHEN @USER_END_DT  = '' THEN CONVERT(VARCHAR(20),E.USER_END_DT,101)  ELSE @USER_END_DT END
AND         G.USER_TYP_KEY			= CASE WHEN @USER_TYP_KEY = 0 THEN G.USER_TYP_KEY ELSE @USER_TYP_KEY END
AND			ISNULL(G.FST_NM+' '+G.LST_NM,'')  LIKE CASE WHEN ISNULL(@USERNAME,'') = '' THEN ISNULL(G.FST_NM+' '+G.LST_NM,'') ELSE '%' + @USERNAME + '%' END)Z
ON			C.CLNT_ENGMT_CD = Z.CLNT_ENGMT_CD
AND			A.SECUR_SRVC_CD	= Z.SECUR_SRVC_CD
WHERE		C.CLNT_ENGMT_CD			= @CLNT_ENGMT_CD
AND			F.USER_ID				= @USER_ID


END


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END




/****** Object:  StoredProcedure [dbo].[LIST_UserClntSrvcAssn]    Script Date: 5/18/2016 1:21:23 PM ******/
SET ANSI_NULLS ON
GO
PRINT N'Creating [dbo].[LIST_UserClntSrvcAssnTest]...';


GO
CREATE PROCEDURE [dbo].[LIST_UserClntSrvcAssnTest]
(
	@USERTYPEID 	INTEGER,
	@CLNT_ENGMT_CD  VARCHAR(30),
	@USER_ID		INTEGER,
	@USER_TYP_KEY	INTEGER,
	@USERNAME		VARCHAR(300),
	@USER_STRT_DT	VARCHAR(10),
	@USER_END_DT	VARCHAR(10)


		
)
AS
BEGIN

DECLARE @LISERVICE VARCHAR(100) = ''
BEGIN TRY
SET NOCOUNT ON

IF @USERTYPEID = 16
BEGIN
SELECT		C.CLNT_ENGMT_CD,A.SECUR_SRVC_CD,A.SECUR_SRVC_NM,B.SRVC_EST_STRT_DT ,B.SRVC_EST_END_DT,
			[dbo].[fnGetMasterLkpNameByID](G.USER_TYP_KEY) UserType,D.ORG_TYP_KEY,D.ORG_NM,D.ORG_KEY,
			ISNULL(E.USER_CLNT_SRVC_ASGN_KEY,0)USER_CLNT_SRVC_ASGN_KEY,ISNULL(G.FST_NM+' '+G.LST_NM,'') USERNAME,
			ISNULL(E.USER_ID,0) USER_ID,ISNULL(E.ROW_STS_KEY,0) ROW_STS_KEY,
			E.USER_STRT_DT,E.USER_END_DT,G.USER_TYP_KEY
FROM		SECUR_SRVC				  A
JOIN		CLNT_SECUR_SRVC_ENGMT	  B
ON			A.SECUR_SRVC_CD			= B.SECUR_SRVC_CD
JOIN		CLNT_ENGMT				  C
ON			B.CLNT_ENGMT_CD			= C.CLNT_ENGMT_CD
JOIN		CLNT_ENGMT_USER_ASGN	  F
ON			C.CLNT_ENGMT_CD			= F.CLNT_ENGMT_CD
JOIN		USER_CLNT_SRVC_ASGN		  E
ON			C.CLNT_ENGMT_CD			= E.CLNT_ENGMT_CD
AND			B.SECUR_SRVC_CD			= E.SECUR_SRVC_CD
AND			CONVERT(VARCHAR(20),E.USER_STRT_DT,101)  = CASE WHEN @USER_STRT_DT = '' THEN CONVERT(VARCHAR(20),E.USER_STRT_DT,101) ELSE @USER_STRT_DT END
AND			CONVERT(VARCHAR(20),E.USER_END_DT,101)	 = CASE WHEN @USER_END_DT  = '' THEN CONVERT(VARCHAR(20),E.USER_END_DT,101)  ELSE @USER_END_DT END
LEFT JOIN		USER_PRFL				  G
ON			E.USER_ID				= G.USER_ID
AND			ISNULL(G.FST_NM+' '+G.LST_NM,'')  LIKE CASE WHEN ISNULL(@USERNAME,'') = '' THEN ISNULL(G.FST_NM+' '+G.LST_NM,'') ELSE '%@USERNAME%' END
JOIN		ORG						  D
ON			G.ORG_KEY				= D.ORG_KEY

AND         G.USER_TYP_KEY			= CASE WHEN @USER_TYP_KEY = 0 THEN G.USER_TYP_KEY ELSE @USER_TYP_KEY END

WHERE		C.CLNT_ENGMT_CD			= @CLNT_ENGMT_CD
AND			F.USER_ID				= @USER_ID

END


IF @USERTYPEID = 18
BEGIN

SELECT @LISERVICE = SECUR_SRVC_LIST_CD FROM dbo.CLNT_ENGMT_USER_ASGN A
JOIN dbo.USER_PRFL B ON A.USER_ID = B.USER_ID
WHERE CLNT_ENGMT_CD = @CLNT_ENGMT_CD AND B.USER_TYP_KEY= 18

SELECT		C.CLNT_ENGMT_CD,A.SECUR_SRVC_CD,A.SECUR_SRVC_NM,B.SRVC_EST_STRT_DT ,B.SRVC_EST_END_DT,
			[dbo].[fnGetMasterLkpNameByID](G.USER_TYP_KEY) UserType,D.ORG_TYP_KEY,D.ORG_NM,D.ORG_KEY,
			ISNULL(E.USER_CLNT_SRVC_ASGN_KEY,0)USER_CLNT_SRVC_ASGN_KEY,ISNULL(G.FST_NM+' '+G.LST_NM,'') USERNAME,
			ISNULL(E.USER_ID,0) USER_ID,ISNULL(E.ROW_STS_KEY,0) ROW_STS_KEY,
			E.USER_STRT_DT,E.USER_END_DT,G.USER_TYP_KEY
FROM		SECUR_SRVC				  A
JOIN		CLNT_SECUR_SRVC_ENGMT	  B
ON			A.SECUR_SRVC_CD			= B.SECUR_SRVC_CD
JOIN		CLNT_ENGMT				  C
ON			B.CLNT_ENGMT_CD			= C.CLNT_ENGMT_CD
JOIN		CLNT_ENGMT_USER_ASGN	  F
ON			C.CLNT_ENGMT_CD			= F.CLNT_ENGMT_CD
JOIN	    dbo.FnSplit(@LISERVICE,',')		  H
ON		    A.SECUR_SRVC_CD				=     H.items
LEFT JOIN		USER_CLNT_SRVC_ASGN		  E
ON			C.CLNT_ENGMT_CD			= E.CLNT_ENGMT_CD
AND			B.SECUR_SRVC_CD			= E.SECUR_SRVC_CD
LEFT JOIN		USER_PRFL				  G
ON			E.USER_ID				= G.USER_ID

JOIN		ORG						  D
ON			G.ORG_KEY				= D.ORG_KEY

AND			CONVERT(VARCHAR(20),E.USER_STRT_DT,101)  = CASE WHEN @USER_STRT_DT = '' THEN CONVERT(VARCHAR(20),E.USER_STRT_DT,101) ELSE @USER_STRT_DT END
AND			CONVERT(VARCHAR(20),E.USER_END_DT,101)	 = CASE WHEN @USER_END_DT  = '' THEN CONVERT(VARCHAR(20),E.USER_END_DT,101)  ELSE @USER_END_DT END
AND         G.USER_TYP_KEY			= CASE WHEN @USER_TYP_KEY = 0 THEN G.USER_TYP_KEY ELSE @USER_TYP_KEY END
AND			ISNULL((G.FST_NM+' '+G.LST_NM),'')  LIKE CASE WHEN ISNULL(@USERNAME,'') = '' THEN ISNULL(G.FST_NM+' '+G.LST_NM,'') ELSE '%' + @USERNAME + '%' END
WHERE		C.CLNT_ENGMT_CD			= @CLNT_ENGMT_CD
AND			F.USER_ID				= @USER_ID

END

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[LIST_UserNotSentEmails]...';


GO
CREATE PROCEDURE [dbo].[LIST_UserNotSentEmails]

AS
BEGIN
BEGIN TRY
SET NOCOUNT ON


BEGIN 
      SELECT  NTF_MSG_KEY,USER_ID,FROM_EMAIL_ID,TO_EMAIL_ID,
			  RESND_CNT,EMAIL_MSG_SBJ_TXT,EMAIL_MSG_CNTN_TXT
      FROM	  USER_EMAIL_LOG
      
      WHERE   SND_SUC_IND			= 0   
      AND	  RESND_CNT				<= 3
END 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[List_UserWorklistByOrg]...';


GO
CREATE PROCEDURE [dbo].[List_UserWorklistByOrg]
(
      @OrgID INT
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

      SELECT  A.USER_ID,A.ORG_KEY,B.ORG_NM,[dbo].[fnGetMasterLkpNameByID](USER_TYP_KEY) USER_TYP_KEY,
			  [dbo].[fnGetMasterLkpNameByID](A.ROW_STS_KEY)ROW_STS_KEY,
              FST_NM [First Name],LST_NM,MIDL_NM,(FST_NM+' '+LST_NM) [User Name],JOB_TITL_NM,EMAIL_ID,TEL_NBR,
              USER_VERF_IND, LCK_IND,
              LOGIN_ATMPT_CNT,LST_LOGIN_DT,PSWD_RSET_DT,A.CREAT_DT,A.CREAT_USER_ID
      FROM    USER_PRFL		A
      JOIN    ORG           B
      ON      A.ORG_KEY   = B.ORG_KEY
      WHERE   A.ORG_KEY   = CASE WHEN @OrgID = 0 THEN A.ORG_KEY ELSE @OrgID END
	--  AND     B.ROW_STS_KEY = 1
	  AND     USER_TYP_KEY <> 19
	  ORDER BY A.USER_ID DESC 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[SEARCH_UserClntSrvcAssn]...';


GO
CREATE PROCEDURE [dbo].[SEARCH_UserClntSrvcAssn]
(
	@USERTYPEID 	INTEGER,
	@CLNT_ENGMT_CD  VARCHAR(30),
	@USER_ID		INTEGER,
	@USER_TYP_KEY	INTEGER,
	@USERNAME		VARCHAR(300),
	@USER_STRT_DT	VARCHAR(10),
	@USER_END_DT	VARCHAR(10)


		
)
AS
BEGIN

DECLARE @LISERVICE VARCHAR(100) = ''
BEGIN TRY
SET NOCOUNT ON

IF @USERTYPEID = 16
BEGIN
SELECT		C.CLNT_ENGMT_CD,A.SECUR_SRVC_CD,A.SECUR_SRVC_NM,B.SRVC_EST_STRT_DT ,B.SRVC_EST_END_DT,
			[dbo].[fnGetMasterLkpNameByID](G.USER_TYP_KEY) UserType,D.ORG_TYP_KEY,D.ORG_NM,D.ORG_KEY,
			ISNULL(E.USER_CLNT_SRVC_ASGN_KEY,0)USER_CLNT_SRVC_ASGN_KEY,ISNULL(G.FST_NM+' '+G.LST_NM,'') USERNAME,
			ISNULL(G.USER_ID,0) USER_ID,ISNULL(E.ROW_STS_KEY,0) ROW_STS_KEY,
			E.USER_STRT_DT,E.USER_END_DT,G.USER_TYP_KEY
FROM		SECUR_SRVC				  A
JOIN		CLNT_SECUR_SRVC_ENGMT	  B
ON			A.SECUR_SRVC_CD			= B.SECUR_SRVC_CD
JOIN		CLNT_ENGMT				  C
ON			B.CLNT_ENGMT_CD			= C.CLNT_ENGMT_CD
JOIN		CLNT_ENGMT_USER_ASGN	  F
ON			C.CLNT_ENGMT_CD			= F.CLNT_ENGMT_CD
JOIN		USER_CLNT_SRVC_ASGN		  E
ON			C.CLNT_ENGMT_CD			= E.CLNT_ENGMT_CD
AND			A.SECUR_SRVC_CD			= E.SECUR_SRVC_CD
JOIN		USER_PRFL				  G
ON			E.USER_ID				= G.USER_ID
JOIN		ORG						  D
ON			G.ORG_KEY				= D.ORG_KEY
AND			CONVERT(VARCHAR(20),E.USER_STRT_DT,101)  = CASE WHEN @USER_STRT_DT = '' THEN CONVERT(VARCHAR(20),E.USER_STRT_DT,101) ELSE @USER_STRT_DT END
AND			CONVERT(VARCHAR(20),E.USER_END_DT,101)	 = CASE WHEN @USER_END_DT  = '' THEN CONVERT(VARCHAR(20),E.USER_END_DT,101)  ELSE @USER_END_DT END
AND         G.USER_TYP_KEY			= CASE WHEN @USER_TYP_KEY = 0 THEN G.USER_TYP_KEY ELSE @USER_TYP_KEY END
AND			ISNULL(G.FST_NM+' '+G.LST_NM,'')  LIKE CASE WHEN ISNULL(@USERNAME,'') = '' THEN ISNULL(G.FST_NM+' '+G.LST_NM,'') ELSE '%' + @USERNAME + '%' END
WHERE		C.CLNT_ENGMT_CD			= @CLNT_ENGMT_CD
AND			F.USER_ID				= @USER_ID

END

IF @USERTYPEID = 18
BEGIN

SELECT		@LISERVICE = SECUR_SRVC_LIST_CD 
FROM		dbo.CLNT_ENGMT_USER_ASGN  A
JOIN		dbo.USER_PRFL			  B 
ON			A.USER_ID				= B.USER_ID
WHERE		CLNT_ENGMT_CD			= @CLNT_ENGMT_CD 
AND			B.USER_TYP_KEY			= 18
AND			A.USER_ID				= @USER_ID

SELECT		C.CLNT_ENGMT_CD,A.SECUR_SRVC_CD,A.SECUR_SRVC_NM,B.SRVC_EST_STRT_DT ,B.SRVC_EST_END_DT,
			[dbo].[fnGetMasterLkpNameByID](G.USER_TYP_KEY) UserType,D.ORG_TYP_KEY,D.ORG_NM,D.ORG_KEY,
			ISNULL(E.USER_CLNT_SRVC_ASGN_KEY,0)USER_CLNT_SRVC_ASGN_KEY,ISNULL(G.FST_NM+' '+G.LST_NM,'') USERNAME,
			ISNULL(G.USER_ID,0) USER_ID,ISNULL(E.ROW_STS_KEY,0) ROW_STS_KEY,
			E.USER_STRT_DT,E.USER_END_DT,G.USER_TYP_KEY
FROM		SECUR_SRVC				  A
JOIN		CLNT_SECUR_SRVC_ENGMT	  B
ON			A.SECUR_SRVC_CD			= B.SECUR_SRVC_CD
JOIN		CLNT_ENGMT				  C
ON			B.CLNT_ENGMT_CD			= C.CLNT_ENGMT_CD
JOIN		CLNT_ENGMT_USER_ASGN	  F
ON			C.CLNT_ENGMT_CD			= F.CLNT_ENGMT_CD
JOIN	    dbo.FnSplit(@LISERVICE,',')		  H
ON		    A.SECUR_SRVC_CD			= H.items
JOIN		USER_CLNT_SRVC_ASGN		  E
ON			A.SECUR_SRVC_CD			= E.SECUR_SRVC_CD
AND			C.CLNT_ENGMT_CD			= E.CLNT_ENGMT_CD
AND			E.SECUR_SRVC_CD			= H.items
JOIN		USER_PRFL				  G
ON			E.USER_ID				= G.USER_ID
AND			G.USER_TYP_KEY			= 18
JOIN		ORG						  D
ON			G.ORG_KEY				= D.ORG_KEY
AND			CONVERT(VARCHAR(20),E.USER_STRT_DT,101)  = CASE WHEN @USER_STRT_DT = '' THEN CONVERT(VARCHAR(20),E.USER_STRT_DT,101) ELSE @USER_STRT_DT END
AND			CONVERT(VARCHAR(20),E.USER_END_DT,101)	 = CASE WHEN @USER_END_DT  = '' THEN CONVERT(VARCHAR(20),E.USER_END_DT,101)  ELSE @USER_END_DT END
AND         G.USER_TYP_KEY			= CASE WHEN @USER_TYP_KEY = 0 THEN G.USER_TYP_KEY ELSE @USER_TYP_KEY END
AND			ISNULL(G.FST_NM+' '+G.LST_NM,'')  LIKE CASE WHEN ISNULL(@USERNAME,'') = '' THEN ISNULL(G.FST_NM+' '+G.LST_NM,'') ELSE '%' + @USERNAME + '%' END
WHERE		C.CLNT_ENGMT_CD			= @CLNT_ENGMT_CD
AND			F.USER_ID				= @USER_ID


END


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[UPDATE_AppRoleByID]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_AppRoleByID]
(
	@APPL_ROLE_KEY		  INTEGER,
	@ROW_STS_KEY          INTEGER,
	@APPL_ROLE_NM         VARCHAR(100),
	@APPL_ROLE_DESC       VARCHAR(1000),
	@UPDT_USER_ID         INTEGER,
	@STS_COMMT_TXT        TEXT  
				  

)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON


BEGIN 
      UPDATE dbo.APPL_ROLE 
      SET    ROW_STS_KEY		 =   @ROW_STS_KEY,
			 APPL_ROLE_NM        =   @APPL_ROLE_NM,
	         APPL_ROLE_DESC      =   @APPL_ROLE_DESC,
	         UPDT_DT			 =	 GETDATE(),
	         UPDT_USER_ID		 =   @UPDT_USER_ID,
			 STS_COMMT_TXT       =   @STS_COMMT_TXT

      WHERE  APPL_ROLE_KEY       =   @APPL_ROLE_KEY
      
	  SELECT @@ROWCOUNT AS RETVAL
END 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[UPDATE_AppRolePermsnGrpStatusByID]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_AppRolePermsnGrpStatusByID]

(   
	@APPL_ROLE_KEY               INTEGER
)

AS  
BEGIN
BEGIN TRY
SET NOCOUNT ON
BEGIN 

            UPDATE dbo.APPL_ROLE
            SET    ROW_STS_KEY                =   3
	        WHERE  APPL_ROLE_KEY              =   @APPL_ROLE_KEY

            UPDATE dbo.APPL_ROLE_PERMSN_GRP
            SET    ROW_STS_KEY                =   3
	        WHERE  APPL_ROLE_KEY              =   @APPL_ROLE_KEY

			UPDATE dbo.USER_APPL_ROLE
            SET    ROW_STS_KEY                =   3
	        WHERE  APPL_ROLE_KEY              =   @APPL_ROLE_KEY
     

			SELECT @@ROWCOUNT AS RETVAL

END 

END TRY
BEGIN CATCH
    DECLARE @ErrorNumber INT = ERROR_NUMBER();

    DECLARE @ErrorLine INT = ERROR_LINE();

    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();

    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();

    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));

    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));



    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);

  END CATCH

-- COMMIT TRANSACTION

END;
GO
PRINT N'Creating [dbo].[UPDATE_CLNT_ENGMT]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_CLNT_ENGMT](
	   @CLNT_ENGMT_CD       VARCHAR(30),	
       @ENGMT_STS_KEY       INTEGER,
       @ROW_STS_KEY			INTEGER,		 
       @CLNT_ENGMT_NM       VARCHAR(150), 
       @ENGMT_STRT_DT       DATETIME, 
       @ENGMT_EST_END_DT    DATETIME, 
       @CLNT_ENGMT_DESC     VARCHAR(1000), 
       @ENGMT_COMMT           TEXT,
       @UPDT_USER_ID        INTEGER
       
       )

       AS
       BEGIN
              BEGIN TRY

              SET NOCOUNT ON

					UPDATE  CLNT_ENGMT
					SET		ENGMT_STS_KEY     =  @ENGMT_STS_KEY,
							CLNT_ENGMT_CD     =  @CLNT_ENGMT_CD,
							ROW_STS_KEY		  =  @ROW_STS_KEY,
							CLNT_ENGMT_NM     =  @CLNT_ENGMT_NM,
							ENGMT_STRT_DT	  =  @ENGMT_STRT_DT,
							ENGMT_EST_END_DT  =  @ENGMT_EST_END_DT,
							CLNT_ENGMT_DESC   =  @CLNT_ENGMT_DESC,
							ENGMT_COMMT		  =  @ENGMT_COMMT,
							UPDT_DT			  =  GETDATE(),
							UPDT_USER_ID	  =  @UPDT_USER_ID

					WHERE   CLNT_ENGMT_CD	  =  @CLNT_ENGMT_CD

                    SELECT @@ROWCOUNT AS RETVAL

              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END
GO
PRINT N'Creating [dbo].[UPDATE_CLNTENGMTUSERASGN]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_CLNTENGMTUSERASGN](
	   
	   @CLNT_ENGMT_USER_ASGN_KEY INTEGER,
	   @ROW_STS_KEY				 INTEGER,
	   @CLNT_ENGMT_CD			 VARCHAR(30),
	   @USER_ID					 INTEGER,
	   @SRV_LST_CD				 VARCHAR(150),
	   @UPDT_DT					 DATETIME,
	   @UPDT_USER_ID			 INTEGER
       
       )

       AS
       BEGIN
              BEGIN TRY

              SET NOCOUNT ON

					UPDATE  CLNT_ENGMT_USER_ASGN
					SET		CLNT_ENGMT_CD			 =  @CLNT_ENGMT_CD,
							ROW_STS_KEY				 =  @ROW_STS_KEY,
							[USER_ID]				 =  @USER_ID,
							SECUR_SRVC_LIST_CD   	 =  @SRV_LST_CD,
							UPDT_DT					 =  GETDATE(),
							UPDT_USER_ID			 =  @UPDT_USER_ID

					WHERE   CLNT_ENGMT_USER_ASGN_KEY =	@CLNT_ENGMT_USER_ASGN_KEY

                    SELECT @@ROWCOUNT AS RETVAL

              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END
GO
PRINT N'Creating [dbo].[UPDATE_CLNTRELENGMTINDENTIFIER]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_CLNTRELENGMTINDENTIFIER](
	   
	   @CLNT_REL_ENGMT_ID_KEY	INTEGER,
	   @ROW_STS_KEY				INTEGER,
	   @CLNT_ENGMT_CD			VARCHAR(30),
	   @SRC_KEY					INTEGER,
	   @SRC_REL_ENGMT_ID		VARCHAR(150),
	   @UPDT_USER_ID			INTEGER
       
       )

       AS
       BEGIN
              BEGIN TRY

              SET NOCOUNT ON

					UPDATE  CLNT_REL_ENGMT_ID
					SET		CLNT_ENGMT_CD			=  @CLNT_ENGMT_CD,
							ROW_STS_KEY				=  @ROW_STS_KEY,
							SRC_KEY					=  @SRC_KEY,
							SRC_REL_ENGMT_ID		=  @SRC_REL_ENGMT_ID,
							UPDT_DT					=  GETDATE(),
							UPDT_USER_ID			=  @UPDT_USER_ID

					WHERE   CLNT_REL_ENGMT_ID_KEY	=  @CLNT_REL_ENGMT_ID_KEY

                    SELECT @@ROWCOUNT AS RETVAL

              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END
GO
PRINT N'Creating [dbo].[UPDATE_CLNTSECURSRVCENGMT]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_CLNTSECURSRVCENGMT](
	   
	   @CLNT_ENGMT_CD				VARCHAR(30),
	   @SECUR_SRVC_CD           	VARCHAR(30),
	   @SRVC_ENGMT_STS_KEY			INTEGER,
	   @ROW_STS_KEY					INTEGER,
	   @SRVC_EST_STRT_DT			DATETIME,
	   @SRVC_EST_END_DT				DATETIME,
	   @UPDT_USER_ID				INTEGER
       
       )

       AS
       BEGIN
              BEGIN TRY

              SET NOCOUNT ON

					UPDATE  CLNT_SECUR_SRVC_ENGMT
					SET		CLNT_ENGMT_CD				=  @CLNT_ENGMT_CD,
							SECUR_SRVC_CD				=  @SECUR_SRVC_CD,
							SRVC_ENGMT_STS_KEY			=  @SRVC_ENGMT_STS_KEY,
							ROW_STS_KEY					=  @ROW_STS_KEY,
							SRVC_EST_STRT_DT			=  @SRVC_EST_STRT_DT,
							SRVC_EST_END_DT				=  @SRVC_EST_END_DT,
							UPDT_DT						=  GETDATE(),
							UPDT_USER_ID				=  @UPDT_USER_ID

					WHERE   CLNT_ENGMT_CD	=  @CLNT_ENGMT_CD AND SECUR_SRVC_CD = @SECUR_SRVC_CD

                    SELECT @@ROWCOUNT AS RETVAL

              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END
GO
PRINT N'Creating [dbo].[UPDATE_EngagementDeactive]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_EngagementDeactive](
	   @CLNT_ENGMT_CD       VARCHAR(30)
       
       )

       AS
       BEGIN
              BEGIN TRY

              SET NOCOUNT ON

					UPDATE  CLNT_ENGMT
					SET		ROW_STS_KEY       = 3
					WHERE   CLNT_ENGMT_CD	  =  @CLNT_ENGMT_CD

					UPDATE  CLNT_ENGMT_USER_ASGN
					SET		ROW_STS_KEY		  =  3 
					WHERE  CLNT_ENGMT_CD  	  =  @CLNT_ENGMT_CD

					UPDATE  CLNT_SECUR_SRVC_ENGMT
					SET		ROW_STS_KEY       = 3
					WHERE	CLNT_ENGMT_CD	  =  @CLNT_ENGMT_CD

                    SELECT @@ROWCOUNT AS RETVAL

              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END
GO
PRINT N'Creating [dbo].[UPDATE_EngagementServicedatebyEngservcode]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_EngagementServicedatebyEngservcode](
	   @CLNT_ENGMT_CD       VARCHAR(30),
	   @SECUR_SRVC_CD		VARCHAR(10),
	   @SRVC_EST_STRT_DT	DATETIME,
	   @SRVC_EST_END_DT		DATETIME
       
       )

       AS
       BEGIN
              BEGIN TRY

              SET NOCOUNT ON

					UPDATE  CLNT_SECUR_SRVC_ENGMT
					SET		SRVC_EST_STRT_DT	= @SRVC_EST_STRT_DT,
							SRVC_EST_END_DT 	= @SRVC_EST_END_DT
					WHERE   CLNT_ENGMT_CD	  =  @CLNT_ENGMT_CD
					AND	    SECUR_SRVC_CD	  =  @SECUR_SRVC_CD
				

                    SELECT @@ROWCOUNT AS RETVAL

              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END
GO
PRINT N'Creating [dbo].[UPDATE_LastloginbyUserid]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_LastloginbyUserid]
(

@UserID         INTEGER,
@Lstlogindate   DATETIME, 
@Sysmacid       VARCHAR(100) 

)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON


BEGIN 
      UPDATE USER_PRFL 
      SET    LST_LOGIN_DT        =   GETDATE(),
             MAC_ADR_NM          =   @Sysmacid,
             LOGIN_ATMPT_CNT	 =	0
      WHERE  [USER_ID]           =   @UserID
END 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[UPDATE_LastLogindtbyUserid]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_LastLogindtbyUserid]
(

@UserID         INTEGER


)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON


BEGIN 
      UPDATE USER_PRFL 
      SET    LST_LOGIN_DT        =   GETDATE() 
      WHERE  [USER_ID]      =   @UserID
END 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[UPDATE_LockedIndicatorInUserProfile]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_LockedIndicatorInUserProfile]
(

@UserID  INTEGER,
@LockIndicator	INTEGER -- 0 for unlock /1 for lock

)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON


BEGIN 
      UPDATE USER_PRFL 
      SET    LCK_IND             =   @LockIndicator
      WHERE  [USER_ID]           =   @UserID
END 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[UPDATE_LockUnlockService]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_LockUnlockService]
(
      @CLNT_ENGMT_CD	VARCHAR(30),
      @SECUR_SRVC_CD	VARCHAR(10),
	  @FL_LCK_IND		INTEGER
 
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

		UPDATE CLNT_SECUR_SRVC_ENGMT
		SET    FL_LCK_IND = @FL_LCK_IND
		WHERE	CLNT_ENGMT_CD = @CLNT_ENGMT_CD
		AND		SECUR_SRVC_CD = @SECUR_SRVC_CD   

		SELECT	@FL_LCK_IND AS RETVAL
		

	IF @FL_LCK_IND = 1
	BEGIN
		UPDATE A		
		SET		A.FL_STS_KEY = dbo.fnGetMasterLkpID('File Status','To Be Processed')
		FROM	APPL_FL_UPLOAD_LOG		A
		JOIN	MSTR_LKP				B 
		ON		A.FL_STS_KEY			= B.MSTR_LKP_KEY
		AND		B.LKP_ENTY_NM			='New'
		AND		B.LKP_ENTY_TYP_NM		='File Status'
		WHERE	A.CLNT_ENGMT_CD			= @CLNT_ENGMT_CD
		AND		A.SECUR_SRVC_CD			= @SECUR_SRVC_CD 
		AND		A.ROW_STS_KEY			= 1 
		  
		
    END

	IF @FL_LCK_IND = 0
	BEGIN
		UPDATE A		
		SET		A.FL_STS_KEY = dbo.fnGetMasterLkpID('File Status','New')
		FROM	APPL_FL_UPLOAD_LOG		A
		JOIN	MSTR_LKP				B 
		ON		A.FL_STS_KEY			= B.MSTR_LKP_KEY
		AND		B.LKP_ENTY_NM			='To Be Processed'
		AND		B.LKP_ENTY_TYP_NM		='File Status'
		WHERE	A.CLNT_ENGMT_CD			= @CLNT_ENGMT_CD
		AND		A.SECUR_SRVC_CD			= @SECUR_SRVC_CD 
		AND		A.ROW_STS_KEY			= 1 
	
    END
	
END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[UPDATE_LoginAttemptsinUserProfile]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_LoginAttemptsinUserProfile]
(

@UserID  INTEGER

)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

DECLARE @COUNT INT
      SELECT @COUNT = LOGIN_ATMPT_CNT 
      FROM   USER_PRFL
      WHERE  [USER_ID]           =   @UserID 

IF @COUNT < 2 
BEGIN
	UPDATE USER_PRFL 
	SET    LOGIN_ATMPT_CNT     =   LOGIN_ATMPT_CNT + 1
	WHERE  [USER_ID]           =   @UserID
END
	
ELSE
BEGIN
	UPDATE USER_PRFL 
      SET    LCK_IND             =   1,
			 LOGIN_ATMPT_CNT	 =	 0
      WHERE  [USER_ID]           =   @UserID
END

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[UPDATE_NtfMsgByID]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_NtfMsgByID]
(
	@NTF_MSG_KEY				INTEGER,
	@ROW_STS_KEY				INTEGER,
	@NTF_TYP_KEY				VARCHAR(255),
	@MSG_SBJ_TXT				VARCHAR(255),
	@MSG_CNTN_TXT				TEXT,
	@UPDT_USER_ID				INTEGER  
				  

)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON


BEGIN 
      UPDATE dbo.NTF_MSG
      SET    ROW_STS_KEY				=   @ROW_STS_KEY,
			 NTF_TYP_NM				    =   @NTF_TYP_KEY,
			 MSG_SBJ_TXT				=	@MSG_SBJ_TXT,
			 MSG_CNTN_TXT				=   @MSG_CNTN_TXT,
			 UPDT_DT					=	GETDATE(),
	         UPDT_USER_ID				=   @UPDT_USER_ID
      WHERE  NTF_MSG_KEY				=   @NTF_MSG_KEY
END 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[UPDATE_NTFMSGBYTYPE]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_NTFMSGBYTYPE]  
(   @ROW_STS_KEY	INTEGER,
	@NTF_TYP_KEY	VARCHAR(255),
	@MSG_SBJ_TXT	VARCHAR(255),
	@MSG_CNTN_TXT	TEXT,
	@UPDT_USER_ID	INTEGER      
)  
  
AS  
BEGIN  
BEGIN TRY  
SET NOCOUNT ON  
  
BEGIN   
      UPDATE dbo.NTF_MSG  
      SET    ROW_STS_KEY	=  @ROW_STS_KEY,
			 MSG_SBJ_TXT	=  @MSG_SBJ_TXT,
			 MSG_CNTN_TXT	=  @MSG_CNTN_TXT,
			 UPDT_DT		=  GETDATE(),  
			 UPDT_USER_ID   =  @UPDT_USER_ID  
            
      WHERE  NTF_TYP_NM	=  @NTF_TYP_KEY  
        
      SELECT @@ROWCOUNT AS RETVAL  
  
END   
  
END TRY  
  
BEGIN CATCH  
  
    DECLARE @ErrorNumber INT = ERROR_NUMBER();  
    DECLARE @ErrorLine INT = ERROR_LINE();  
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
    DECLARE @ErrorState INT = ERROR_STATE();  
  
    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
  END CATCH  
-- COMMIT TRANSACTION  
END
GO
PRINT N'Creating [dbo].[UPDATE_OrgByID]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_OrgByID]  
( @ORG_KEY     INTEGER,  
 @ROW_STS_KEY    INTEGER,  
 @PAR_ORG_KEY     INTEGER,  
 @ORG_TYP_KEY    INTEGER,  
 @ORG_INDUS_KEY    INTEGER,  
 @ORG_NM      VARCHAR(150),  
 @STR_ADR_1     VARCHAR(255),  
 @STR_ADR_2     VARCHAR(255),  
 @CTY_NM      VARCHAR(255),  
 @ST_NM      VARCHAR(255),  
 @CNTRY_NM     VARCHAR(255),  
 @PST_CD      VARCHAR(20),  
 @ORG_DESC_TXT    TEXT,  
 @UPDT_USER_ID    INTEGER,    
 @STS_COMMT_TXT    TEXT       
)  
  
AS  
BEGIN  
BEGIN TRY  
SET NOCOUNT ON  
  
BEGIN   
      UPDATE dbo.ORG  
      SET    ROW_STS_KEY    =   @ROW_STS_KEY,  
			 PAR_ORG_KEY    =   CASE WHEN @PAR_ORG_KEY=0 THEN NULL ELSE @PAR_ORG_KEY END,  
			 ORG_TYP_KEY    =   @ORG_TYP_KEY,  
			 ORG_INDUS_KEY  =   @ORG_INDUS_KEY,  
			 ORG_NM			=   @ORG_NM,  
			 STR_ADR_1      =   @STR_ADR_1,  
			 STR_ADR_2      =   @STR_ADR_2,  
			 CTY_NM			=   @CTY_NM,  
			 ST_NM			=   @ST_NM,  
			 CNTRY_NM       =   @CNTRY_NM,  
			 PST_CD			=   @PST_CD,  
			 ORG_DESC       =   @ORG_DESC_TXT,  
			 UPDT_DT		=   GETDATE(),  
			 UPDT_USER_ID   =   @UPDT_USER_ID,
			 STS_COMMT_TXT  =	@STS_COMMT_TXT
            
      WHERE  ORG_KEY		=   @ORG_KEY  
        
      SELECT @@ROWCOUNT AS RETVAL  
  
END   
  
END TRY  
  
BEGIN CATCH  
  
    DECLARE @ErrorNumber INT = ERROR_NUMBER();  
    DECLARE @ErrorLine INT = ERROR_LINE();  
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();  
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();  
    DECLARE @ErrorState INT = ERROR_STATE();  
  
    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));  
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));  
  
    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);  
  END CATCH  
-- COMMIT TRANSACTION  
END
GO
PRINT N'Creating [dbo].[UPDATE_OrgRelIDByID]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_OrgRelIDByID]
(	
	@ORG_REL_ID_KEY				INTEGER,
	@ORG_KEY					INTEGER,
	@SRC_KEY					INTEGER,
	@SRC_CLNT_ID				VARCHAR(150),
	@UPDT_USER_ID				INTEGER,  
	@ROW_STS_KEY				INTEGER		  
)

AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

BEGIN 
      UPDATE dbo.ORG_REL_ID
      SET    ORG_KEY				=   @ORG_KEY,
			 SRC_KEY				=   @SRC_KEY,
			 SRC_CLNT_ID			=	@SRC_CLNT_ID,
			 UPDT_DT				=	GETDATE(),
	         UPDT_USER_ID			=   @UPDT_USER_ID,
			 ROW_STS_KEY			=   @ROW_STS_KEY
	         
      WHERE  ORG_REL_ID_KEY			=   @ORG_REL_ID_KEY
	  SELECT @@ROWCOUNT AS RETVAL
END 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[UPDATE_PermsnDescriptionByID]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_PermsnDescriptionByID]
(	
	@PERMSN_KEY				INTEGER,
	@PERMSN_DESC			VARCHAR(1000),
	@UPDT_USER_ID			INTEGER  
			  
)

AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

BEGIN 
      UPDATE dbo.PERMSN
      SET    PERMSN_DESC		=	@PERMSN_DESC,
			 UPDT_DT			=	GETDATE(),
	         UPDT_USER_ID		=   @UPDT_USER_ID
      WHERE  PERMSN_KEY			=   @PERMSN_KEY
      
      SELECT @@ROWCOUNT AS RETVAL

END 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[UPDATE_PermsnGrpByID]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_PermsnGrpByID]
(	
	@PERMSN_GRP_KEY			INTEGER,
	@ROW_STS_KEY			INTEGER,
	@PERMSN_GRP_NM			VARCHAR(100),
	@PERMSN_GRP_DESC		VARCHAR(1000),
	@UPDT_USER_ID			INTEGER,
	@STS_COMMT_TXT			TEXT  
			  
)

AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

BEGIN 
      UPDATE dbo.PERMSN_GRP
      SET    ROW_STS_KEY			=   @ROW_STS_KEY,
			 PERMSN_GRP_NM			=   @PERMSN_GRP_NM,
			 PERMSN_GRP_DESC		=	@PERMSN_GRP_DESC,
			 UPDT_DT				=	GETDATE(),
	         UPDT_USER_ID			=   @UPDT_USER_ID,
			 STS_COMMT_TXT          =   @STS_COMMT_TXT 

      WHERE  PERMSN_GRP_KEY			=   @PERMSN_GRP_KEY
      
      SELECT @@ROWCOUNT AS RETVAL

END 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[UPDATE_PermsnGrpStatusByID]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_PermsnGrpStatusByID]
(     
      @FLAG                         VARCHAR(2),
      @PERMSN_GRP_KEY               INTEGER
              
)

AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

BEGIN 
     
     IF @FLAG = 'IA' -- InActive
      BEGIN
     
      UPDATE  dbo.PERMSN_GRP_ASSOC 
      SET    ROW_STS_KEY                  =   2
      WHERE  PERMSN_GRP_KEY             =   @PERMSN_GRP_KEY

      UPDATE dbo.PERMSN_GRP
      SET    ROW_STS_KEY                  =   2
      WHERE  PERMSN_GRP_KEY             =   @PERMSN_GRP_KEY

        
      SELECT @@ROWCOUNT AS RETVAL
      END
        
        
       IF @FLAG = 'D'	-- Delete
        BEGIN 
             
UPDATE  dbo.PERMSN_GRP_ASSOC 
      SET    ROW_STS_KEY                  =   3
        WHERE  PERMSN_GRP_KEY             =   @PERMSN_GRP_KEY

      UPDATE dbo.PERMSN_GRP
      SET    ROW_STS_KEY                  =   3
        WHERE  PERMSN_GRP_KEY             =   @PERMSN_GRP_KEY
      
        SELECT @@ROWCOUNT AS RETVAL
        
        END
      
      

END 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[UPDATE_UnlockUser]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_UnlockUser]
(
      @UserID			INT,
      @LockIndicator	INT,
      @RowStatusKey		INT
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

      UPDATE USER_PRFL
      SET    LCK_IND         	= @LockIndicator,
			 LOGIN_ATMPT_CNT 	= 0,
             ROW_STS_KEY	 	= @RowStatusKey,
			 USER_VERF_IND		= 0
      WHERE  [USER_ID]		 	= @UserID
      
      SELECT @@ROWCOUNT Retval
      
 
      
END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[UPDATE_USER_PRFL]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_USER_PRFL](
       @USER_ID            INTEGER,
       @ORG_KEY            INTEGER,
       @USER_TYP_KEY       INTEGER,
       @ROW_STS_KEY        INTEGER, 
       @FST_NM             VARCHAR(150), 
       @LST_NM             VARCHAR(150), 
       @MIDL_NM            VARCHAR(150), 
       @JOB_TITL_NM        VARCHAR(150), 
       @TEL_NBR            VARCHAR(20),
       @UPDAT_USER_ID      INTEGER,
	   @STS_COMMT_TXT		TEXT 
       
       )

       AS
       BEGIN



              BEGIN TRY
			  DECLARE @liRowStatus INTEGER = 0
			  SET NOCOUNT ON

			      SELECT    @liRowStatus = ROW_STS_KEY FROM USER_PRFL WHERE  USER_ID =   @USER_ID

                  UPDATE	USER_PRFL
                  SET		ORG_KEY			=	@ORG_KEY,
							USER_TYP_KEY	=	@USER_TYP_KEY,
							ROW_STS_KEY		=	@ROW_STS_KEY,
							FST_NM			=	@FST_NM,
							LST_NM			=	@LST_NM,
							MIDL_NM			=	@MIDL_NM,
							JOB_TITL_NM		=	@JOB_TITL_NM,
							TEL_NBR			=	@TEL_NBR,
							UPDT_DT			=	GETDATE(),
							UPDT_USER_ID	=	@UPDAT_USER_ID,
							STS_COMMT_TXT   =   @STS_COMMT_TXT,
							USER_VERF_IND	=   CASE WHEN @liRowStatus = 2 AND @ROW_STS_KEY = 1 THEN 0 ELSE USER_VERF_IND END
							
					 WHERE  USER_ID			=   @USER_ID

                     SELECT 1 AS RETVAL

              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END




/****** Object:  StoredProcedure [dbo].[UPDATE_UnlockUser]    Script Date: 5/11/2016 7:10:52 PM ******/
SET ANSI_NULLS ON
GO
PRINT N'Creating [dbo].[UPDATE_USER_SESS_LOG]...';


GO
/******************************
       ** File: IRMaaSAdmin.SQL   
       ** Name: UPDATE_USER_SESS_LOG
       ** Desc: This procedure UPDATE data into USER_SESS_LOG table
       ** Auth: Prasad varma
       ** Date: 22/4/2016
       **************************
       ** Change History
       **************************
       ** PR   Date          Author                  Description     
       ** --   --------        -------                ------------------------------------
       ** 1    00/00/1999      xxxxx          
       *******************************/

CREATE PROCEDURE [dbo].[UPDATE_USER_SESS_LOG](
	   @FLAG			   VARCHAR(1),	
       @USER_ID            INTEGER,
       @LST_ACT_DT         DATETIME,
	   @SESS_ID            VARCHAR(150)
       )

       AS
       BEGIN
              BEGIN TRY

              SET NOCOUNT ON

		IF @FLAG = 'U'

		BEGIN
			     UPDATE  USER_SESS_LOG
                  SET     LST_ACT_DT =     GETDATE()
                  WHERE   USER_ID    =   @USER_ID

                 
		END
		
		IF @FLAG = 'D'

		BEGIN 
		 
			DELETE FROM USER_SESS_LOG WHERE [USER_ID] = @USER_ID 
		    -- AND SESS_ID =@SESS_ID

			
			
		END

		IF @FLAG = 'L'

		BEGIN 
		 
			DELETE FROM USER_SESS_LOG WHERE [USER_ID] = @USER_ID 
		    AND SESS_ID =@SESS_ID

			
			
		END
                  

              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END
GO
PRINT N'Creating [dbo].[UPDATE_UserApplRoleByID]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_UserApplRoleByID]
(
	@USER_APPL_ROLE_KEY		INTEGER,
	@ROW_STS_KEY            INTEGER,
	@APPL_ROLE_KEY          INTEGER,
	@USER_ID				INTEGER,
	@UPDT_USER_ID			INTEGER  
				  

)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON


BEGIN 
      UPDATE dbo.USER_APPL_ROLE 
      SET    ROW_STS_KEY		 =   @ROW_STS_KEY,
			 APPL_ROLE_KEY       =   @APPL_ROLE_KEY,
	         USER_ID			 =   @USER_ID,
	         UPDT_DT			 =	 GETDATE(),
	         UPDT_USER_ID		 =   @UPDT_USER_ID
      WHERE  USER_APPL_ROLE_KEY  =   @USER_APPL_ROLE_KEY
END 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;
GO
PRINT N'Creating [dbo].[UPDATE_USERCLNTSRVCASGN]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_USERCLNTSRVCASGN](
	   
	   @USER_CLNT_SRVC_ASGN_KEY		INTEGER,
	   @USER_ID						INTEGER,
	   @USER_STRT_DT				DATETIME,
	   @USER_END_DT					DATETIME,
	   @SECUR_SRVC_CD				VARCHAR(30),
	   @CLNT_ENGMT_CD				VARCHAR(30),
	   @ROW_STS_KEY					INTEGER,
	   @UPDT_USER_ID				INTEGER
       
       )

       AS
       BEGIN
              BEGIN TRY

              SET NOCOUNT ON

					UPDATE  USER_CLNT_SRVC_ASGN
					SET		[USER_ID]				  =  @USER_ID,
							USER_STRT_DT			  =  @USER_STRT_DT,
							USER_END_DT				  =  @USER_END_DT,
							SECUR_SRVC_CD             =  @SECUR_SRVC_CD,
							CLNT_ENGMT_CD			  =  @CLNT_ENGMT_CD,
							ROW_STS_KEY				  =  @ROW_STS_KEY,
							UPDT_DT					  =  GETDATE(),
							UPDT_USER_ID			  =  @UPDT_USER_ID

					WHERE   USER_CLNT_SRVC_ASGN_KEY   =	 @USER_CLNT_SRVC_ASGN_KEY

                    SELECT @@ROWCOUNT AS RETVAL

              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END
GO
PRINT N'Creating [dbo].[UPDATE_UserEmailLogByKey]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_UserEmailLogByKey]
(
	@SND_SUC_IND				INTEGER,
	@RESND_CNT				    INTEGER,
	@NTF_MSG_KEY  				INTEGER,
	@EMAIL_SND_DT				DATETIME			  

)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON


BEGIN 
      UPDATE dbo.USER_EMAIL_LOG
      SET    SND_SUC_IND			=   @SND_SUC_IND,
			 RESND_CNT				=   @RESND_CNT,
			 EMAIL_SND_DT			=   @EMAIL_SND_DT
      WHERE  NTF_MSG_KEY			=   @NTF_MSG_KEY
END 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[UPDATE_UserPasswordDetailsbyUID]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_UserPasswordDetailsbyUID](
       @USER_ID            INTEGER
       
       )

       AS
       BEGIN
              BEGIN TRY

              SET NOCOUNT ON

                  UPDATE	USER_PRFL
                  SET		PSWD_RSET_DT	=   GETDATE(),
							UPDT_DT			=	GETDATE(),
							UPDT_USER_ID	=	@USER_ID,
							LST_LOGIN_DT    =   GETDATE(),
							USER_VERF_IND	=   1
							
				  WHERE		USER_ID			=   @USER_ID

                  SELECT @@ROWCOUNT AS RETVAL

              END TRY

              BEGIN CATCH
                     
                     DECLARE @ErrorNumber INT = ERROR_NUMBER();
                     DECLARE @ErrorLine INT = ERROR_LINE();
                     DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
                     DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
                     DECLARE @ErrorState INT = ERROR_STATE();

                     PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
                     PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

                     RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
                END CATCH
              
       END
GO
PRINT N'Creating [dbo].[UPDATE_UserSecurDtlByID]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_UserSecurDtlByID]
(
	@USER_SECUR_DTL_KEY	INTEGER,
	@ROW_STS_KEY		INTEGER,
	@USER_ID			INTEGER,
	@SECUR_QUES_KEY		INTEGER,
	@ANS_TXT			VARCHAR(1000),
	@SEQ_ORDR_NBR		INTEGER,
	@UPDT_USER_ID		INTEGER
				  

)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON


BEGIN 
      UPDATE dbo.USER_SECUR_DTL 
      SET    ROW_STS_KEY		 =   @ROW_STS_KEY,
			 SECUR_QUES_KEY		 =   @SECUR_QUES_KEY,
			 ANS_TXT	         =   @ANS_TXT,
			 SEQ_ORDR_NBR	     =   @SEQ_ORDR_NBR,
			 UPDT_DT			 =	 GETDATE(),
	         UPDT_USER_ID		 =   @UPDT_USER_ID
      WHERE  USER_SECUR_DTL_KEY	 =   @USER_SECUR_DTL_KEY
      AND	 USER_ID			 =   @USER_ID
      
	  SELECT @@ROWCOUNT AS RETVAL
END 

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
PRINT N'Creating [dbo].[UPDATE_VERIFICATIONINDICATORBYUSERID]...';


GO
CREATE PROCEDURE [dbo].[UPDATE_VERIFICATIONINDICATORBYUSERID]
(
      @UserID			INT
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

      UPDATE USER_PRFL
      SET    USER_VERF_IND	=  1,PSWD_RSET_DT=GETDATE()
      WHERE  [USER_ID]      = @UserID
      
      SELECT @@ROWCOUNT Retval

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END
GO
/*
Post-Deployment Script Template							
--------------------------------------------------------------------------------------
 This file contains SQL statements that will be appended to the build script.		
 Use SQLCMD syntax to include a file in the post-deployment script.			
 Example:      :r .\myfile.sql								
 Use SQLCMD syntax to reference a variable in the post-deployment script.		
 Example:      :setvar TableName MyTable							
               SELECT * FROM [$(TableName)]					
--------------------------------------------------------------------------------------
*/

--Reference tables


SET IDENTITY_INSERT [dbo].[MSTR_LKP] ON 

INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (1, N'Row Status', N'Active', N'Row Level Status', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (2, N'Row Status', N'Deactive', N'Row Level Status', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (3, N'Row Status', N'Delete', N'Row Level Status', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (4, N'Permission Type', N'Module', N'Module Level Permission', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (5, N'Permission Type', N'Menu', N'Menu Level Permission', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (6, N'Permission Type', N'Submenu', N'Submenu Level Permission', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (7, N'Permission Type', N'Permission', N'Last Level Permission', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (8, N'Organization Type', N'Internal', N'Organization Type Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (9, N'Organization Type', N'Client', N'Organization Type Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (10, N'Organization Type', N'Partner', N'Organization Type Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (11, N'Organization Industry', N'Life Sciences', N'Organization Industry Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (12, N'Organization Industry', N'Payer', N'Organization Industry Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (13, N'Organization Industry', N'Provider', N'Organization Industry Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (14, N'User Activation', N'Lock', N'User Activation information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (15, N'User Activation', N'Unlock', N'User Activation information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (16, N'User Type', N'Internal', N'User Type Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (17, N'User Type', N'Client', N'User Type Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (18, N'User Type', N'Partner', N'User Type Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (19, N'User Type', N'Administrator', N'User Type Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (20, N'Security Question', N'What is your mother''s maiden name?', N'Security Questions Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (21, N'Security Question', N'What city were you born in?', N'Security Questions Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (22, N'Security Question', N'What was your first pet''s name?', N'Security Questions Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (23, N'Security Question', N'What was the name of your high school?', N'Security Questions Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (24, N'Security Question', N'What was your childhood nickname?', N'Security Questions Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (25, N'Security Question', N'What is the name of your favorite childhood friend?', N'Security Questions Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (26, N'Security Question', N'What is the middle name of your youngest child?', N'Security Questions Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (27, N'Security Question', N'In what city did you meet your spouse/significant other?', N'Security Questions Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (28, N'Security Question', N'What school did you attend for sixth grade?', N'Security Questions Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (29, N'Security Question', N'What is your maternal grandmother''s maiden name?', N'Security Questions Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (30, N'Security Question', N'What is your paternal grandfather''s maiden name?', N'Security Questions Information', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (31, N'Source', N'Trip IP360', N'The tool used for Network Vulnerability Scans as a part of the Network Vulnerability Assessment.', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (32, N'Source', N'CISCO', N'CISCO Partner', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (33, N'Source', N'Web Inspect', N'The tool used for Application Vulnerability Scans as a part of the Application Vulnerability Assessment.', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (34, N'Source', N'PPMO', N'Project & Portfolio Management Optics', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (35, N'Source', N'Manual', N'User created data', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (36, N'File Status', N'New', N'Whenever user uploads a file it wil be in new status', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (37, N'File Status', N'To Be Processed', N'Once a service locked it will be in To be Processed status', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (38, N'File Status', N'ETL in Process', N'Once ETL picks the file it will be in ETL in Processs status', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (39, N'File Status', N'ETL Success', N'Once the file successfully processed by ETL it will in Success status', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (40, N'File Status', N'ETL Failure', N'If any error occured during the ETL process it will be in Failure status', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (41, N'File Status', N'Archive', N'Once the file moved to archive it will be in Archive status', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (42, N'Document Type', N'Data', N'Document Type to upload a file', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (43, N'Document Type', N'Reports', N'Document Type to upload a file', 1, GETDATE(), 1, NULL, NULL)
INSERT [dbo].[MSTR_LKP] ([MSTR_LKP_KEY], [LKP_ENTY_TYP_NM], [LKP_ENTY_NM], [LKP_ENTY_DESC], [ACTV_IND], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (44, N'Document Type', N'Evidence', N'Document Type to upload a file', 1, GETDATE(), 1, NULL, NULL)
SET IDENTITY_INSERT [dbo].[MSTR_LKP] OFF




SET IDENTITY_INSERT [dbo].[ORG] ON 

INSERT [dbo].[ORG] ([ORG_KEY], [ROW_STS_KEY], [PAR_ORG_KEY], [ORG_TYP_KEY], [ORG_INDUS_KEY], [ORG_NM], [STR_ADR_1], [STR_ADR_2], [CTY_NM], [ST_NM], [CNTRY_NM], [PST_CD], [ORG_DESC], [STS_COMMT_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (1, 1, NULL, 8, NULL, N'OPTUM', N'Address1', N'Address2', N'City', N'State', N'US', N'11111', N'Description', NULL, GETDATE(), NULL, NULL, NULL)
SET IDENTITY_INSERT [dbo].[ORG] OFF


INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ABW', N'Aruba', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'AFG', N'Afghanistan', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'AGO', N'Angola', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'AIA', N'Anguilla', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ALA', N'Aland Islands', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ALB', N'Albania', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'AND', N'Andorra', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ANT', N'Netherlands Antilles', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ARE', N'United Arab Emirates', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ARG', N'Argentina', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ARM', N'Armenia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ASM', N'American Samoa', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ATG', N'Antigua and Barbuda', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'AUS', N'Australia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'AUT', N'Austria', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'AZE', N'Azerbaijan', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BDI', N'Burundi', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BEL', N'Belgium', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BEN', N'Benin', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BFA', N'Burkina Faso', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BGD', N'Bangladesh', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BGR', N'Bulgaria', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BHR', N'Bahrain', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BHS', N'Bahamas', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BIH', N'Bosnia and Herzegovina', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BLM', N'Saint-BarthTlemy', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BLR', N'Belarus', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BLZ', N'Belize', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BMU', N'Bermuda', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BOL', N'Bolivia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BRA', N'Brazil', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BRB', N'Barbados', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BRN', N'Brunei Darussalam', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BTN', N'Bhutan', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'BWA', N'Botswana', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'CAF', N'Central African Republic', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'CAN', N'Canada', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'CHE', N'Switzerland', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'CHL', N'Chile', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'CHN', N'China', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'CIV', N'C(te d''Ivoire', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'CMR', N'Cameroon', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'COD', N'Democratic Republic of the Congo', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'COG', N'Congo', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'COK', N'Cook Islands', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'COL', N'Colombia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'COM', N'Comoros', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'CPV', N'Cape Verde', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'CRI', N'Costa Rica', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'CUB', N'Cuba', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'CYM', N'Cayman Islands', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'CYP', N'Cyprus', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'CZE', N'Czech Republic', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'DEU', N'Germany', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'DJI', N'Djibouti', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'DMA', N'Dominica', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'DNK', N'Denmark', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'DOM', N'Dominican Republic', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'DZA', N'Algeria', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ECU', N'Ecuador', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'EGY', N'Egypt', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ERI', N'Eritrea', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ESH', N'Western Sahara', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ESP', N'Spain', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'EST', N'Estonia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ETH', N'Ethiopia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'FIN', N'Finland', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'FJI', N'Fiji', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'FLK', N'Falkland Islands (Malvinas)', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'FRA', N'France', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'FRO', N'Faeroe Islands', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'FSM', N'Micronesia, Federated States of', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GAB', N'Gabon', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GBR', N'United Kingdom of Great Britain and Northern Ireland', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GEO', N'Georgia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GGY', N'Guernsey', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GHA', N'Ghana', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GIB', N'Gibraltar', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GIN', N'Guinea', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GLP', N'Guadeloupe', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GMB', N'Gambia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GNB', N'Guinea-Bissau', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GNQ', N'Equatorial Guinea', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GRC', N'Greece', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GRD', N'Grenada', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GRL', N'Greenland', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GTM', N'Guatemala', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GUF', N'French Guiana', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GUM', N'Guam', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'GUY', N'Guyana', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'HKG', N'Hong Kong Special Administrative Region of China', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'HND', N'Honduras', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'HRV', N'Croatia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'HTI', N'Haiti', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'HUN', N'Hungary', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'IDN', N'Indonesia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'IMN', N'Isle of Man', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'IND', N'India', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'IRL', N'Ireland', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'IRN', N'Iran, Islamic Republic of', NULL, NULL, NULL, NULL)
GO
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'IRQ', N'Iraq', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ISL', N'Iceland', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ISR', N'Israel', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ITA', N'Italy', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'JAM', N'Jamaica', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'JEY', N'Jersey', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'JOR', N'Jordan', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'JPN', N'Japan', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'KAZ', N'Kazakhstan', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'KEN', N'Kenya', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'KGZ', N'Kyrgyzstan', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'KHM', N'Cambodia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'KIR', N'Kiribati', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'KNA', N'Saint Kitts and Nevis', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'KOR', N'Republic of Korea', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'KWT', N'Kuwait', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'LAO', N'Lao People''s Democratic Republic', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'LBN', N'Lebanon', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'LBR', N'Liberia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'LBY', N'Libyan Arab Jamahiriya', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'LCA', N'Saint Lucia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'LIE', N'Liechtenstein', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'LKA', N'Sri Lanka', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'LSO', N'Lesotho', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'LTU', N'Lithuania', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'LUX', N'Luxembourg', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'LVA', N'Latvia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MAC', N'Macao Special Administrative Region of China', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MAF', N'Saint-Martin (French part)', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MAR', N'Morocco', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MCO', N'Monaco', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MDA', N'Moldova', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MDG', N'Madagascar', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MDV', N'Maldives', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MEX', N'Mexico', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MHL', N'Marshall Islands', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MKD', N'The former Yugoslav Republic of Macedonia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MLI', N'Mali', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MLT', N'Malta', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MMR', N'Myanmar', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MNE', N'Montenegro', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MNG', N'Mongolia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MNP', N'Northern Mariana Islands', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MOZ', N'Mozambique', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MRT', N'Mauritania', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MSR', N'Montserrat', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MTQ', N'Martinique', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MUS', N'Mauritius', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MWI', N'Malawi', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MYS', N'Malaysia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MYT', N'Mayotte', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'NAM', N'Namibia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'NCL', N'New Caledonia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'NER', N'Niger', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'NFK', N'Norfolk Island', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'NGA', N'Nigeria', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'NIC', N'Nicaragua', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'NIU', N'Niue', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'NLD', N'Netherlands', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'NOR', N'Norway', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'NPL', N'Nepal', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'NRU', N'Nauru', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'NZL', N'New Zealand', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'OMN', N'Oman', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'PAK', N'Pakistan', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'PAN', N'Panama', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'PCN', N'Pitcairn', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'PER', N'Peru', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'PHL', N'Philippines', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'PLW', N'Palau', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'PNG', N'Papua New Guinea', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'POL', N'Poland', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'PRI', N'Puerto Rico', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'PRK', N'Democratic People''s Republic of Korea', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'PRT', N'Portugal', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'PRY', N'Paraguay', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'PSE', N'Occupied Palestinian Territory', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'PYF', N'French Polynesia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'QAT', N'Qatar', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'REU', N'R_union', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ROU', N'Romania', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'RUS', N'Russian Federation', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'RWA', N'Rwanda', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SAU', N'Saudi Arabia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SDN', N'Sudan', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SEN', N'Senegal', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SGP', N'Singapore', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SHN', N'Saint Helena', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SJM', N'Svalbard and Jan Mayen Islands', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SLB', N'Solomon Islands', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SLE', N'Sierra Leone', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SLV', N'El Salvador', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SMR', N'San Marino', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SOM', N'Somalia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SPM', N'Saint Pierre and Miquelon', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SRB', N'Serbia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'STP', N'Sao Tome and Principe', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SUR', N'Suriname', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SVK', N'Slovakia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SVN', N'Slovenia', NULL, NULL, NULL, NULL)
GO
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SWE', N'Sweden', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SWZ', N'Swaziland', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SYC', N'Seychelles', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SYR', N'Syrian Arab Republic', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TCA', N'Turks and Caicos Islands', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TCD', N'Chad', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TGO', N'Togo', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'THA', N'Thailand', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TJK', N'Tajikistan', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TKL', N'Tokelau', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TKM', N'Turkmenistan', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TLS', N'Timor-Leste', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TON', N'Tonga', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TTO', N'Trinidad and Tobago', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TUN', N'Tunisia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TUR', N'Turkey', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TUV', N'Tuvalu', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TZA', N'United Republic of Tanzania', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'UGA', N'Uganda', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'UKR', N'Ukraine', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'URY', N'Uruguay', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'USA', N'United States of America', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'UZB', N'Uzbekistan', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'VAT', N'Holy See', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'VCT', N'Saint Vincent and the Grenadines', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'VEN', N'Venezuela (Bolivarian Republic of)', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'VGB', N'British Virgin Islands', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'VIR', N'United States Virgin Islands', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'VNM', N'Viet Nam', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'VUT', N'Vanuatu', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'WLF', N'Wallis and Futuna Islands', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'WSM', N'Samoa', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'YEM', N'Yemen', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ZAF', N'South Africa', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ZMB', N'Zambia', NULL, NULL, NULL, NULL)
INSERT [dbo].[CNTRY_CD] ([CNTRY_CD], [CNTRY_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'ZWE', N'Zimbabwe', NULL, NULL, NULL, NULL)



SET IDENTITY_INSERT [dbo].[ST_CD] ON 

INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (1, N'AL', N'USA', N'Alabama', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (2, N'AK', N'USA', N'Alaska', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (3, N'AZ', N'USA', N'Arizona', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (4, N'AR', N'USA', N'Arkansas', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (5, N'CA', N'USA', N'California', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (6, N'CO', N'USA', N'Colorado', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (7, N'CT', N'USA', N'Connecticut', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (8, N'DE', N'USA', N'Delaware', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (9, N'DC', N'USA', N'District of Columbia', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (10, N'FL', N'USA', N'Florida', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (11, N'GA', N'USA', N'Georgia', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (12, N'HI', N'USA', N'Hawaii', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (13, N'ID', N'USA', N'Idaho', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (14, N'IL', N'USA', N'Illinois', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (15, N'IN', N'USA', N'Indiana', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (16, N'IA', N'USA', N'Iowa', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (17, N'KS', N'USA', N'Kansas', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (18, N'KY', N'USA', N'Kentucky', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (19, N'LA', N'USA', N'Louisiana', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (20, N'ME', N'USA', N'Maine', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (21, N'MD', N'USA', N'Maryland', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (22, N'MA', N'USA', N'Massachusetts', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (23, N'MI', N'USA', N'Michigan', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (24, N'MN', N'USA', N'Minnesota', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (25, N'MS', N'USA', N'Mississippi', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (26, N'MO', N'USA', N'Missouri', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (27, N'MT', N'USA', N'Montana', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (28, N'NE', N'USA', N'Nebraska', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (29, N'NV', N'USA', N'Nevada', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (30, N'NH', N'USA', N'New Hampshire', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (31, N'NJ', N'USA', N'New Jersey', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (32, N'NM', N'USA', N'New Mexico', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (33, N'NY', N'USA', N'New York', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (34, N'NC', N'USA', N'North Carolina', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (35, N'ND', N'USA', N'North Dakota', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (36, N'OH', N'USA', N'Ohio', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (37, N'OK', N'USA', N'Oklahoma', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (38, N'OR', N'USA', N'Oregon', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (39, N'PA', N'USA', N'Pennsylvania', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (40, N'RI', N'USA', N'Rhode Island', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (41, N'SC', N'USA', N'South Carolina', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (42, N'SD', N'USA', N'South Dakota', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (43, N'TN', N'USA', N'Tennessee', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (44, N'TX', N'USA', N'Texas', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (45, N'UT', N'USA', N'Utah', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (46, N'VT', N'USA', N'Vermont', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (47, N'VA', N'USA', N'Virginia', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (48, N'WA', N'USA', N'Washington', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (49, N'WV', N'USA', N'West Virginia', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (50, N'WI', N'USA', N'Wisconsin', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (51, N'WY', N'USA', N'Wyoming', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (52, N'AS', N'USA', N'American Samoa', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (53, N'GU', N'USA', N'Guam', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (54, N'MP', N'USA', N'Northern Mariana Islands', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (55, N'PR', N'USA', N'Puerto Rico', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (56, N'UM', N'USA', N'U.S. Minor Outlying Islands', NULL, NULL, NULL, NULL)
INSERT [dbo].[ST_CD] ([ST_CD_KEY], [ST_CD], [CNTRY_CD], [ST_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (57, N'VI', N'USA', N'U.S. Virgin Islands', NULL, NULL, NULL, NULL)
SET IDENTITY_INSERT [dbo].[ST_CD] OFF




SET IDENTITY_INSERT [dbo].[PERMSN] ON 

INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (1, 1, NULL, 4, N'Administration', N'Administration Module', N'Administration', 1, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (2, 1, NULL, 4, N'Client Engagement', N'Client Engagement Module', N'Client Engagement', 1, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (3, 1, NULL, 4, N'Engagement Data Upload', N'Engagement Data Upload Module', N'Engagement Data Upload', 1, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (4, 1, NULL, 4, N'Analyst', N'Analyst Module', N'Analyst', 1, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (5, 1, NULL, 4, N'Reporting', N'Reporting Module', N'Reporting', 1, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (6, 1, 1, 5, N'Manage Roles & Permissions', N'Manage Roles & Permissions Menu', N'Manage Roles & Permissions', 1, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (7, 1, 1, 5, N'Manage Organizations', N'Manage Client Information Menu', N'Manage Client Information', 0, 2, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (8, 1, 1, 5, N'Manage Users', N'Manage Partner Information Menu', N'Manage Partner Information', 0, 3, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (9, 1, 1, 5, N'User Activation', N'User Activation Menu', N'User Activation', 0, 3, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (10, 1, 6, 6, N'Manage Roles', N'Manage Roles Sub Menu', N'Manage Roles', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (11, 1, 6, 6, N'Manage Permission Groups', N'Manage Permission Groups Sub Menu', N'Manage Permission Groups', 0, 2, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (12, 1, 6, 6, N'View Detailed Permissions', N'View Detailed Permissions Sub Menu', N'View Detailed Permissions', 0, 3, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (13, 1, 10, 7, N'Add Role', N'Roles Permission', N'Add Role', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (14, 1, 10, 7, N'Update Role', N'Roles Permission', N'Update Role', 0, 2, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (15, 1, 10, 7, N'View Role', N'Roles Permission', N'View Role', 0, 3, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (16, 1, 10, 7, N'Delete Role', N'Roles Permission', N'Delete Role', 0, 4, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (17, 1, 11, 7, N'Add Permission Group', N'Add Permission Group Permission', N'Add Permission Group', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (18, 1, 11, 7, N'Update Permission Group', N'Update Permission Group Permission', N'Update Permission Group', 0, 2, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (19, 1, 11, 7, N'View Permission Group', N'View Permission Group Permission', N'View Permission Group', 0, 3, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (20, 1, 12, 7, N'View Detailed Permissions Permission', N'View Detailed Permissions Permission', N'View Detailed Permissions Permission', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (21, 1, 7, 6, N'Manage Organizations Sub Menu', N'Manage Organizations Sub Menu', N'Manage Organizations Sub Menu', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (22, 1, 21, 7, N'Add Organization', N'Add Organization Permission', N'Add Organization', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (23, 1, 21, 7, N'Update Organization', N'Update Organization Permission', N'Update Organization', 0, 2, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (24, 1, 21, 7, N'View Organization', N'View Organization Permission', N'View Organization', 0, 3, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (25, 1, 8, 6, N'Manage Users Sub menu', N'Manage Users Sub Menu', N'Manage Users Sub menu', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (26, 1, 25, 7, N'Add User', N'Add User Permission', N'Add User', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (27, 1, 25, 7, N'Update User', N'Update User Permission', N'Update User', 0, 2, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (28, 1, 25, 7, N'View User', N'View User Permission', N'View User', 0, 3, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (29, 1, 9, 6, N'User Activation Sub menu', N'User Activation Sub Menu', N'User Activation Sub menu', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (30, 1, 29, 7, N'Update User Activation', N'Update User Activation Permission', N'Update User Activation', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (31, 1, 29, 7, N'View User Activation', N'View User Activation Permission', N'View User Activation', 0, 2, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (32, 1, 11, 7, N'Delete Permission Group', N'Delete Permission Group Permission', N'Delete Permission Group', 0, 3, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (33, 1, 12, 7, N'Edit Detailed Permission Description', N'Edit Detailed Permissions Description', N'Edit Detailed Permission Description', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (34, 1, 2, 5, N'Client Engagement', N'Client Engagement Menu', N'Client Engagement', 1, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (35, 1, 34, 6, N'Manage Engagements', N'Manage Engagements Submenu', N'Manage Engagements', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (36, 1, 35, 7, N'Add Engagement', N'Add Engagement permission', N'Add Engagement', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (37, 1, 35, 7, N'Edit Engagement', N'Edit Engagement permission', N'Edit Engagement', 0, 2, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (38, 1, 35, 7, N'View Engagement', N'View Engagement permission', N'View Engagement', 0, 3, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (39, 1, 35, 7, N'Delete Engagement', N'Delete Engagement permission', N'Delete Engagement', 0, 4, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (40, 1, 35, 7, N'Add User to Service', N'Add User to Service permission', N'Add User to Service', 0, 5, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (41, 1, 35, 7, N'Edit User to Service', N'Edit User to Service permission', N'Edit User to Service', 0, 6, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (42, 1, 35, 7, N'View User to Service', N'View User to Service permission', N'View User to Service', 0, 7, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (43, 1, 35, 7, N'Delete User to Service', N'Delete User to Service permission', N'Delete User to Service', 0, 8, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (44, 1, 35, 7, N'Unlock Service Data', N'Unlock Service Data permission', N'Unlock Service Data', 0, 9, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (45, 1, 3, 5, N'Engagement Data upload', N'Engagement Data upload Menu', N'Engagement Data upload', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (46, 1, 45, 6, N'Engagement Data upload', N'Engagement Data upload Submenu', N'Engagement Data upload', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (47, 1, 46, 7, N'Add Document upload', N'Add Engagement Data upload permission', N'Add Engagement Data upload', 0, 1, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (48, 1, 46, 7, N'Edit Document upload', N'Edit Engagement Data upload permission', N'Edit Engagement Data upload', 0, 2, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (49, 1, 46, 7, N'View Document upload', N'View Engagement Data upload permission', N'View Engagement Data upload', 0, 3, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (50, 1, 46, 7, N'Delete Document upload', N'Delete Engagement Data upload permission', N'Delete Engagement Data upload', 0, 4, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[PERMSN] ([PERMSN_KEY], [ROW_STS_KEY], [PAR_PERMSN_KEY], [PERMSN_TYP_KEY], [PERMSN_NM], [PERMSN_DESC], [DSPL_TXT], [CHLD_XST_IND], [SEQ_ORDR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (51, 1, 46, 7, N'Lock Service Data', N'Lock Service Data', N'Lock Service Data', 0, 5, GETDATE(), NULL, NULL, NULL)
SET IDENTITY_INSERT [dbo].[PERMSN] OFF



SET IDENTITY_INSERT [dbo].[USER_PRFL] ON 

INSERT [dbo].[USER_PRFL] ([USER_ID], [ROW_STS_KEY], [ORG_KEY], [USER_TYP_KEY], [FST_NM], [LST_NM], [MIDL_NM], [JOB_TITL_NM], [EMAIL_ID], [TEL_NBR], [MAC_ADR_NM], [USER_VERF_IND], [LCK_IND], [LOGIN_ATMPT_CNT], [LST_LOGIN_DT], [PSWD_RSET_DT], [STS_COMMT_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (1, 1, 1, 19, N'Super', N'Ten', N'', N'', N'ossadmin@healthitplus.net', N'', NULL, 1, 0, 0, GETDATE(), GETDATE(), NULL, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[USER_PRFL] ([USER_ID], [ROW_STS_KEY], [ORG_KEY], [USER_TYP_KEY], [FST_NM], [LST_NM], [MIDL_NM], [JOB_TITL_NM], [EMAIL_ID], [TEL_NBR], [MAC_ADR_NM], [USER_VERF_IND], [LCK_IND], [LOGIN_ATMPT_CNT], [LST_LOGIN_DT], [PSWD_RSET_DT], [STS_COMMT_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (2, 1, 1, 19, N'ETL', N'Admin', N'', N'', N'odsdevadmin@healthitplus.net', N'', NULL, 1, 0, 0, GETDATE(), GETDATE(), NULL, GETDATE(), NULL, NULL, NULL)
INSERT [dbo].[USER_PRFL] ([USER_ID], [ROW_STS_KEY], [ORG_KEY], [USER_TYP_KEY], [FST_NM], [LST_NM], [MIDL_NM], [JOB_TITL_NM], [EMAIL_ID], [TEL_NBR], [MAC_ADR_NM], [USER_VERF_IND], [LCK_IND], [LOGIN_ATMPT_CNT], [LST_LOGIN_DT], [PSWD_RSET_DT], [STS_COMMT_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (3, 1, 1, 19, N'CStest', N'10', N'', N'', N'ossdevadmin@healthitplus.net', N'', NULL, 1, 0, 0, GETDATE(), GETDATE(), NULL, GETDATE(), NULL, NULL, NULL)
SET IDENTITY_INSERT [dbo].[USER_PRFL] OFF


SET IDENTITY_INSERT [dbo].[NTF_MSG] ON 

INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (1, 1, N'MAIL_USER_ACCOUNT_CREATION', N'Your Optum Security Web Portal account has been created', N'$$IMG$$<br/><br/>
Dear $$USER_NAME$$,
<br/><br/>
Thank you for enrolling and welcome to the Optum Security Web Portal.
<br/><br/>
Your Optum Security Web Portal account with User Name <b>$$USER_EMAIL$$</b> has been successfully created.
<br/>
An e-mail notifying you of your account activation will be sent shortly.
<br/><br/>
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (2, 1, N'MAIL_USER_PASSWORD_CREATION', N'Your Optum Security Web Portal account password', N'$$IMG$$<br/><br/>
Dear $$USER_NAME$$,
<br/><br/>
Your Optum Security Web Portal one-time use password is <b>$$USER_PASSWORD$$</b>.
<br/><br/>
You may login to Optum Security Web Portal with your previously sent username and this password.
<br/>
Once you log in successfully, you will be required to change this password. 
<br/>
<br/><br/>
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (3, 1, N'MAIL_USER_PROFILE_PASSWORD_UPDATE', N'Your Optum Security Web Portal profile has been updated', N'$$IMG$$<br/><br/>
Dear $$USER_NAME_1$$,
<br/><br/>
Your Optum Security Web Portal profile "<b>$$USER_NAME_2$$</b>" has been successfully updated. <br/>
You may log in to Optum Security Web Portal to access your account.
<br/><br/>
If you did not make changes to your account profile, then please contact the administrator immediately.
<br/>
<br/>
<br/><br/>
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (4, 1, N'MAIL_USER_ACCOUNT_DEACTIVATED', N'Your Optum Security Web Portal account has been deactivated', N'$$IMG$$<br/><br/>
Dear $$USER_NAME_1$$,
<br/><br/>
Your Optum Security Web Portal account with Username "<b>$$USER_NAME_2$$</b>" has been deactivated. <br/>
<br/><br/>
Please contact the administrator for assistance.
<br/>
<br/>
<br/><br/>
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (5, 1, N'MAIL_USER_ACCOUNT_REACTIVATED', N'Your Optum Security Web Portal account has been reactivated', N'$$IMG$$<br/><br/>
Dear $$USER_NAME_1$$,
<br/><br/>
Your Optum Security Web Portal account with Username "<b>$$USER_NAME_2$$</b>" has been reactivated and the one-time use Password is <b>$$PASSWORD$$</b>. <br/>
<br/><br/>
You may login to the Optum Security Web Portal with your username and this password.
<br/>
Once you log in successfully, you will be required to change this password.
<br/>
<br/><br/>
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (6, 1, N'MAIL_USER_ACCOUNT_LOCKED', N'Your Optum Security Web Portal account has been locked', N'$$IMG$$<br/><br/>
Dear $$USER_NAME_1$$,
<br/><br/>
Your Optum Security Web Portal profile "<b>$$USER_NAME_2$$</b>" has been locked. <br/>
<br/><br/>
Please contact the administrator for assistance.
<br/>
<br/>
<br/><br/>
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (7, 1, N'MAIL_USER_ACCOUNT_UNLOCKED', N'Your Optum Security Web Portal account has been unlocked', N'$$IMG$$<br/><br/>
Dear $$USER_NAME_1$$,
<br/><br/>
Your Optum Security Web Portal profile "<b>$$USER_NAME_2$$</b>" has been unlocked and the one-time use Password is <b>$$PASSWORD$$</b>. <br/>
<br/><br/>
You may login to the Optum Security Web Portal with your username and this password.
<br/>
Once you log in successfully, you will be required to change this password.
<br/>
<br/><br/>
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (8, 1, N'EMAIL_USER_LOGGEING_FROM_DIFFERENT_BROWSER', N'New log in from <browser/device>', N'$$IMG$$<br/><br/>
Dear $$USER_NAME$$,
<br/><br/>
Your Optum Security Web Portal account with Username "$$USER_NAME$$" was just logged in from a new <device/browser>.
<br/>
If that was not you, please contact the administrator.
<br/><br/>
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (9, 1, N'MAIL_ENGMNT_CREATION', N'Engagement $$ENG_CODE$$ has been created', N'$$IMG$$<br/><br/>
Dear $$USER_NAME$$,
<br/><br/>
The engagement “$$ENG_CODE$$” has been successfully created with the following engagement details:
<br/><br/>
Engagement Code: $$ENG_CODE$$<br/>
Client Name: $$CLNT_ORG_NAME$$<br/>
Engagement Package Name: $$PKG_NAME$$<br/>
Projected Engagement Start Date: $$ENG_STRT_DATE$$<br/>
<br/><br/>
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (10, 1, N'MAIL_ENGMNT_UPDATION', N'Engagement details for the “$$ENG_CODE$$” have been updated', N'$$IMG$$<br/><br/>
Dear $$USER_NAME$$,
<br/><br/>
The engagement details for the “$$ENG_CODE$$” have been successfully updated by $$UPDATED_USER_NAME$$ as follows:
<br/><br/>
Engagement Code: $$ENG_CODE$$<br/>
Client Name: $$CLNT_ORG_NAME$$<br/>
Engagement Package Name: $$PKG_NAME$$<br/>
Projected Engagement Start Date: $$ENG_STRT_DATE$$<br/>
<br/><br/>
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (11, 1, N'MAIL_ASSIGN_CLIENT_ENGMNT_LEAD', N'Point of Contact for Engagement “$$ENG_CODE$$” ', N'$$IMG$$<br/><br/>
Dear $$USER_NAME$$,
<br/><br/>
You have been assigned as the Engagement Lead for the engagement “$$ENG_CODE$$”. If you believe that this assignment has been done in error, please contact the system administrator immediately.
<br/>
Please contact the Help Desk at $$HELPDESK_EMAIL$$ $$CONTACT_NUMBER$$.
<br/><br/>
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (12, 1, N'MAIL_ASSIGN_PARTNER_ENGMNT_LEAD', N'Engagement “$$ENG_CODE$$” is assigned', N'$$IMG$$<br/><br/>
Dear $$USER_NAME$$,
<br/><br/>
You have been assigned as the Engagement Lead for the engagement “$$ENG_CODE$$”. If you believe that this assignment has been done in error, please contact the system administrator immediately.
<br/>
Please contact the Help Desk at $$HELPDESK_EMAIL$$ $$CONTACT_NUMBER$$.
<br/><br/>
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (13, 1, N'MAIL_ASSIGN_USER_SCHDULE', N'Engagement “$$ENG_CODE$$” has been scheduled', N'$$IMG$$<br/><br/>
Dear $$USER_NAME$$,
<br/><br/>
You have been assigned to engagement “$$ENG_CODE$$” by $$ENGMENT_SCHEDULED_BY$$.
<br/>
Please log in with your Username and Password to begin performing your tasks as specified by $$ENGMENT_LEAD$$. Your Engagement Lead will monitor your progress to ensure your service(s) draft document(s) are received no later than $$ENGMENT_END_DATE$$.<br/><br/>
<br/>
Please contact your Engagement Lead $$ENGMENT_LEAD$$ with any questions or concerns.
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (14, 1, N'MAIL_REASSIGN_USER_SCHDULE', N'Engagement “$$ENG_CODE$$” has been reassigned', N'$$IMG$$<br/><br/>
Dear $$USER_NAME$$,
<br/><br/>
The engagement “$$ENG_CODE$$” has been reassigned to another $$ANLST_OR_PRTNR$$ $$ASSIGNED_TO$$. You are not required to take any further action unless reassigned.
<br/>
Please ensure that any documents, files, or relevant work materials relating to this engagement are transferred to $$ASSIGNED_BY$$ and removed from your laptop or personal network drives.
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (15, 1, N'MAIL_ENGMNT_DUE_DATE_PASSED', N'Engagement “$$ENG_CODE$$” Service due date has passed', N'$$IMG$$<br/><br/>
Dear $$USER_NAME$$,
<br/><br/>
The engagement “$$ENG_CODE$$ $$SERVICE_NAME$$” due date has passed.
<br/>
Please contact $$ENGMENT_LEAD$$ to provide them an estimated completion date. You should log in to the Security Web Portal to complete your tasks as soon as possible.
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (16, 1, N'MAIL_ENGMNT_DUE_DATE_APRCHD', N'Engagement “$$ENG_CODE$$” due date is approaching', N'$$IMG$$<br/><br/>
Dear $$USER_NAME$$,
<br/><br/>
The engagement “$$ENG_CODE$$” is within 15 days of the completion date.
<br/>
Please contact your Director of Commercial Services to provide an estimated completion date. Log in to your engagement $$ENG_CODE$$ to view its details.
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (17, 1, N'MAIL_TO_ENGMNT_LEAD_DUE_DATE_PASSED', N'Engagement “$$ENG_CODE$$” due date has passed', N'$$IMG$$<br/><br/>
Dear $$USER_NAME$$,
<br/><br/>
The engagement “$$ENG_CODE$$” due date has passed.
<br/>
Please contact your Director of Commercial Services to provide them with an estimated completion date. Log in to your engagement $$ENG_CODE$$ to view its details.
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (18, 1, N'MAIL_TO_ADMIN_IF_USER_CHANGES_PASSWORD_FIRST_TIME', N'Password for Optum Security Web Portal account with Username “$$USER_NAME$$” has been changed', N'$$IMG$$<br/><br/>
Dear $$ADMIN_NAME$$,
<br/><br/>
The password for Optum Security Web Portal account with Username "$$USER_NAME$$" has been successfully changed.
<br/>
If the user has not made this change, then the user may contact you.
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (19, 1, N'MAIL_USER_PROFILE_PASSWORD_CHANGED', N'Your Optum Security Web Portal password has been changed', N'$$IMG$$<br/><br/>
Dear $$USER_NAME$$,
<br/><br/>
The password for your Optum Security Web Portal account with Username "$$USER_NAME$$" has been successfully changed. You may log in to Optum Security Web Portal with your new password
<br/><br/>
If you did not make this change, then please contact the administrator immediately.
<br/>
<br/>
<br/><br/>
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (20, 1, N'MAIL_TO_ENGMNTPARTNER_LEAD_FILE_UPLOAD', N'File for Engagement “$$ENG_CODE$$” has been uploaded', N'$$IMG$$<br/><br/>
Dear $$ENG_LEAD$$,
<br/>
The file for engagement “$$ENG_CODE$$” “$$SERVICE_NAME$$” has been uploaded by “$$CLIENT_USER$$”. 
<br/>
Please log in with your Username and Password to proceed further.
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
INSERT [dbo].[NTF_MSG] ([NTF_MSG_KEY], [ROW_STS_KEY], [NTF_TYP_NM], [MSG_SBJ_TXT], [MSG_CNTN_TXT], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (21, 1, N'MAIL_TO_ENGMNTPARTNER_LEAD_ON_ALL_SERVICES_UPLOAD', N'File for all services of Engagement “$$ENG_CODE$$” has been uploaded', N'$$IMG$$<br/><br/>
Dear $$ENG_LEAD$$,
<br/>
The file for all services of engagement “$$ENG_CODE$$” has been uploaded by “$$USER_NAME$$”. 
<br/>
Please log in with your Username and Password to view its details.
<br/><br/>
Regards,<br/>
System Administrator<br/>
Optum Technology.<br/><br/>

<center>&#169; Optum Inc., $$YEAR$$ - All Rights Reserved.</center><br/><br/><br/>', GETDATE(), 1, NULL, NULL)
SET IDENTITY_INSERT [dbo].[NTF_MSG] OFF




INSERT [dbo].[SECUR_PKG] ([SECUR_PKG_CD], [ROW_STS_KEY], [SECUR_PKG_NM], [SECUR_PKG_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'HC', 1, N'Health Check', N'This Service Package offering will look to exploit a client''s security vulnerabilities, which may lead to a security breach.  The Package will also include a proactive analysis to determine if a breach has already occurred or is in progress.  This information will allow the guidance in the prioritization and remediation of risks with the client''s current environment.  Examples of Security Assessment Services for Health Check include, but are not limited to; Threat Hunting, Limited Red Team Exercises, and Vulnerability Scanning.   (Point In Time)', NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_PKG] ([SECUR_PKG_CD], [ROW_STS_KEY], [SECUR_PKG_NM], [SECUR_PKG_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TR', 1, N'Triage', N'This Service Package offering will focus on identification of people, process and technology risks associated with the evolving cyber threat environment.  This includes mapping of risk findings to various compliance frameworks such as HIPAA/HITECH, PCI DSS, FDA regulations etc.  A "Get Well Plan" with an actionable Roadmap will be a deliveriable out of this Service Package.  Examples of Security Assessment Services for Triage include, but are not limited to; Penetration Testing, Security Risk Assessment, Wireless Risk Assessment, Vulnerability Scanning, Compliance and Remediation.  (Point In Time)', NULL, NULL, NULL, NULL)



INSERT [dbo].[SECUR_SRVC] ([SECUR_SRVC_CD], [ROW_STS_KEY], [SECUR_SRVC_NM], [SECUR_SRVC_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'AC', 1, N'Architecture Compliance Assessment', N'The IT Architecture assessment evaluates a client''s enterprise current state against it''s 3-5 year Strategic IT Plan to define changes required to satisfy future state architectural and control-based requirements.', NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_SRVC] ([SECUR_SRVC_CD], [ROW_STS_KEY], [SECUR_SRVC_NM], [SECUR_SRVC_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'AV', 1, N'Application Vulnerability Assessment', N'A application vulnerability assessment is the process of testing, reviewing and analyzing an application and related components for possible security vulnerabilities. It is used to evaluate the application architecture against possible threats through the application layer.', NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_SRVC] ([SECUR_SRVC_CD], [ROW_STS_KEY], [SECUR_SRVC_NM], [SECUR_SRVC_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'NV', 1, N'Network Vulnerability Assessment', N'A network vulnerability assessment is the process of testing, reviewing and analyzing computer network assets for possible security vulnerabilities. It is used to evaluate the security architecture and defense of a network against possible threats.', NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_SRVC] ([SECUR_SRVC_CD], [ROW_STS_KEY], [SECUR_SRVC_NM], [SECUR_SRVC_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'PT', 1, N'Penetration Testing', N'Penetration testing (pentest) is a short term and targeted exercise against the computer system to exploint vulnerabilities and gain access to the client''s IT infrastructure, application, network, and data component''s.', NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_SRVC] ([SECUR_SRVC_CD], [ROW_STS_KEY], [SECUR_SRVC_NM], [SECUR_SRVC_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'RT', 1, N'Limited Red Team Assessment', N'Limited Red Team assessments consist of an independent group of highly skilled security Subject Matter Experts that will similate an attack against the clients digital infrastructure to test the client''s security defenses.', NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_SRVC] ([SECUR_SRVC_CD], [ROW_STS_KEY], [SECUR_SRVC_NM], [SECUR_SRVC_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'SR', 1, N'Security Risk Assessment', N'A Security Risk Assessment is an objective analysis of the effectiveness of the current security controls that protect an organization''s assets and determination of the probability of losses to assets.', NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_SRVC] ([SECUR_SRVC_CD], [ROW_STS_KEY], [SECUR_SRVC_NM], [SECUR_SRVC_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TH', 1, N'Threat Hunting (Cyber Intelligence Services)', N'Threat Hunting refers to a network discovery against known Indicators of Compromise (IoC).  The goals is to identify malicious activity beyond traditional security solutions.  It can include both manual and machine-assisted tecniques.', NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_SRVC] ([SECUR_SRVC_CD], [ROW_STS_KEY], [SECUR_SRVC_NM], [SECUR_SRVC_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'WR', 1, N'Wireless Risk Assessment', N'A Wireless Risk Assessment is the process of testing, reviewing and analyzing a wireless network and related components to ensure the network  is hardened against unauthorized actors attacking the client''s resources.', NULL, NULL, NULL, NULL)



INSERT [dbo].[SECUR_PKG_OFR] ([SECUR_PKG_CD], [SECUR_SRVC_CD], [ROW_STS_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'HC', N'AV', 1, NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_PKG_OFR] ([SECUR_PKG_CD], [SECUR_SRVC_CD], [ROW_STS_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'HC', N'NV', 1, NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_PKG_OFR] ([SECUR_PKG_CD], [SECUR_SRVC_CD], [ROW_STS_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'HC', N'RT', 1, NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_PKG_OFR] ([SECUR_PKG_CD], [SECUR_SRVC_CD], [ROW_STS_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'HC', N'TH', 1, NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_PKG_OFR] ([SECUR_PKG_CD], [SECUR_SRVC_CD], [ROW_STS_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TR', N'AC', 1, NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_PKG_OFR] ([SECUR_PKG_CD], [SECUR_SRVC_CD], [ROW_STS_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TR', N'AV', 1, NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_PKG_OFR] ([SECUR_PKG_CD], [SECUR_SRVC_CD], [ROW_STS_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TR', N'NV', 1, NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_PKG_OFR] ([SECUR_PKG_CD], [SECUR_SRVC_CD], [ROW_STS_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TR', N'PT', 1, NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_PKG_OFR] ([SECUR_PKG_CD], [SECUR_SRVC_CD], [ROW_STS_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TR', N'SR', 1, NULL, NULL, NULL, NULL)
INSERT [dbo].[SECUR_PKG_OFR] ([SECUR_PKG_CD], [SECUR_SRVC_CD], [ROW_STS_KEY], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'TR', N'WR', 1, NULL, NULL, NULL, NULL)



SET IDENTITY_INSERT [dbo].[CVSS_SCOR_MTRC] ON 

INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (1, N'2.0', N'Base Metric', N'Access Vector', N'AV', N'Local', N'L', CAST(0.395 AS Decimal(10, 3)), 1, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (2, N'2.0', N'Base Metric', N'Access Vector', N'AV', N'Adjacent_Network', N'A', CAST(0.646 AS Decimal(10, 3)), 1, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (3, N'2.0', N'Base Metric', N'Access Vector', N'AV', N'Network', N'N', CAST(1.000 AS Decimal(10, 3)), 1, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (4, N'2.0', N'Base Metric', N'Access Complexity', N'AC', N'High', N'H', CAST(0.350 AS Decimal(10, 3)), 2, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (5, N'2.0', N'Base Metric', N'Access Complexity', N'AC', N'Medium', N'M', CAST(0.610 AS Decimal(10, 3)), 2, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (6, N'2.0', N'Base Metric', N'Access Complexity', N'AC', N'Low', N'L', CAST(0.710 AS Decimal(10, 3)), 2, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (7, N'2.0', N'Base Metric', N'Authentication', N'Au', N'Multiple_Instances', N'M', CAST(0.450 AS Decimal(10, 3)), 3, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (8, N'2.0', N'Base Metric', N'Authentication', N'Au', N'Single_Instance', N'S', CAST(0.560 AS Decimal(10, 3)), 3, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (9, N'2.0', N'Base Metric', N'Authentication', N'Au', N'None', N'N', CAST(0.704 AS Decimal(10, 3)), 3, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (10, N'2.0', N'Base Metric', N'Confidentiality Impact', N'C', N'None', N'N', CAST(0.000 AS Decimal(10, 3)), 4, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (11, N'2.0', N'Base Metric', N'Confidentiality Impact', N'C', N'Partial', N'P', CAST(0.275 AS Decimal(10, 3)), 4, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (12, N'2.0', N'Base Metric', N'Confidentiality Impact', N'C', N'Complete', N'C', CAST(0.660 AS Decimal(10, 3)), 4, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (13, N'2.0', N'Base Metric', N'Integrity Impact', N'I', N'None', N'N', CAST(0.000 AS Decimal(10, 3)), 5, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (14, N'2.0', N'Base Metric', N'Integrity Impact', N'I', N'Partial', N'P', CAST(0.275 AS Decimal(10, 3)), 5, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (15, N'2.0', N'Base Metric', N'Integrity Impact', N'I', N'Complete', N'C', CAST(0.660 AS Decimal(10, 3)), 5, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (16, N'2.0', N'Base Metric', N'Availability Impact', N'A', N'None', N'N', CAST(0.000 AS Decimal(10, 3)), 6, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (17, N'2.0', N'Base Metric', N'Availability Impact', N'A', N'Partial', N'P', CAST(0.275 AS Decimal(10, 3)), 6, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (18, N'2.0', N'Base Metric', N'Availability Impact', N'A', N'Complete', N'C', CAST(0.660 AS Decimal(10, 3)), 6, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (19, N'2.0', N'Temporal Metric', N'Exploitability', N'E', N'Not Defined', N'ND', CAST(1.000 AS Decimal(10, 3)), 7, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (20, N'2.0', N'Temporal Metric', N'Exploitability', N'E', N'Unproven that exploit exists', N'U', CAST(0.850 AS Decimal(10, 3)), 7, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (21, N'2.0', N'Temporal Metric', N'Exploitability', N'E', N'Proof of concept code', N'POC', CAST(0.900 AS Decimal(10, 3)), 7, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (22, N'2.0', N'Temporal Metric', N'Exploitability', N'E', N'Functional exploit exists', N'F', CAST(0.950 AS Decimal(10, 3)), 7, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (23, N'2.0', N'Temporal Metric', N'Exploitability', N'E', N'High', N'H', CAST(1.000 AS Decimal(10, 3)), 7, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (24, N'2.0', N'Temporal Metric', N'Remediation LeveL', N'RL', N'Not Defined', N'ND', CAST(1.000 AS Decimal(10, 3)), 8, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (25, N'2.0', N'Temporal Metric', N'Remediation LeveL', N'RL', N'Official fix', N'OF', CAST(0.870 AS Decimal(10, 3)), 8, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (26, N'2.0', N'Temporal Metric', N'Remediation LeveL', N'RL', N'Temporary fix', N'TF', CAST(0.900 AS Decimal(10, 3)), 8, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (27, N'2.0', N'Temporal Metric', N'Remediation LeveL', N'RL', N'Workaround', N'W', CAST(0.950 AS Decimal(10, 3)), 8, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (28, N'2.0', N'Temporal Metric', N'Remediation LeveL', N'RL', N'Unavailable', N'U', CAST(1.000 AS Decimal(10, 3)), 8, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (29, N'2.0', N'Temporal Metric', N'Report Confidence', N'RC', N'Not Defined', N'ND', CAST(1.000 AS Decimal(10, 3)), 9, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (30, N'2.0', N'Temporal Metric', N'Report Confidence', N'RC', N'Unconfirmed', N'UC', CAST(0.900 AS Decimal(10, 3)), 9, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (31, N'2.0', N'Temporal Metric', N'Report Confidence', N'RC', N'Uncorroborated', N'UR', CAST(0.950 AS Decimal(10, 3)), 9, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (32, N'2.0', N'Temporal Metric', N'Report Confidence', N'RC', N'Confirmed', N'C', CAST(1.000 AS Decimal(10, 3)), 9, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (33, N'2.0', N'Environmental Metric', N'Collateral Damage Potential', N'CDP', N'Not Defined', N'ND', CAST(0.000 AS Decimal(10, 3)), 10, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (34, N'2.0', N'Environmental Metric', N'Collateral Damage Potential', N'CDP', N'None', N'N', CAST(0.000 AS Decimal(10, 3)), 10, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (35, N'2.0', N'Environmental Metric', N'Collateral Damage Potential', N'CDP', N'Low (light loss)', N'L', CAST(0.100 AS Decimal(10, 3)), 10, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (36, N'2.0', N'Environmental Metric', N'Collateral Damage Potential', N'CDP', N'Low-Medium', N'LM', CAST(0.300 AS Decimal(10, 3)), 10, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (37, N'2.0', N'Environmental Metric', N'Collateral Damage Potential', N'CDP', N'Medium-High', N'MH', CAST(0.400 AS Decimal(10, 3)), 10, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (38, N'2.0', N'Environmental Metric', N'Collateral Damage Potential', N'CDP', N'High (catastrophic loss)', N'H', CAST(0.500 AS Decimal(10, 3)), 10, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (39, N'2.0', N'Environmental Metric', N'Target Distribution', N'TD', N'Not Defined', N'ND', CAST(1.000 AS Decimal(10, 3)), 11, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (40, N'2.0', N'Environmental Metric', N'Target Distribution', N'TD', N'None 0%', N'N', CAST(0.000 AS Decimal(10, 3)), 11, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (41, N'2.0', N'Environmental Metric', N'Target Distribution', N'TD', N'Low 0-25%', N'L', CAST(0.250 AS Decimal(10, 3)), 11, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (42, N'2.0', N'Environmental Metric', N'Target Distribution', N'TD', N'Medium 26-75%', N'M', CAST(0.750 AS Decimal(10, 3)), 11, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (43, N'2.0', N'Environmental Metric', N'Target Distribution', N'TD', N'High 76-100%', N'H', CAST(1.000 AS Decimal(10, 3)), 11, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (44, N'2.0', N'Environmental Metric', N'Confidentiality Requirement', N'CR', N'Not Defined', N'ND', CAST(1.000 AS Decimal(10, 3)), 12, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (45, N'2.0', N'Environmental Metric', N'Confidentiality Requirement', N'CR', N'Low', N'L', CAST(0.500 AS Decimal(10, 3)), 12, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (46, N'2.0', N'Environmental Metric', N'Confidentiality Requirement', N'CR', N'Medium', N'M', CAST(1.000 AS Decimal(10, 3)), 12, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (47, N'2.0', N'Environmental Metric', N'Confidentiality Requirement', N'CR', N'High', N'H', CAST(1.510 AS Decimal(10, 3)), 12, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (48, N'2.0', N'Environmental Metric', N'Integrity Requirement', N'IR', N'Not Defined', N'ND', CAST(1.000 AS Decimal(10, 3)), 13, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (49, N'2.0', N'Environmental Metric', N'Integrity Requirement', N'IR', N'Low', N'L', CAST(0.500 AS Decimal(10, 3)), 13, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (50, N'2.0', N'Environmental Metric', N'Integrity Requirement', N'IR', N'Medium', N'M', CAST(1.000 AS Decimal(10, 3)), 13, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (51, N'2.0', N'Environmental Metric', N'Integrity Requirement', N'IR', N'High', N'H', CAST(1.510 AS Decimal(10, 3)), 13, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (52, N'2.0', N'Environmental Metric', N'Availability Requirement', N'AR', N'Not Defined', N'ND', CAST(1.000 AS Decimal(10, 3)), 14, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (53, N'2.0', N'Environmental Metric', N'Availability Requirement', N'AR', N'Low', N'L', CAST(0.500 AS Decimal(10, 3)), 14, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (54, N'2.0', N'Environmental Metric', N'Availability Requirement', N'AR', N'Medium', N'M', CAST(1.000 AS Decimal(10, 3)), 14, NULL, NULL, 2, GETDATE())
INSERT [dbo].[CVSS_SCOR_MTRC] ([CVSS_SCOR_MTRC_KEY], [CVSS_VER], [MTRC_GRP_NM], [MTRC_NM], [MTRC_VCTR_CD], [MTRC_VAL_TXT], [MTRC_VAL_VCTR_CD], [MTRC_VAL_SCOR], [VCTR_ORDR], [UPDT_USER_ID], [UPDT_DT], [CREAT_USER_ID], [CREAT_DT]) VALUES (55, N'2.0', N'Environmental Metric', N'Availability Requirement', N'AR', N'High', N'H', CAST(1.510 AS Decimal(10, 3)), 14, NULL, NULL, 2, GETDATE())
SET IDENTITY_INSERT [dbo].[CVSS_SCOR_MTRC] OFF



INSERT [dbo].[RISK_PRBL] ([RISK_PRBL_CD], [RISK_PRBL_NM], [RISK_PRBL_ORDR_NBR], [CVSS_EXPLT_SCOR_MIN], [CVSS_EXPLT_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'A', N'AlmostCertain', 5, CAST(9.00 AS Decimal(10, 2)), CAST(10.00 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)
INSERT [dbo].[RISK_PRBL] ([RISK_PRBL_CD], [RISK_PRBL_NM], [RISK_PRBL_ORDR_NBR], [CVSS_EXPLT_SCOR_MIN], [CVSS_EXPLT_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'I', N'Informational', 0, CAST(0.00 AS Decimal(10, 2)), CAST(0.00 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)
INSERT [dbo].[RISK_PRBL] ([RISK_PRBL_CD], [RISK_PRBL_NM], [RISK_PRBL_ORDR_NBR], [CVSS_EXPLT_SCOR_MIN], [CVSS_EXPLT_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'L', N'Likely', 4, CAST(7.00 AS Decimal(10, 2)), CAST(8.90 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)
INSERT [dbo].[RISK_PRBL] ([RISK_PRBL_CD], [RISK_PRBL_NM], [RISK_PRBL_ORDR_NBR], [CVSS_EXPLT_SCOR_MIN], [CVSS_EXPLT_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'P', N'Possible', 3, CAST(4.00 AS Decimal(10, 2)), CAST(6.90 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)
INSERT [dbo].[RISK_PRBL] ([RISK_PRBL_CD], [RISK_PRBL_NM], [RISK_PRBL_ORDR_NBR], [CVSS_EXPLT_SCOR_MIN], [CVSS_EXPLT_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'R', N'Rare', 1, CAST(0.10 AS Decimal(10, 2)), CAST(1.90 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)
INSERT [dbo].[RISK_PRBL] ([RISK_PRBL_CD], [RISK_PRBL_NM], [RISK_PRBL_ORDR_NBR], [CVSS_EXPLT_SCOR_MIN], [CVSS_EXPLT_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'U', N'Unlikely', 2, CAST(2.00 AS Decimal(10, 2)), CAST(3.90 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)



INSERT [dbo].[RMDTN_CST_EFFRT] ([RMDTN_CST_EFFRT_CD], [RMDTN_CST_EFFRT_NM], [RMDTN_CST_EFFRT_ORDR_NBR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'H', N'High', 3, GETDATE(), 2, NULL, NULL)
INSERT [dbo].[RMDTN_CST_EFFRT] ([RMDTN_CST_EFFRT_CD], [RMDTN_CST_EFFRT_NM], [RMDTN_CST_EFFRT_ORDR_NBR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'L', N'Low', 1, GETDATE(), 2, NULL, NULL)
INSERT [dbo].[RMDTN_CST_EFFRT] ([RMDTN_CST_EFFRT_CD], [RMDTN_CST_EFFRT_NM], [RMDTN_CST_EFFRT_ORDR_NBR], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'M', N'Medium', 2, GETDATE(), 2, NULL, NULL)



INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'OTH', N'Other', N'Used for user entered root cause information as free form text.', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'OWASP-A1', N'Injection', N'Injection flaws, such as SQL, OS, and LDAP injection occur when untrusted data is sent to an interpreter as part of a command or query. The attacker’s hostile data can trick the interpreter into executing unintended commands or accessing data without proper authorization.', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'OWASP-A10', N'Unvalidated Redirects and Forwards', N'Web applications frequently redirect and forward users to other pages and websites, and use untrusted data to determine the destination pages. Without proper validation, attackers can redirect victims to phishing or malware sites, or use forwards to access unauthorized pages.', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'OWASP-A2', N'Broken Authentication and Session Management', N'Application functions related to authentication and session management are often not implemented correctly, allowing attackers to compromise passwords, keys, or session tokens, or to exploit other implementation flaws to assume other users’ identities.', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'OWASP-A3', N'Cross-Site Scripting (XSS)', N'XSS flaws occur whenever an application takes untrusted data and sends it to a web browser without proper validation or escaping. XSS allows attackers to execute scripts in the victim’s browser which can hijack user sessions, deface web sites, or redirect the user to malicious sites.', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'OWASP-A4', N'Insecure Direct Object References', N'A direct object reference occurs when a developer exposes a reference to an internal implementation object, such as a file, directory, or database key. Without an access control check or other protection, attackers can manipulate these references to access unauthorized data.', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'OWASP-A5', N'Security Misconfiguration', N'Good security requires having a secure configuration defined and deployed for the application, frameworks, application server, web server, database server, and platform. Secure settings should be defined, implemented, and maintained, as defaults are often insecure. Additionally, software should be kept up to date.', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'OWASP-A6', N'Sensitive Data Exposure', N'Many web applications do not properly protect sensitive data, such as credit cards, tax IDs, and authentication credentials. Attackers may steal or modify such weakly protected data to conduct credit card fraud, identity theft, or other crimes. Sensitive data deserves extra protection such as encryption at rest or in transit, as well as special precautions when exchanged with the browser.', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'OWASP-A7', N'Missing Function Level Access Control', N'Most web applications verify function level access rights before making that functionality visible in the UI. However, applications need to perform the same access control checks on the server when each function is accessed. If requests are not verified, attackers will be able to forge requests in order to access functionality without proper authorization.', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'OWASP-A8', N'Cross-Site Request Forgery (CSRF)', N'A CSRF attack forces a logged-on victim’s browser to send a forged HTTP request, including the victim’s session cookie and any other automatically included authentication information, to a vulnerable web application. This allows the attacker to force the victim’s browser to generate requests the vulnerable application thinks are legitimate requests from the victim.', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'OWASP-A9', N'Using Components with Known Vulnerabilities', N'Components, such as libraries, frameworks, and other software modules, almost always run with full privileges. If a vulnerable component is exploited, such an attack can facilitate serious data loss or server takeover. Applications using components with known vulnerabilities may undermine application defenses and enable a range of possible attacks and impacts.', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'RCA-1', N'Insufficient Patch Management', N'Insufficient patch management, such as failing to apply patches in a timely fashion or failing to apply patches to all vulnerable systems', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'RCA-2', N'Insufficient Threat Management', N'Insufficient threat management, including outdated antivirus signatures, ineffective spam filtering, and firewall rulesets that do not enforce the organization’s security policy', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'RCA-3', N'Lack of sSecurity Baselines', N'Lack of security baselines, such as inconsistent security configuration settings on similar systems', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'RCA-4', N'Poor Integration of Security into the System Development Life Cycle', N'Poor integration of security into the system development life cycle, such as missing or unsatisfied security requirements and vulnerabilities in organization-developed application code', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'RCA-5', N'Security Architecture Weaknesses', N'Security architecture weaknesses, such as security technologies not being properly integrated into the infrastructure (e.g., poor placement, insufficient coverage, or outdated technologies), or poor placement of systems that increases their risk of compromise', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'RCA-6', N'Inadequate Incident Response Procedures', N'Inadequate incident response procedures, such as delayed responses to penetration testing activities', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'RCA-7', N'Inadequate Training', N'Inadequate training, both for end users (e.g., failure to recognize social engineering and phishing attacks, deployment of rogue wireless access points) and for network and system administrators (e.g., deployment of weakly secured systems, poor security maintenance)', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[ROOT_CAUS_ANLYS] ([ROOT_CAUS_ANLYS_CD], [ROOT_CAUS_ANLYS_NM], [ROOT_CAUS_ANLYS_DESC], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'RCA-8', N'Lack of sSecurity Policies or Policy Enforcement', N'Lack of security policies or policy enforcement (e.g., open ports, active services, unsecured protocols, rogue hosts, weak passwords).', GETDATE(), 2, NULL, NULL)



INSERT [dbo].[VULN_IMP] ([VULN_IMP_CD], [VULN_IMP_NM], [VULN_IMP_ORDR_NBR], [CVSS_IMP_SCOR_MIN], [CVSS_IMP_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'C', N'Catastrophic', 5, CAST(9.00 AS Decimal(10, 2)), CAST(10.00 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)
INSERT [dbo].[VULN_IMP] ([VULN_IMP_CD], [VULN_IMP_NM], [VULN_IMP_ORDR_NBR], [CVSS_IMP_SCOR_MIN], [CVSS_IMP_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'I', N'Insignificant', 1, CAST(0.10 AS Decimal(10, 2)), CAST(1.90 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)
INSERT [dbo].[VULN_IMP] ([VULN_IMP_CD], [VULN_IMP_NM], [VULN_IMP_ORDR_NBR], [CVSS_IMP_SCOR_MIN], [CVSS_IMP_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'IF', N'Informational', 0, CAST(0.00 AS Decimal(10, 2)), CAST(0.00 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)
INSERT [dbo].[VULN_IMP] ([VULN_IMP_CD], [VULN_IMP_NM], [VULN_IMP_ORDR_NBR], [CVSS_IMP_SCOR_MIN], [CVSS_IMP_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MD', N'Moderate', 3, CAST(4.00 AS Decimal(10, 2)), CAST(6.90 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)
INSERT [dbo].[VULN_IMP] ([VULN_IMP_CD], [VULN_IMP_NM], [VULN_IMP_ORDR_NBR], [CVSS_IMP_SCOR_MIN], [CVSS_IMP_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MI', N'Minor', 2, CAST(2.00 AS Decimal(10, 2)), CAST(3.90 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)
INSERT [dbo].[VULN_IMP] ([VULN_IMP_CD], [VULN_IMP_NM], [VULN_IMP_ORDR_NBR], [CVSS_IMP_SCOR_MIN], [CVSS_IMP_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'MJ', N'Major', 4, CAST(7.00 AS Decimal(10, 2)), CAST(8.90 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)



INSERT [dbo].[VULN_INSTC_STS] ([VULN_INSTC_STS_CD], [VULN_INSTC_STS_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'C', N'Closed', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[VULN_INSTC_STS] ([VULN_INSTC_STS_CD], [VULN_INSTC_STS_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'CE', N'Closed With Exception', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[VULN_INSTC_STS] ([VULN_INSTC_STS_CD], [VULN_INSTC_STS_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'D', N'Duplicate', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[VULN_INSTC_STS] ([VULN_INSTC_STS_CD], [VULN_INSTC_STS_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'FP', N'False Positive', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[VULN_INSTC_STS] ([VULN_INSTC_STS_CD], [VULN_INSTC_STS_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'O', N'Open', GETDATE(), 2, NULL, NULL)
INSERT [dbo].[VULN_INSTC_STS] ([VULN_INSTC_STS_CD], [VULN_INSTC_STS_NM], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'V', N'Validated', GETDATE(), 2, NULL, NULL)



INSERT [dbo].[VULN_SEV] ([VULN_SEV_CD], [VULN_SEV_NM], [VULN_SEV_ORDR_NBR], [CVSS_BAS_SCOR_MIN], [CVSS_BAS_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'C', N'Critical', 4, CAST(9.00 AS Decimal(10, 2)), CAST(10.00 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)
INSERT [dbo].[VULN_SEV] ([VULN_SEV_CD], [VULN_SEV_NM], [VULN_SEV_ORDR_NBR], [CVSS_BAS_SCOR_MIN], [CVSS_BAS_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'H', N'High', 3, CAST(7.00 AS Decimal(10, 2)), CAST(8.90 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)
INSERT [dbo].[VULN_SEV] ([VULN_SEV_CD], [VULN_SEV_NM], [VULN_SEV_ORDR_NBR], [CVSS_BAS_SCOR_MIN], [CVSS_BAS_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'I', N'Informational', 0, CAST(0.00 AS Decimal(10, 2)), CAST(0.00 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)
INSERT [dbo].[VULN_SEV] ([VULN_SEV_CD], [VULN_SEV_NM], [VULN_SEV_ORDR_NBR], [CVSS_BAS_SCOR_MIN], [CVSS_BAS_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'L', N'Low', 1, CAST(0.10 AS Decimal(10, 2)), CAST(3.90 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)
INSERT [dbo].[VULN_SEV] ([VULN_SEV_CD], [VULN_SEV_NM], [VULN_SEV_ORDR_NBR], [CVSS_BAS_SCOR_MIN], [CVSS_BAS_SCOR_MAX], [CREAT_DT], [CREAT_USER_ID], [UPDT_DT], [UPDT_USER_ID]) VALUES (N'M', N'Medium', 2, CAST(4.00 AS Decimal(10, 2)), CAST(6.90 AS Decimal(10, 2)), GETDATE(), 2, NULL, NULL)



--Reference table: Having dependency with dbo.MSTR_LKP table


INSERT INTO dbo.CD_XREF (SRC_KEY,REFERRENCE_TYP_NM,TGT_REF_CD,SRC_REF_CD,SRC_REF_NM, CREAT_DT,CREAT_USER_ID,UPDT_DT,UPDT_USER_ID) VALUES

((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Risk Probability', 'A','5','Critical', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Risk Probability', 'L','4','High', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Risk Probability', 'P','3','Medium', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Risk Probability', 'U','2','Low', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Risk Probability', 'R','1','Very Low', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Risk Probability', 'I','0','Info', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Risk Probability', 'A', '--','Almost Certain', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Risk Probability', 'L', '--','Likely', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Risk Probability', 'P','--','Possible', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Risk Probability', 'U','--','Unlikely', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Risk Probability', 'R','--','Rare', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Impact', 'C','9','Critical', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Impact', 'MJ','8','Very High', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Impact', 'MJ','7','High', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Impact', 'MO','5','Medium', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Impact', 'MI','3','Low', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Impact', 'I','1','Very Low', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Impact', 'IF','0','Info', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Impact', 'C','--','Catastrophic', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Impact', 'MJ','--','Major', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Impact', 'MO','--','Moderate', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Impact', 'MI','--','Minor', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Impact', 'I','--','Insignificant', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Severity', 'C','5','Critical', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Severity', 'H','4','High', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Severity', 'M','3','Medium', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Severity', 'L','2','Low', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Severity', 'L','1','Very Low', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Severity', 'I','0','Informational', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Severity', 'H','--','High Risk', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Severity', 'M','--','Medium Risk', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Vulnerability Severity', 'L','--','Low Risk', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Remediation Cost Effort', 'H','5','Very High', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Remediation Cost Effort', 'H','4','High', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Remediation Cost Effort', 'M','3','Medium', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Remediation Cost Effort', 'L','2','Low', GETDATE(), 2, null, null ),
((SELECT MSTR_LKP_KEY FROM dbo.MSTR_LKP WHERE LKP_ENTY_TYP_NM = 'Source' and LKP_ENTY_NM = 'CISCO'),'Remediation Cost Effort', 'L','1','Very Low', GETDATE(), 2, null, null );



GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'stg.CISCO_PEN_TST_STG'), OBJECT_ID(N'stg.CISCO_SECUR_RISK_ASES_STG'), OBJECT_ID(N'dbo.APPL_FL_UPLOAD_LOG'), OBJECT_ID(N'dbo.APPL_ROLE'), OBJECT_ID(N'dbo.APPL_ROLE_PERMSN_GRP'), OBJECT_ID(N'dbo.CD_XREF'), OBJECT_ID(N'dbo.CLNT_ENGMT'), OBJECT_ID(N'dbo.CLNT_ENGMT_USER_ASGN'), OBJECT_ID(N'dbo.CLNT_REL_ENGMT_ID'), OBJECT_ID(N'dbo.CLNT_SECUR_SRVC_ENGMT'), OBJECT_ID(N'dbo.CLNT_VULN_INSTC'), OBJECT_ID(N'dbo.CLNT_VULN_SECUR_CTL'), OBJECT_ID(N'dbo.CVE_SECUR_CTL_MAP'), OBJECT_ID(N'dbo.ETL_ERR_LOG'), OBJECT_ID(N'dbo.NTF_MSG'), OBJECT_ID(N'dbo.ORG'), OBJECT_ID(N'dbo.ORG_CNTC'), OBJECT_ID(N'dbo.ORG_LOC'), OBJECT_ID(N'dbo.ORG_REL_ID'), OBJECT_ID(N'dbo.PERMSN'), OBJECT_ID(N'dbo.PERMSN_GRP'), OBJECT_ID(N'dbo.PERMSN_GRP_ASSOC'), OBJECT_ID(N'dbo.SECUR_CTL'), OBJECT_ID(N'dbo.SECUR_CTL_MAP'), OBJECT_ID(N'dbo.SECUR_PKG'), OBJECT_ID(N'dbo.SECUR_PKG_OFR'), OBJECT_ID(N'dbo.SECUR_SRVC'), OBJECT_ID(N'dbo.ST_CD'), OBJECT_ID(N'dbo.USER_APPL_ROLE'), OBJECT_ID(N'dbo.USER_CLNT_SRVC_ASGN'), OBJECT_ID(N'dbo.USER_EMAIL_LOG'), OBJECT_ID(N'dbo.USER_EVNT_LOG'), OBJECT_ID(N'dbo.USER_PRFL'), OBJECT_ID(N'dbo.USER_SECUR_DTL'), OBJECT_ID(N'dbo.USER_SESS_LOG'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
