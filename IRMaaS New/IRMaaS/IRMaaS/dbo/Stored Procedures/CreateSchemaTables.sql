CREATE PROCEDURE [dbo].[CreateSchemaTables]
(
 @SchemaName VARCHAR(50),
 @ORG_KEY	 INTEGER
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON

DECLARE @Query1 VARCHAR(max)
DECLARE @Query2 VARCHAR(max)

SET @Query1= '
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '''+ @SchemaName+'''  AND TABLE_NAME =''CLNT_VULN_INSTC'')
BEGIN
CREATE TABLE '+ @SchemaName+ '.CLNT_VULN_INSTC 
(
	[CLNT_VULN_INSTC_KEY] [int] IDENTITY(1,1) NOT NULL,
	[ROW_STS_KEY] [int] NOT NULL,
	[ORG_KEY] [int] NOT NULL,
	[CLNT_ENGMT_CD] [varchar](30) NOT NULL,
	[SECUR_SRVC_CD] [varchar](10) NOT NULL,
	[VULN_SRC_KEY] [int] NOT NULL,
	[VULN_INSTC_STS_CD] [varchar](3) NOT NULL,
	[VULN_SEV_CD] [varchar](3) NULL,
	[VULN_IMP_CD] [varchar](3) NULL,
	[RISK_PRBL_CD] [varchar](3) NULL,
	[RMDTN_CST_EFFRT_CD] [varchar](3) NULL,
	[VULN_CATGY_CD] [varchar](10) NULL,
	[OWASP_TOP_10_KEY] [int] NULL,
	[CVE_ID] [varchar](25) NULL,
	[OS_KEY] [int] NULL,
	[SRC_VULN_SCAN_ID] [varchar](150) NULL,
	[SRC_VULN_SCAN_STRT_DT] [datetime] NULL,
	[SRC_VULN_SCAN_END_DT] [datetime] NULL,
	[SRC_VULN_INSTC_ID] [varchar](150) NULL,
	[SRC_VULN_ID] [varchar](150) NULL,
	[VULN_NM] [varchar](255) NOT NULL,
	[VULN_DESC] [text] NULL,
	[VULN_CREAT_DT] [datetime] NOT NULL,
	[IPADR] [varchar](39) NULL,
	[PORT_NBR] [int] NULL,
	[SRC_ADVS_TXT] [varchar](1024) NULL,
	[SRC_VULN_BAS_SCOR] [decimal](10, 2) NULL,
	[VULN_BAS_SCOR] [decimal](10, 2) NULL,
	[VULN_IMP_SUB_SCOR] [decimal](10, 2) NULL,
	[VULN_EXPLT_SUB_SCOR] [decimal](10, 2) NULL,
	[VULN_TMPRL_SCOR] [decimal](10, 2) NULL,
	[VULN_ENV_SCOR] [decimal](10, 2) NULL,
	[VULN_OVALL_SCOR] [decimal](10, 2) NULL,
	[VULN_VCTR_TXT] [varchar](100) NULL,
	[NTWK_NM] [varchar](150) NULL,
	[PRTCL_NM] [varchar](255) NULL,
	[HST_NM] [varchar](150) NULL,
	[DOM_NM] [varchar](150) NULL,
	[SFTW_NM] [varchar](150) NULL,
	[APPL_URL] [nvarchar](2000) NULL,
	[NETBIOS_NM] [varchar](150) NULL,
	[MAC_ADR_NM] [varchar](150) NULL,
	[VULN_TECH_COMMT_TXT] [text] NULL,
	[VULN_IMP_COMMT_TXT] [text] NULL,
	[RECOM_COMMT_TXT] [text] NULL,
	[ROOT_CAUS_COMMT_TXT] [text] NULL,
	[APPL_FL_UPLOAD_LOG_KEY] [int] NULL,
	[CREAT_DT] [datetime] NOT NULL,
	[CREAT_USER_ID] [int] NOT NULL,
	[UPDT_DT] [datetime] NULL,
	[UPDT_USER_ID] [int] NULL,
 CONSTRAINT [PK_CLNT_VULN_INSTC] PRIMARY KEY CLUSTERED 
(
	[CLNT_VULN_INSTC_KEY] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY] TEXTIMAGE_ON [PRIMARY] 

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([APPL_FL_UPLOAD_LOG_KEY])
REFERENCES [dbo].[APPL_FL_UPLOAD_LOG] ([APPL_FL_UPLOAD_LOG_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([CVE_ID])
REFERENCES [dbo].[CVE] ([CVE_ID])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([ORG_KEY])
REFERENCES [dbo].[ORG] ([ORG_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([OS_KEY])
REFERENCES [dbo].[OS] ([OS_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([RISK_PRBL_CD])
REFERENCES [dbo].[RISK_PRBL] ([RISK_PRBL_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([RMDTN_CST_EFFRT_CD])
REFERENCES [dbo].[RMDTN_CST_EFFRT] ([RMDTN_CST_EFFRT_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([VULN_CATGY_CD])
REFERENCES [dbo].[VULN_CATGY] ([VULN_CATGY_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([ROW_STS_KEY])
REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([VULN_IMP_CD])
REFERENCES [dbo].[VULN_IMP] ([VULN_IMP_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([VULN_INSTC_STS_CD])
REFERENCES [dbo].[VULN_INSTC_STS] ([VULN_INSTC_STS_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([VULN_SEV_CD])
REFERENCES [dbo].[VULN_SEV] ([VULN_SEV_CD])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([VULN_SRC_KEY])
REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_INSTC]  WITH CHECK ADD FOREIGN KEY([CLNT_ENGMT_CD], [SECUR_SRVC_CD])
REFERENCES [dbo].[CLNT_SECUR_SRVC_ENGMT] ([CLNT_ENGMT_CD], [SECUR_SRVC_CD])  
END
ELSE
BEGIN
SELECT -1 Retval
END 
'

 
--  PRINT  (@query1)
 EXECUTE (@Query1)

SET @Query2= '
IF NOT EXISTS (SELECT * FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_SCHEMA = '''+ @SchemaName+'''  AND TABLE_NAME =''CLNT_VULN_SECUR_CTL'')
BEGIN
CREATE TABLE '+ @SchemaName+ '.[CLNT_VULN_SECUR_CTL](
	[CLNT_VULN_INSTC_KEY] [int] NOT NULL,
	[REG_CMPLN_CD] [varchar](20) NOT NULL,
	[REG_CMPLN_VER] [varchar](20) NOT NULL,
	[SECUR_CTL_CD] [varchar](20) NOT NULL,
	[ROW_STS_KEY] [int] NOT NULL,
	[CREAT_DT] [datetime] NULL,
	[CREAT_USER_ID] [int] NULL,
	[UPDT_DT] [datetime] NULL,
	[UPDT_USER_ID] [int] NULL,
 CONSTRAINT [PK_CLNT_VULN_SECUR_CTL] PRIMARY KEY CLUSTERED 
(
	[CLNT_VULN_INSTC_KEY] ASC,
	[REG_CMPLN_CD] ASC,
	[REG_CMPLN_VER] ASC,
	[SECUR_CTL_CD] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_SECUR_CTL]  WITH CHECK ADD FOREIGN KEY([CLNT_VULN_INSTC_KEY])
REFERENCES '+ @SchemaName+ '.[CLNT_VULN_INSTC] ([CLNT_VULN_INSTC_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_SECUR_CTL]  WITH CHECK ADD FOREIGN KEY([ROW_STS_KEY])
REFERENCES [dbo].[MSTR_LKP] ([MSTR_LKP_KEY])

ALTER TABLE '+ @SchemaName+ '.[CLNT_VULN_SECUR_CTL]  WITH CHECK ADD FOREIGN KEY([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD])
REFERENCES [dbo].[SECUR_CTL] ([REG_CMPLN_CD], [REG_CMPLN_VER], [SECUR_CTL_CD]) 
SELECT 1 Retval
END
ELSE
BEGIN
SELECT -1 Retval
END 
'
EXECUTE (@Query2)

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;

