CREATE PROCEDURE [dbo].[Analyst_GetVulnerabilityDetailsByID]
(
	@CLNT_VULN_INSTC_KEY INTEGER,
	@schema				 VARCHAR(50)
)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
DECLARE @Query VARCHAR(max)

			SET		@Query = 'SELECT  A.CLNT_VULN_INSTC_KEY,A.VULN_NM,A.VULN_SRC_KEY,B.LKP_ENTY_DESC VULN_SRC,A.VULN_SEV_CD,C.VULN_SEV_NM,A.IPADR,
					D.VULN_INSTC_STS_CD,D.VULN_INSTC_STS_NM,A.SRC_VULN_SCAN_ID,CONVERT(VARCHAR,A.SRC_VULN_SCAN_STRT_DT,101)STRT_DT,
					CONVERT(VARCHAR,A.SRC_VULN_SCAN_END_DT,101)END_DT,A.SFTW_NM,A.HST_NM,A.DOM_NM,A.APPL_URL,E.OS_NM,A.NETBIOS_NM,
					A.MAC_ADR_NM,A.PORT_NBR
			FROM	'+ @schema+'.CLNT_VULN_INSTC A
			JOIN	MSTR_LKP					 B
			ON		A.VULN_SRC_KEY			=	 B.MSTR_LKP_KEY
			JOIN	VULN_SEV					 C
			ON		C.VULN_SEV_CD			=    A.VULN_SEV_CD
			JOIN	VULN_INSTC_STS				 D
			ON		D.VULN_INSTC_STS_CD		=    A.VULN_INSTC_STS_CD
			JOIN	OS							 E
			ON		A.OS_KEY		=			 E.OS_KEY
			WHERE	A.ROW_STS_KEY			=    1
			AND		A.CLNT_VULN_INSTC_KEY	=    '+CONVERT(VARCHAR,@CLNT_VULN_INSTC_KEY)
			EXECUTE (@Query)
END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END


