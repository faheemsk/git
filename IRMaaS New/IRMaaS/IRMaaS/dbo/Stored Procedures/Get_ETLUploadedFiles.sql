
CREATE PROCEDURE [dbo].[Get_ETLUploadedFiles]
(
      @CLNT_ENGMT_CD	VARCHAR(30),
      @SECUR_SRVC_CD	VARCHAR(10),
      @UPLOAD_USER_ID	INTEGER
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON


SELECT      A.ORG_KEY,ORG_NM,CLNT_ENGMT_CD,SECUR_SRVC_CD,
			A.SRC_KEY,[dbo].[fnGetMasterLkpNameByID](A.SRC_KEY)SourceName,
			A.FL_STS_KEY,[dbo].[fnGetMasterLkpNameByID](A.FL_STS_KEY) FileStatus,
			A.UPLOAD_USER_ID,[dbo].[fnGetUserNameByID](A.UPLOAD_USER_ID) UploadedUser,
			FL_NM,FL_FLDR_PTH,FL_STS_COMMT,FL_UPLOAD_DT

FROM    ETL_FL_UPLOAD_LOG		A
JOIN	ORG						B
ON      A.ORG_KEY		  =     B.ORG_KEY
WHERE   CLNT_ENGMT_CD     =		@CLNT_ENGMT_CD
AND		A.SECUR_SRVC_CD	  =		CASE WHEN ISNULL(@SECUR_SRVC_CD,0) = 0 THEN A.SECUR_SRVC_CD ELSE @SECUR_SRVC_CD END
AND		A.UPLOAD_USER_ID  =		CASE WHEN ISNULL(@UPLOAD_USER_ID,0) = 0 THEN A.UPLOAD_USER_ID ELSE @UPLOAD_USER_ID END



END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;





