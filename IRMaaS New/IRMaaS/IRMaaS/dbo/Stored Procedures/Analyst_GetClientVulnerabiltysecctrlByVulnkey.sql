CREATE PROCEDURE [dbo].[Analyst_GetClientVulnerabiltysecctrlByVulnkey]
(
	@CLNT_VULN_INSTC_KEY	INTEGER,
	@Flag					VARCHAR(1),
	@schema					VARCHAR(50)

	

)
AS
BEGIN


BEGIN TRY
SET NOCOUNT ON
	DECLARE @Query VARCHAR(max)


	IF 	@Flag ='A'	-- ACTIVE AND INACTIVE RECORDS
	BEGIN
	SET		@Query = 'SELECT  A.CLNT_VULN_INSTC_KEY,A.SECUR_CTL_CD,A.CREAT_DT,A.UPDT_DT,A.UPDT_USER_ID,
			B.REG_CMPLN_CD, B.SECUR_CTL_FAM_CD,B.SECUR_CTL_FAM_NM,B.SECUR_OBJ_CD,
			B.SECUR_OBJ_NM,B.SECUR_CTL_NM,B.SECUR_CTL_DESC,A.ROW_STS_KEY,B.REG_CMPLN_VER
	FROM	'+ @schema+'.CLNT_VULN_SECUR_CTL		A
	JOIN	SECUR_CTL				B
	ON		A.SECUR_CTL_CD		=	B.SECUR_CTL_CD
	WHERE	CLNT_VULN_INSTC_KEY	=	'+ CONVERT(VARCHAR,@CLNT_VULN_INSTC_KEY)+'
	AND		A.ROW_STS_KEY		IN(1,2)
	AND		A.REG_CMPLN_CD		= ''HITRUST'' '
--	PRINT    @Query
	EXECUTE (@Query)
	END

	IF 	@Flag ='T'	-- ALL RECORDS
	BEGIN
	SET		@Query = 'SELECT  A.CLNT_VULN_INSTC_KEY,A.SECUR_CTL_CD,A.CREAT_DT,A.UPDT_DT,A.UPDT_USER_ID,
			B.REG_CMPLN_CD, B.SECUR_CTL_FAM_CD,B.SECUR_CTL_FAM_NM,B.SECUR_OBJ_CD,
			B.SECUR_OBJ_NM,B.SECUR_CTL_NM,B.SECUR_CTL_DESC,A.ROW_STS_KEY,B.REG_CMPLN_VER
	FROM	'+ @schema+'.CLNT_VULN_SECUR_CTL		A
	JOIN	SECUR_CTL								B
	ON		A.SECUR_CTL_CD						=	B.SECUR_CTL_CD
	WHERE	CLNT_VULN_INSTC_KEY					=	'+ CONVERT(VARCHAR,@CLNT_VULN_INSTC_KEY)+'
	AND		A.REG_CMPLN_CD						= ''HITRUST'' '
	EXECUTE (@Query)
	END

	IF 	@Flag ='S'	-- ALL SECONDRY COMPLIANCES 
	BEGIN
	SET		@Query = 'SELECT  A.CLNT_VULN_INSTC_KEY,A.SECUR_CTL_CD,A.CREAT_DT,A.UPDT_DT,A.UPDT_USER_ID,
			B.REG_CMPLN_CD, B.SECUR_CTL_FAM_CD,B.SECUR_CTL_FAM_NM,B.SECUR_OBJ_CD,
			B.SECUR_OBJ_NM,B.SECUR_CTL_NM,B.SECUR_CTL_DESC,A.ROW_STS_KEY,B.REG_CMPLN_VER
	FROM	'+ @schema+'.CLNT_VULN_SECUR_CTL		A
	JOIN	SECUR_CTL								B
	ON		A.SECUR_CTL_CD						=	B.SECUR_CTL_CD
	WHERE	CLNT_VULN_INSTC_KEY					=	'+ CONVERT(VARCHAR,@CLNT_VULN_INSTC_KEY)
	-- PRINT   @Query
	EXECUTE (@Query)
	END

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END



