CREATE PROCEDURE [dbo].[Report_InstanceByIssues]
(

	@CLNT_ENGMT_CD	VARCHAR(100),
	@SECUR_SRVC_CD	VARCHAR(100),
	@VULN_SEV_CD	VARCHAR(50)	
	
)
AS
BEGIN

BEGIN TRY
SET NOCOUNT ON

 DECLARE @LiCOUNT INTEGER
	 
 SELECT   A.CLNT_ENGMT_CD,A.SECUR_SRVC_CD,B.VULN_SEV_NM,A.VULN_NM
 FROM	  CLNT_VULN_INSTC			  A
 JOIN	  VULN_SEV					  B
 ON		  A.VULN_SEV_CD				= B.VULN_SEV_CD
 WHERE    A.CLNT_ENGMT_CD			= @CLNT_ENGMT_CD
 AND	  A.SECUR_SRVC_CD			= @SECUR_SRVC_CD
 AND	  A.VULN_SEV_CD				= CASE WHEN @VULN_SEV_CD = '' THEN A.VULN_SEV_CD ELSE @VULN_SEV_CD END
 AND	  A.VULN_INSTC_STS_CD		NOT IN('D','FP')
 AND	  A.VULN_SEV_CD				NOT IN('I')
 GROUP BY A.CLNT_ENGMT_CD,A.SECUR_SRVC_CD,B.VULN_SEV_NM,A.VULN_NM


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END

