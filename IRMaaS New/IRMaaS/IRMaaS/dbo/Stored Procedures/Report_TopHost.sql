CREATE PROCEDURE [dbo].[Report_TopHost]
(

	@CLNT_ENGMT_CD	VARCHAR(100),
	@SECUR_SRVC_CD	VARCHAR(100),	
	@schema			VARCHAR(50)		
)
AS
BEGIN

BEGIN TRY
SET NOCOUNT ON
 DECLARE @Query VARCHAR(max)
 DECLARE @LiCOUNT INTEGER
	SET		@Query ='		 
    SELECT   TOP 5 CLNT_ENGMT_CD,SECUR_SRVC_CD,IPADR HST_NM,SUM(VULN_OVALL_SCOR),
			 COUNT(CASE WHEN VULN_SEV_CD=''C'' THEN CLNT_VULN_INSTC_KEY ELSE NULL END)''Critical'',
			 COUNT(CASE WHEN VULN_SEV_CD=''H'' THEN CLNT_VULN_INSTC_KEY ELSE NULL END)''High'',
			 COUNT(CASE WHEN VULN_SEV_CD=''M'' THEN CLNT_VULN_INSTC_KEY ELSE NULL END)''Medium'',
			 COUNT(CASE WHEN VULN_SEV_CD=''L'' THEN CLNT_VULN_INSTC_KEY ELSE NULL END)''Low''
    FROM     '+ @schema+'.CLNT_VULN_INSTC
	WHERE    CLNT_ENGMT_CD			= '''+@CLNT_ENGMT_CD +'''
	AND		 SECUR_SRVC_CD			= '''+ @SECUR_SRVC_CD +'''
	AND		 VULN_INSTC_STS_CD		NOT IN(''D'',''FP'')
	AND		 VULN_SEV_CD			NOT IN(''I'')
	AND		 ISNULL(IPADR,'''')		<> ''''
	AND	     ROW_STS_KEY				=  1
    GROUP BY CLNT_ENGMT_CD,SECUR_SRVC_CD,IPADR
    ORDER BY SUM(VULN_OVALL_SCOR) DESC'
	EXECUTE (@Query)

END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END

