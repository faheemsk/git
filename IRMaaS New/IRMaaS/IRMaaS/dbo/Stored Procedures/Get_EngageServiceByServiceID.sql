CREATE PROCEDURE [dbo].[Get_EngageServiceByServiceID]
(
	@CLNT_ENGMT_CD	VARCHAR(30),
	@SECUR_SRVC_CD	VARCHAR(10),
	@USER_ID		INTEGER
	
)
AS
BEGIN
BEGIN TRY
SET NOCOUNT ON


SELECT A.CLNT_ENGMT_CD,A.CLNT_ENGMT_NM,A.CLNT_ORG_KEY,B.ORG_NM,C.SECUR_PKG_CD,C.SECUR_PKG_NM,E.SECUR_SRVC_CD,E.SECUR_SRVC_NM,
	   D.SRVC_EST_STRT_DT,D.SRVC_EST_END_DT,A.AGR_DT,D.FL_LCK_IND
FROM   dbo.CLNT_ENGMT		A
JOIN   dbo.ORG				B
ON	   A.CLNT_ORG_KEY	 =  B.ORG_KEY
JOIN   dbo.SECUR_PKG		C
ON	   A.SECUR_PKG_CD	 =  C.SECUR_PKG_CD
JOIN   dbo.CLNT_SECUR_SRVC_ENGMT D
ON	   A.CLNT_ENGMT_CD	 =  D.CLNT_ENGMT_CD
JOIN   dbo.SECUR_SRVC		E
ON	   D.SECUR_SRVC_CD	 =  E.SECUR_SRVC_CD
WHERE  A.CLNT_ENGMT_CD	 =  @CLNT_ENGMT_CD
AND	   E.SECUR_SRVC_CD	 =  @SECUR_SRVC_CD


END TRY

BEGIN CATCH

    DECLARE @ErrorNumber INT = ERROR_NUMBER();
    DECLARE @ErrorLine INT = ERROR_LINE();
    DECLARE @ErrorMessage NVARCHAR(4000) = ERROR_MESSAGE();
    DECLARE @ErrorSeverity INT = ERROR_SEVERITY();
    DECLARE @ErrorState INT = ERROR_STATE();

    PRINT 'Actual error number: ' + CAST(@ErrorNumber AS VARCHAR(10));
    PRINT 'Actual line number: ' + CAST(@ErrorLine AS VARCHAR(10));

    RAISERROR(@ErrorMessage, @ErrorSeverity, @ErrorState);
  END CATCH
-- COMMIT TRANSACTION
END;





